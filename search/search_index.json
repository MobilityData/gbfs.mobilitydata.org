{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"GBFS: A Common Language for Shared Mobility \u00b6 Specification Toolbox Learn Participate GBFS provides a common language for shared mobility operators to share information about services available to travelers. GBFS includes information about vehicles (bicycles, scooters, moped, and cars), stations, pricing and more: Vehicle, station, and dock locations and availability Vehicle characteristics \u2013 form factor, type of power, distance that can be traveled Service pricing and rental terms Geofenced areas for rules related to speed, parking, and prohibited zones GBFS data is used by trip planning and Mobility as a Service (MaaS) applications, to provide information travelers need to discover and use shared mobility. Public GBFS APIs enable the integration of shared mobility services with public transportation, allowing users to make first-mile, last-mile connections. In addition, GBFS provides municipalities and agencies with a standardized way to ingest, analyze, and compare data generated by shared mobility systems. Real-time information in a standardized format GBFS enables the exchange of information in a way that ensures all parties agree on what the information represents. You can think of it like a dictionary, where each term has a definition and a set of rules for how it can be used. GBFS is a real-time data specification that describes the current status of a mobility system. GBFS does not support, and is not intended for, historical data such as trip or maintenance records.","title":"Home"},{"location":"#gbfs-a-common-language-for-shared-mobility","text":"Specification Toolbox Learn Participate GBFS provides a common language for shared mobility operators to share information about services available to travelers. GBFS includes information about vehicles (bicycles, scooters, moped, and cars), stations, pricing and more: Vehicle, station, and dock locations and availability Vehicle characteristics \u2013 form factor, type of power, distance that can be traveled Service pricing and rental terms Geofenced areas for rules related to speed, parking, and prohibited zones GBFS data is used by trip planning and Mobility as a Service (MaaS) applications, to provide information travelers need to discover and use shared mobility. Public GBFS APIs enable the integration of shared mobility services with public transportation, allowing users to make first-mile, last-mile connections. In addition, GBFS provides municipalities and agencies with a standardized way to ingest, analyze, and compare data generated by shared mobility systems. Real-time information in a standardized format GBFS enables the exchange of information in a way that ensures all parties agree on what the information represents. You can think of it like a dictionary, where each term has a definition and a set of rules for how it can be used. GBFS is a real-time data specification that describes the current status of a mobility system. GBFS does not support, and is not intended for, historical data such as trip or maintenance records.","title":"GBFS: A Common Language for Shared Mobility"},{"location":"participate/","text":"Participate \u00b6 Contributing to GBFS \u00b6 GBFS is an open source project developed under a consensus-based governance model. Contributors come from across the shared mobility industry, public sector, civic technology and elsewhere. Anyone can propose a change to the specification by opening a pull request on the GBFS GitHub repository. All change proposals are subject to the GBFS governance process. The proposal must remain open for a period of time to allow the committee to give feedback and iterate on the proposed change. Once a consensus is reached, the change goes to a vote. At least 3 votes in favor, and none opposed, are required for the change to be adopted. One vote must be from a data producer and one from a data consumer. The party proposing the change is not eligible to vote. When a vote passes, the change becomes part of a Release Candidate. Once both a data producer and a date consumer have implemented the change, the Release Candidate becomes an official version release. The full text of the project governance and change process can be found on the project GitHub repository. Comments and Questions \u00b6 Comments or questions can be addressed to the community by opening an issue on the project GitHub repository. Proposals for changes or additions to the specification can be made through GitHub pull requests . Questions can also be addressed to the community via the public GBFS Slack channel or to the shared mobility staff at MobilityData: sharedmobility@mobilitydata.org . Contributing to this site \u00b6 To propose changes or additions to this site, open an issue on the MobilityData GBFS Documentation repository. Alternatively, you can provide feedback on this site by using the form below. Contact \u00b6 Specification and technical questions: sharedmobility@mobilitydata.org Documentation needs: documentation@mobilitydata.org Join MobilityData's public slack channel About MobilityData \u00b6 This site is maintained by MobilityData , a Canadian non-profit that aims to broaden adoption and increase the functionality of the GTFS & GBFS data formats. MobilityData accelerates the development and adoption of mobility specifications by providing technical know-how and tools. We also create new specifications, host training, and develop working groups in response to the mobility industry\u2019s needs. Learn more at mobilitydata.org . License \u00b6 Except as otherwise noted, the content of this site is licensed under the Creative Commons Attribution 3.0 License .","title":"Participate"},{"location":"participate/#participate","text":"","title":"Participate"},{"location":"participate/#contributing-to-gbfs","text":"GBFS is an open source project developed under a consensus-based governance model. Contributors come from across the shared mobility industry, public sector, civic technology and elsewhere. Anyone can propose a change to the specification by opening a pull request on the GBFS GitHub repository. All change proposals are subject to the GBFS governance process. The proposal must remain open for a period of time to allow the committee to give feedback and iterate on the proposed change. Once a consensus is reached, the change goes to a vote. At least 3 votes in favor, and none opposed, are required for the change to be adopted. One vote must be from a data producer and one from a data consumer. The party proposing the change is not eligible to vote. When a vote passes, the change becomes part of a Release Candidate. Once both a data producer and a date consumer have implemented the change, the Release Candidate becomes an official version release. The full text of the project governance and change process can be found on the project GitHub repository.","title":"Contributing to GBFS"},{"location":"participate/#comments-and-questions","text":"Comments or questions can be addressed to the community by opening an issue on the project GitHub repository. Proposals for changes or additions to the specification can be made through GitHub pull requests . Questions can also be addressed to the community via the public GBFS Slack channel or to the shared mobility staff at MobilityData: sharedmobility@mobilitydata.org .","title":"Comments and Questions"},{"location":"participate/#contributing-to-this-site","text":"To propose changes or additions to this site, open an issue on the MobilityData GBFS Documentation repository. Alternatively, you can provide feedback on this site by using the form below.","title":"Contributing to this site"},{"location":"participate/#contact","text":"Specification and technical questions: sharedmobility@mobilitydata.org Documentation needs: documentation@mobilitydata.org Join MobilityData's public slack channel","title":"Contact"},{"location":"participate/#about-mobilitydata","text":"This site is maintained by MobilityData , a Canadian non-profit that aims to broaden adoption and increase the functionality of the GTFS & GBFS data formats. MobilityData accelerates the development and adoption of mobility specifications by providing technical know-how and tools. We also create new specifications, host training, and develop working groups in response to the mobility industry\u2019s needs. Learn more at mobilitydata.org .","title":"About MobilityData"},{"location":"participate/#license","text":"Except as otherwise noted, the content of this site is licensed under the Creative Commons Attribution 3.0 License .","title":"License"},{"location":"learn/","text":"Learn \u00b6 White Papers GBFS and Shared Mobility Data Policy GBFS and Shared Mobility Data Policy for European Cities Frequently Asked Questions FAQ - Quick answers to common questions about GBFS, it's development and use. Articles English GBFS v2.3-RC is here to fix (some) of your problems - But even though we love v2.2, GBFS was ready for a few improvements. Let us introduce you to v2.3-RC! Cities, GBFS v2.2 is here for you - What you\u2019re missing out on if you\u2019re still stuck with v1.0 data. The price is right! - Previously in GBFS, pricing wasn\u2019t described in much detail. To put it simply, operators could only share a sentence that included the pricing information. Espa\u00f1ol GBFS v2.3-RC est\u00e1 aqu\u00ed para solucionar (algunos) de sus problemas - Nos encanta ver los feeds de GBFS v2.2 aparecer en todo el mundo, impulsando tantas nuevas integraciones de planificaci\u00f3n de viajes y facilitando a los viajeros a encontrar su bicicleta, scooter, ciclomotor o autom\u00f3vil compartido m\u00e1s cercano. Ciudades, la v2.2 del GBFS est\u00e1 aqu\u00ed para ustedes - Vea lo que se est\u00e1 perdiendo si est\u00e1 atorado con los datos de la v1.0. Fran\u00e7ais GBFS v2.3-RC est ici pour r\u00e9soudre (certains de) vos probl\u00e8mes - Mais m\u00eame si nous adorons v2.2, GBFS \u00e9tait pr\u00eat pour quelques am\u00e9liorations. Laissez-nous vous pr\u00e9senter \u00e0 v2.3-RC ! Municipalit\u00e9s, le GBFS v2.2 est l\u00e0 pour vous aider - Tout ce qu\u2019il vous manque si vous \u00eates encore coinc\u00e9 avec des donn\u00e9es en v1.0. Portugu\u00eas GBFS v2.3-RC est\u00e1 aqui para resolver (alguns) dos seus problemas - Mas embora amamos a v2.2, a GBFS estava pronta para algumas melhorias. Permita-nos apresentar a v2.3-RC!","title":"Learn"},{"location":"learn/#learn","text":"White Papers GBFS and Shared Mobility Data Policy GBFS and Shared Mobility Data Policy for European Cities Frequently Asked Questions FAQ - Quick answers to common questions about GBFS, it's development and use. Articles English GBFS v2.3-RC is here to fix (some) of your problems - But even though we love v2.2, GBFS was ready for a few improvements. Let us introduce you to v2.3-RC! Cities, GBFS v2.2 is here for you - What you\u2019re missing out on if you\u2019re still stuck with v1.0 data. The price is right! - Previously in GBFS, pricing wasn\u2019t described in much detail. To put it simply, operators could only share a sentence that included the pricing information. Espa\u00f1ol GBFS v2.3-RC est\u00e1 aqu\u00ed para solucionar (algunos) de sus problemas - Nos encanta ver los feeds de GBFS v2.2 aparecer en todo el mundo, impulsando tantas nuevas integraciones de planificaci\u00f3n de viajes y facilitando a los viajeros a encontrar su bicicleta, scooter, ciclomotor o autom\u00f3vil compartido m\u00e1s cercano. Ciudades, la v2.2 del GBFS est\u00e1 aqu\u00ed para ustedes - Vea lo que se est\u00e1 perdiendo si est\u00e1 atorado con los datos de la v1.0. Fran\u00e7ais GBFS v2.3-RC est ici pour r\u00e9soudre (certains de) vos probl\u00e8mes - Mais m\u00eame si nous adorons v2.2, GBFS \u00e9tait pr\u00eat pour quelques am\u00e9liorations. Laissez-nous vous pr\u00e9senter \u00e0 v2.3-RC ! Municipalit\u00e9s, le GBFS v2.2 est l\u00e0 pour vous aider - Tout ce qu\u2019il vous manque si vous \u00eates encore coinc\u00e9 avec des donn\u00e9es en v1.0. Portugu\u00eas GBFS v2.3-RC est\u00e1 aqui para resolver (alguns) dos seus problemas - Mas embora amamos a v2.2, a GBFS estava pronta para algumas melhorias. Permita-nos apresentar a v2.3-RC!","title":"Learn"},{"location":"learn/faq/","text":"FAQ \u00b6 What is GBFS? \u00b6 The General BIkeshare Feed Specification, or GBFS, is an open data standard for shared mobility information, developed through a consensus-based process on GitHub. GBFS enables the exchange of information in a way that ensures all parties agree on what the information represents. You can think of it like a dictionary, where each term has a definition and a set of rules for how it can be used. GBFS is a real-time data specification. It describes the current status of a mobility system at this point in time. GBFS does not support, and is not intended for historical data such as trip or maintenance records. Open Data Standards \u00b6 What is an open data standard? An open data standard is a documented set of requirements that describe how people and organizations can produce and distribute data on a particular subject. Open data standards are typically developed \u201cin the open\u201d meaning the public has a way to contribute. What open data standards is GBFS built on? Follow any of links the below to learn more about the open data standards used by GBFS: JSON GeoJSON POSIX IETF BCP 47 WGS84 IANA Time Zones OSM Opening Hours ISO 3166 ISO 8601 ITU E.164 What is JSON? JSON stands for Javascript Object Notation. It is a lightweight text format for storing and transporting data, that is easy to understand and read. More information about JSON can be found at https://www.w3schools.com/js/js_json_intro.asp . What is GeoJSON? GeoJSON is an open data standard for denoting geographical features (lines and polygons) and their attributes in JSON format. More information on GeoJSON can be found at https://geojson.org/ . Uses of GBFS \u00b6 Why was GBFS created? GBFS was created to make real-time shared mobility information available in a standardized format to support the development of traveler facing applications. GBFS specifies how shared mobility data should be structured for proper interoperability of systems. Before the creation of GBFS, shared mobility systems each used different proprietary data formats, making it difficult for application developers to create tools for travellers. Why is it important for GBFS data to be openly available? Public GBFS feeds help facilitate the discovery of mobility services, increasing access to shared mobility. Third party application built using these data can lead to increased visibility and customer acquisition for shared mobility services. Public data provide transparency around businesses that are permitted to operate in the public right of way. This transparency can increase public trust of shared mobility operators and their services. Do private GBFS feeds exist? GBFS is a specification for public data, however some GBFS producers have elected to publish private feeds that require authentication using an API key or login. Great care has been taken in the development of GBFS to ensure that data contained in the specification does not adversely affect user privacy. Requiring authentication of GBFS data greatly diminishes its value as a source of public information. How is GBFS different from MDS? GBFS is a real-time public data specification for consumer-facing applications, whereas MDS is not public data and is intended for use only by regulators. GBFS provides real-time data to support the discovery and use of mobility systems by travelers. MDS contains both real-time and historical data that is used by cities to monitor and regulate shared mobility operators. All MDS compatible Provider feeds must also publish a public GBFS feed. What are the benefits of using GBFS? For providers, GBFS means an end to a patch-work of regulation that requires different data in different formats for each city in which they operate. Standardization provides assurance to providers that data requests can be clearly defined and are fully implementable. As a consensus-based, open source standard, providers have an equal voice along with cities in the ongoing development of the GBFS specification. Comprehensive documentation and resources are available to cities and providers alike to aid in implementation. For consumers, data standardization allows application developers to aggregate data from multiple providers across multiple markets. GBFS can eliminate the need for bespoke solutions for each mobility service. For cities, requiring GBFS data as part of a shared mobility program can help to increase access to shared mobility services. GBFS provides municipalities and agencies with a standardized way to ingest, analyze, and compare data generated by shared mobility systems. Standardization of mobility data through GBFS has resulted in a growing marketplace of data management software and services. These products and services are used to assist cities in working with GBFS data to effectively manage and regulate mobility services. Does GBFS contain personal data? GBFS does not contain personal data. Given the real-time nature of the data, as well as other safety measures such as rotating vehicle IDs, a user\u2019s information will never be shared and a user or individual trips will not be able to be traced. Does GBFS contain operational data? GBFS does not contain operational data. GBFS only contains real-time data that is beneficial to the customer for their trips. GBFS Data Sources \u00b6 Where can I find GBFS data? A catalog of public GBFS data sources, know as systems.csv , is maintained on the GBFS GitHub repository. Why is systems.csv important? The systems.csv catalog is the primary index of GBFS data sources, it allows developers to build software on top of it, provides a source for research projects, and demonstrates the reach of the specification worldwide. Who maintains systems.csv? The systems.csv catalog is currently maintained by MobilityData and the GBFS community. If you have or are aware of a system that does not appear on the list please add it by opening a pull request or notify MoblityData at: sharedmobility@mobilitydata.org . Are all of the systems in systems.csv compliant with the specification? No - there is no compliance or validation requirement for inclusion in systems.csv. To be considered fully compliant with GBFS, systems MUST have an entry in the systems.csv file. Shared Mobility \u00b6 What is shared mobility? Shared mobility in the context of GBFS refers to transportation services where resources like vehicles are shared between users. Examples of the types shared mobility services represented by GBFS are shared bikes, scooters, mopeds and cars. What is shared micromobility? Shared micromobility typically refers to small, lightweight vehicles that are hired by the end user. Examples include bikes, ebikes, scooters, etc. Why is GBFS named GBFS if it covers modes other than bikes? While GBFS, or the General Bikeshare Feed Specification, has its roots in bikesharing, it has been expanded as the shared mobility industry has evolved to encompass all forms of shared mobility vehicles. The GBFS name is now familiar across the industry and the community had agreed that a name change at this point would be a source of confusion. Governance and Change Process \u00b6 How is the specification updated? GBFS is an open source project developed under a consensus-based governance model. Contributors come from across the shared mobility industry, public sector, civic technology and elsewhere. Proposals for changes or additions to the specification are made through Pull Requests. Once the community has had adequate time to comment and iterate on a proposal, the proposal is put to a vote. If the proposal passes, it becomes part of a release candidate. When the release candidate has been successfully implemented in a public data set, it becomes an official release. The complete governance and change process can be found here . How can I propose a change to the specification? If you are interested in proposing a modification, you can do so at the GBFS GitHub repo. If you do not have the solution to the problem and would like to start a discussion, we recommend you open an issue . If you have a solution and would like to propose a change, please open a Pull Request . GitHub \u00b6 What is GitHub? GitHub is a website and service that allows people to work collaboratively on software and other projects. GitHub provides discussion forums and supports version control, which is an important part of managing and storing versions of a software project. What is a repository? A repository, often called a \u201crepo\u201d, is a place where all of a project's documents and versions are stored. What is a GitHub issue? An issue on GitHub is a place for discussion. Anyone can open an issue to spark conversation about the specification, be it a direction you would like to see the spec take, or a problem you are experiencing in using the specification. What is a GitHub pull request? A pull request is a request to change the specification. Anyone can open a pull request and open the floor to comments and discussion. Pull requests are then voted on to see whether or not they should be merged into the specification. Working with GBFS \u00b6 Best Practices \u00b6 What are GBFS Best Practices? GBFS Best Practices are recommendations we provide that are not required under the specification, but that make your data amazing! They are identified in the documentation using the keywords \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", and \"NOT RECOMMENDED\" and are to be interpreted as described in RFC2119 , BCP 14 and RFC8174 when, and only when, they appear in all capitals, as shown here. Why are GBFS Best Practices important? GBFS Best Practices are important so that the end user has access to the most reliable and complete information without compromising their privacy. Do GBFS validator tools check for conformance with Best Practices? Validator tools do not check for conformance with Best Practices, since they are not explicit in the specification. It is recommended to use a manual approach to ensure conformance with Best Practices. What should I do if I notice a GBFS data feed does not conform to Best Practices? If you notice a data feed does not conform to Best Practices, you can try to contact the publisher using their feed contact email found in system_information.json . How can I to propose a modification/addition to Best Practices? If you would like to propose a modification to Best Practices, please do so by either opening an Issue or Pull Request via GitHub. What does it mean to rotate bike_id and why is it important? The bike_id or vehicle_id field is a unique identifier for each vehicle in a system. Rotating bike_id means that a vehicle\u2019s ID will change to a random string each time a rental ends. Use of persistent vehicle IDs poses a threat to user privacy. This is especially important for dockless mobility systems, where a user may end or begin their trip in front of their home or other frequently visited locations. Failure to rotate these IDs after each rental can lead to the re-identification of trip origin and destination pairs which may compromise user privacy. Validation \u00b6 What does it mean to validate a GBFS feed? Using a validator ensures that your data conforms to the requirements set out by the specification. In a nutshell, a validator ensures you have a valid GBFS feed. Does MobilityData have a GBFS validator? Yes. The Canonical GBFS Validator is a tool to check the conformity of a GBFS feed against the official specification including past releases and release candidates. MobilityData \u00b6 What is MobilityData? MobilityData is a non-profit organization that improves and extends data formats, making them easier to use through training, documentation, open-source software, online services, and more. We also create spaces for knowledge exchange, bringing together public and private stakeholders to build the mobility of today and tomorrow. How do I get involved? There are a number of ways you can get involved with our organization and the Shared Mobility community! Learn more about us: www.mobilitydata.org Join our slack: bit.ly/mobilitydata-slack Join us on Github: github.com/NABSA/gbfs Become a member: bit.ly/Membership-form-2021","title":"FAQ"},{"location":"learn/faq/#faq","text":"","title":"FAQ"},{"location":"learn/faq/#what-is-gbfs","text":"The General BIkeshare Feed Specification, or GBFS, is an open data standard for shared mobility information, developed through a consensus-based process on GitHub. GBFS enables the exchange of information in a way that ensures all parties agree on what the information represents. You can think of it like a dictionary, where each term has a definition and a set of rules for how it can be used. GBFS is a real-time data specification. It describes the current status of a mobility system at this point in time. GBFS does not support, and is not intended for historical data such as trip or maintenance records.","title":"What is GBFS?"},{"location":"learn/faq/#open-data-standards","text":"What is an open data standard? An open data standard is a documented set of requirements that describe how people and organizations can produce and distribute data on a particular subject. Open data standards are typically developed \u201cin the open\u201d meaning the public has a way to contribute. What open data standards is GBFS built on? Follow any of links the below to learn more about the open data standards used by GBFS: JSON GeoJSON POSIX IETF BCP 47 WGS84 IANA Time Zones OSM Opening Hours ISO 3166 ISO 8601 ITU E.164 What is JSON? JSON stands for Javascript Object Notation. It is a lightweight text format for storing and transporting data, that is easy to understand and read. More information about JSON can be found at https://www.w3schools.com/js/js_json_intro.asp . What is GeoJSON? GeoJSON is an open data standard for denoting geographical features (lines and polygons) and their attributes in JSON format. More information on GeoJSON can be found at https://geojson.org/ .","title":"Open Data Standards"},{"location":"learn/faq/#uses-of-gbfs","text":"Why was GBFS created? GBFS was created to make real-time shared mobility information available in a standardized format to support the development of traveler facing applications. GBFS specifies how shared mobility data should be structured for proper interoperability of systems. Before the creation of GBFS, shared mobility systems each used different proprietary data formats, making it difficult for application developers to create tools for travellers. Why is it important for GBFS data to be openly available? Public GBFS feeds help facilitate the discovery of mobility services, increasing access to shared mobility. Third party application built using these data can lead to increased visibility and customer acquisition for shared mobility services. Public data provide transparency around businesses that are permitted to operate in the public right of way. This transparency can increase public trust of shared mobility operators and their services. Do private GBFS feeds exist? GBFS is a specification for public data, however some GBFS producers have elected to publish private feeds that require authentication using an API key or login. Great care has been taken in the development of GBFS to ensure that data contained in the specification does not adversely affect user privacy. Requiring authentication of GBFS data greatly diminishes its value as a source of public information. How is GBFS different from MDS? GBFS is a real-time public data specification for consumer-facing applications, whereas MDS is not public data and is intended for use only by regulators. GBFS provides real-time data to support the discovery and use of mobility systems by travelers. MDS contains both real-time and historical data that is used by cities to monitor and regulate shared mobility operators. All MDS compatible Provider feeds must also publish a public GBFS feed. What are the benefits of using GBFS? For providers, GBFS means an end to a patch-work of regulation that requires different data in different formats for each city in which they operate. Standardization provides assurance to providers that data requests can be clearly defined and are fully implementable. As a consensus-based, open source standard, providers have an equal voice along with cities in the ongoing development of the GBFS specification. Comprehensive documentation and resources are available to cities and providers alike to aid in implementation. For consumers, data standardization allows application developers to aggregate data from multiple providers across multiple markets. GBFS can eliminate the need for bespoke solutions for each mobility service. For cities, requiring GBFS data as part of a shared mobility program can help to increase access to shared mobility services. GBFS provides municipalities and agencies with a standardized way to ingest, analyze, and compare data generated by shared mobility systems. Standardization of mobility data through GBFS has resulted in a growing marketplace of data management software and services. These products and services are used to assist cities in working with GBFS data to effectively manage and regulate mobility services. Does GBFS contain personal data? GBFS does not contain personal data. Given the real-time nature of the data, as well as other safety measures such as rotating vehicle IDs, a user\u2019s information will never be shared and a user or individual trips will not be able to be traced. Does GBFS contain operational data? GBFS does not contain operational data. GBFS only contains real-time data that is beneficial to the customer for their trips.","title":"Uses of GBFS"},{"location":"learn/faq/#gbfs-data-sources","text":"Where can I find GBFS data? A catalog of public GBFS data sources, know as systems.csv , is maintained on the GBFS GitHub repository. Why is systems.csv important? The systems.csv catalog is the primary index of GBFS data sources, it allows developers to build software on top of it, provides a source for research projects, and demonstrates the reach of the specification worldwide. Who maintains systems.csv? The systems.csv catalog is currently maintained by MobilityData and the GBFS community. If you have or are aware of a system that does not appear on the list please add it by opening a pull request or notify MoblityData at: sharedmobility@mobilitydata.org . Are all of the systems in systems.csv compliant with the specification? No - there is no compliance or validation requirement for inclusion in systems.csv. To be considered fully compliant with GBFS, systems MUST have an entry in the systems.csv file.","title":"GBFS Data Sources"},{"location":"learn/faq/#shared-mobility","text":"What is shared mobility? Shared mobility in the context of GBFS refers to transportation services where resources like vehicles are shared between users. Examples of the types shared mobility services represented by GBFS are shared bikes, scooters, mopeds and cars. What is shared micromobility? Shared micromobility typically refers to small, lightweight vehicles that are hired by the end user. Examples include bikes, ebikes, scooters, etc. Why is GBFS named GBFS if it covers modes other than bikes? While GBFS, or the General Bikeshare Feed Specification, has its roots in bikesharing, it has been expanded as the shared mobility industry has evolved to encompass all forms of shared mobility vehicles. The GBFS name is now familiar across the industry and the community had agreed that a name change at this point would be a source of confusion.","title":"Shared Mobility"},{"location":"learn/faq/#governance-and-change-process","text":"How is the specification updated? GBFS is an open source project developed under a consensus-based governance model. Contributors come from across the shared mobility industry, public sector, civic technology and elsewhere. Proposals for changes or additions to the specification are made through Pull Requests. Once the community has had adequate time to comment and iterate on a proposal, the proposal is put to a vote. If the proposal passes, it becomes part of a release candidate. When the release candidate has been successfully implemented in a public data set, it becomes an official release. The complete governance and change process can be found here . How can I propose a change to the specification? If you are interested in proposing a modification, you can do so at the GBFS GitHub repo. If you do not have the solution to the problem and would like to start a discussion, we recommend you open an issue . If you have a solution and would like to propose a change, please open a Pull Request .","title":"Governance and Change Process"},{"location":"learn/faq/#github","text":"What is GitHub? GitHub is a website and service that allows people to work collaboratively on software and other projects. GitHub provides discussion forums and supports version control, which is an important part of managing and storing versions of a software project. What is a repository? A repository, often called a \u201crepo\u201d, is a place where all of a project's documents and versions are stored. What is a GitHub issue? An issue on GitHub is a place for discussion. Anyone can open an issue to spark conversation about the specification, be it a direction you would like to see the spec take, or a problem you are experiencing in using the specification. What is a GitHub pull request? A pull request is a request to change the specification. Anyone can open a pull request and open the floor to comments and discussion. Pull requests are then voted on to see whether or not they should be merged into the specification.","title":"GitHub"},{"location":"learn/faq/#working-with-gbfs","text":"","title":"Working with GBFS"},{"location":"learn/faq/#best-practices","text":"What are GBFS Best Practices? GBFS Best Practices are recommendations we provide that are not required under the specification, but that make your data amazing! They are identified in the documentation using the keywords \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", and \"NOT RECOMMENDED\" and are to be interpreted as described in RFC2119 , BCP 14 and RFC8174 when, and only when, they appear in all capitals, as shown here. Why are GBFS Best Practices important? GBFS Best Practices are important so that the end user has access to the most reliable and complete information without compromising their privacy. Do GBFS validator tools check for conformance with Best Practices? Validator tools do not check for conformance with Best Practices, since they are not explicit in the specification. It is recommended to use a manual approach to ensure conformance with Best Practices. What should I do if I notice a GBFS data feed does not conform to Best Practices? If you notice a data feed does not conform to Best Practices, you can try to contact the publisher using their feed contact email found in system_information.json . How can I to propose a modification/addition to Best Practices? If you would like to propose a modification to Best Practices, please do so by either opening an Issue or Pull Request via GitHub. What does it mean to rotate bike_id and why is it important? The bike_id or vehicle_id field is a unique identifier for each vehicle in a system. Rotating bike_id means that a vehicle\u2019s ID will change to a random string each time a rental ends. Use of persistent vehicle IDs poses a threat to user privacy. This is especially important for dockless mobility systems, where a user may end or begin their trip in front of their home or other frequently visited locations. Failure to rotate these IDs after each rental can lead to the re-identification of trip origin and destination pairs which may compromise user privacy.","title":"Best Practices"},{"location":"learn/faq/#validation","text":"What does it mean to validate a GBFS feed? Using a validator ensures that your data conforms to the requirements set out by the specification. In a nutshell, a validator ensures you have a valid GBFS feed. Does MobilityData have a GBFS validator? Yes. The Canonical GBFS Validator is a tool to check the conformity of a GBFS feed against the official specification including past releases and release candidates.","title":"Validation"},{"location":"learn/faq/#mobilitydata","text":"What is MobilityData? MobilityData is a non-profit organization that improves and extends data formats, making them easier to use through training, documentation, open-source software, online services, and more. We also create spaces for knowledge exchange, bringing together public and private stakeholders to build the mobility of today and tomorrow. How do I get involved? There are a number of ways you can get involved with our organization and the Shared Mobility community! Learn more about us: www.mobilitydata.org Join our slack: bit.ly/mobilitydata-slack Join us on Github: github.com/NABSA/gbfs Become a member: bit.ly/Membership-form-2021","title":"MobilityData"},{"location":"learn/white-papers/","text":"White Papers \u00b6 GBFS and Shared Mobility Data Policy GBFS and Shared Mobility Data Policy for European Cities","title":"White Papers"},{"location":"learn/white-papers/#white-papers","text":"GBFS and Shared Mobility Data Policy GBFS and Shared Mobility Data Policy for European Cities","title":"White Papers"},{"location":"learn/white-papers/data-policy-europe/","text":"GBFS and Shared Mobility Data Policy for European Cities \u00b6 Overview \u00b6 Securing access to mobility data is an important part of a shared mobility program. Public access to mobility data builds trust in mobility programs and increases shared mobility adoption. Writing effective policy can ensure that mobility data is both accurate and accessible. This report is intended primarily for individuals responsible for shared mobility procurement and policies at cities or other local authorities. The report provides a foundational understanding of how GBFS supports seamless, sustainable mobility options and how to leverage open data\u2019s potential when writing policy that can influence shared mobility adoption and practice. This report is applicable primarily to cities in Europe. For American stakeholders , see our report on data policy ofr American cities . GBFS makes it easy for travelers to find and use shared mobility. \u00b6 Since it was first established in 2015, GBFS has become the de facto standard for shared mobility data. The specification is now in use in hundreds of cities in over 40 countries worldwide. Policymakers should require public GBFS APIs when permitting or licensing shared mobility operations. GBFS provides a common language for shared mobility operators to share information about options available to travelers. GBFS includes information about vehicles (bicycles, scooters, moped, and cars), stations, and more: Vehicle, station, and dock locations and availability Vehicle characteristics \u2013 type of power, distance that can be traveled on remaining charge Geofenced areas for rules related to speed, parking, and prohibited zones These data are used by trip planning and Mobility as a Service (MaaS) applications, to provide travelers with the information they need to discover and choose shared mobility. Public GBFS APIs enable the integration of shared mobility services with public transportation, allowing users to make first-mile, last-mile connections and multi-modal journeys, making more potential car-free journeys possible. In addition, GBFS provides local authorities and agencies with a standardized way to ingest, analyze, and compare data generated by shared mobility systems. Advancements in shared mobility platforms have resulted in the generation of vast quantities of mobility data. These data have become an essential part of policy making and regulation of shared mobility operators. Data from shared mobility operators help us to understand how these services impact public safety, and whether or not they advance equity, innovation, sustainability, and other policy goals. Public access to shared mobility data increases transparency and makes operators accountable for the services they operate in the public right-of-way. GBFS has been designed specifically for use as a source for public data. To make GBFS APIs truly public, they must be made freely available on the open internet and require no API key, token, or other means of access or authentication. Feeds containing sensitive data that require authentication are not a substitute for public APIs. GBFS enables the exchange of information in a way that ensures all parties agree on what the information represents. You can think of it like a dictionary, where each term has a definition and a set of rules for how it can be used. GBFS is a real-time data specification that describes the current status of a mobility system. GBFS does not support, and is not intended for, historical data such as trip or maintenance records. GBFS reduces administrative burdens on cities, reduces compliance burdens on operators. \u00b6 Unlike bespoke data sharing requirements of the past, the standardization of shared mobility data benefits both cities and operators alike. Standardization of mobility data through GBFS has resulted in a growing marketplace of data management software and services, providing a better quality and a greater variety of available solutions. These products and services are used to assist mobility regulation bodies and public authorities in working with GBFS data to effectively manage and regulate mobility services. Policies requiring standardized open data can prevent the creation of walled gardens, a procurement scenario where cities are locked-in to a specific vendor\u2019s proprietary tools or services. Open, standardized data is portable, allowing cities to change operators if a service fails to meet expectations. For operators, standardization means an end to a patch-work of regulation that requires different data in different formats for each city in which they operate. Standardization provides assurance to operators that data requests can be clearly defined and are fully implementable. GBFS also carries the potential to bring more users to an operator\u2019s platform by integrating with 3rd party apps. As a consensus-based, open source standard, operators have an equal voice along with cities in the ongoing development of the GBFS specification. Comprehensive documentation and resources are available to cities and operators alike to aid in implementation. Recommendations \u00b6 Include GBFS as part of a tender. \u00b6 Your tender should require a publicly accessible GBFS API and should set expectations for the data needed to meet your policy goals. Sample language for tenders Data sharing requirements: A publicly accessible API that conforms to the General Bikeshare Feed Specification (GBFS) current version available at https://github.com/NABSA/gbfs/ . The GBFS API must be available to the public on the open internet without requiring authentication. Determine what data to require in a comprehensive policy. \u00b6 As the shared mobility industry evolves, GBFS evolves to include new features, capabilities, and services. This is why you will read \u2018or its equivalent\u2019 in the sample policy language and detailed GBFS information that follows. Simply requiring a shared mobility operator to provide a public GBFS feed will not guarantee the data will fulfill regulatory or other needs. When developing data policies, it is a good idea to gather input from subject matter experts who will be involved in the program implementation. These may include staff from your technology, licensing, or regulation departments or third parties involved in data analysis. GBFS is designed to accommodate the needs of a wide variety of mobility platforms and use cases, from traditional docked bikeshare to free floating bikes, scooters, and other vehicles. The specification consists of thirteen files or endpoints that contain different types of mobility data. Some of these files and their associated fields are required in order to be compliant with the specification, while others are optional. Which of these files are required by the specification depends on the specific type of mobility system being represented. Optional files and fields provide additional data for specific purposes and use cases. Municipalities may need to require some of these optional files or fields in their regulations to provide additional information in support of travelers, municipal goals, or other needs. Overview of GBFS files \u00b6 File Name Where Required gbfs.json Required \u2013 This file is an index of URLs for all other files published as part of a GBFS API. To make data available to the public, a link to this file should be published on the city or agency website or open data portal. gbfs_versions.json Optional \u2013 This file lists all files published by the operator according to their versions. Maintaining feeds in past versions as new versions of GBFS become available may prevent breaking of downstream applications. system_information.json Required \u2013 This file contains basic information about the shared mobility system, however most of the fields are optional. Best practices are to publish the optional fields phone_number, email and feed_contact_email. Additional optional fields may be useful depending on your use case. vehicle_types.json Conditionally Required \u2013 This file is required of systems that include information about vehicle types in the free_bike_status file or its equivalent. This file should be published by systems offering multiple vehicle types for rental, for example pedal bikes and ebikes. If this file is not published, all vehicles in the feed are assumed to be non-motorized bicycles. station_information.json Conditionally Required \u2013 This file is required of systems utilizing docks. Any station defined in this file must have a corresponding entry in the station_status.json file. It contains a list of all stations, their docking or parking capacities, and locations. It supports the configuration of virtual stations that may be used to designate approved parking areas such as racks or geofenced areas for free floating vehicles. This information may be used to support parking restrictions for dockless vehicles through the use of designated parking areas. station_status.json Conditionally Required \u2013 This file is required of systems utilizing docks and optionally may be used in dockless systems to monitor virtual stations. Any station defined in this file must have a corresponding entry in the station_information.json file.This is a real-time file that shows the current status of a station or virtual station, its vehicles, and its docks. It includes aggregated numbers of available vehicles and docks which may optionally be aggregated by vehicle type. This data may be used to determine equitable distribution of services. The optional field num_bikes_disabled or its equivalent may be useful in determining the total number of deployed vehicles or the percentage of the vehicle fleet that is able to be rented. free_bike_status.json Conditionally Required \u2013 This file (or its equivalent) is required for free floating (dockless) or hybrid (docked/dockless) vehicles. It is optional for station based (docked) vehicles. This is a real-time file that shows the current location, availability status, and other attributes of individual vehicles in a fleet. May optionally be used in station based (docked) systems to publish information on vehicle types, charge or fuel levels, and other vehicle attributes. This data may be used to determine the number of vehicles deployed, their availability for rental, and their distribution within the service area. system_hours.json Optional \u2013 This file is used to indicate hours and days of operation when vehicles are available for rent. It should be required if the service is not available for 24 hours a day, 7 days a week. If this file is not published, it indicates that vehicles are available for rental 24/7. (This file may be deprecated in the future, in which case system hours should be published using the method described in the appropriate version.) system_calendar.json Optional \u2013 This optional file should be required of systems that operate seasonally or that do not offer continuous year-round service. (This file may be deprecated in the future in which case system hours should be published using the method described in the appropriate version.) system_regions.json Optional \u2013 This file is used to define regions within a system. It may be used to support reporting in systems that encompass multiple jurisdictions. system_pricing_plans.json Optional \u2013 This file describes pricing plans for a system. It is useful to third party trip planning applications but may not be comprehensive enough to model all available pricing for the system. system_alerts.json Optional \u2013 This file is intended to alert users about changes to the system that do not fall within normal system operations. For example, system closures due to extreme weather would be listed here. Cities should require this file for use as a means of communicating emergency or other information to users. geofencing_zones.json Optional \u2013 This file describes geofenced zones and their associated rules or attributes. Geofenced zones may be used to communicate information regarding parking, speed limits, no ride zones, or other rules or restrictions. They may be used to define geographies related to equity, vehicle caps, or other use cases. Cities should require this file if their policies rely on geofence information. Care should be taken when developing geospatial policies that rely on location data. Location data from GPS, cellular, and Wi-Fi signals are subject to interference resulting in accuracy levels in the tens of meters or greater. Data policy recommendations \u00b6 Data policies should include clear, enforceable language outlining exactly what data are required and what version of the specification must be published. At minimum, a shared mobility data policy should: Ensure ongoing access to data for both the regulating body and the public without undue restrictions on its use. Clearly define the format and version of the required data. Ensure access to specific data needed to effectively permit, regulate, and manage shared mobility providers. Protect the privacy of individuals using the mobility platform. Sample policy language [COMPANY] shall provide a publicly accessible API that conforms to the General Bikeshare Feed Specification (GBFS) current version available at https://github.com/NABSA/gbfs/ . [COMPANY] must make the API available to the public on the open internet without requiring authentication. [COMPANY] shall inform [PERMITTING AGENCY] of the URL for the gbfs.json endpoint prior to deploying vehicles. [COMPANY] must notify [PERMITTING AGENCY] at least 30 days prior to changing the URL of the gbfs.json endpoint. Data contained in the API shall be offered to the public and [PERMITTING AGENCY] under a non-revocable license that allows the API data to be used, modified, and shared without restriction beyond attribution. Upon release of a new version of GBFS, [COMPANY] must update API to the new version within [XX 1 ] days unless prior arrangement has been made with [PERMITTING AGENCY]. GBFS API must contain the following endpoints and all fields required under the GBFS specification: * gbfs.json * system_information.json * [ list of additional endpoints e.g. station_information.json, station_status.json, free_bike status.json or its equivalent, etc.] In addition to the fields required under the specification the following files must also contain these optional fields: file_name.json: field_name, field name file_name.json: field_name, field name (1.) 90 days recommended For an example of how a regulator may tailor this language to their particular needs, see SFMTA\u2019s scooter permit language (beginning on page 41). Additional considerations \u00b6 The value of open mobility data can only be fully realized when that data is easily accessible to the public and traveler privacy is protected; GBFS is designed to support both. Cities and agencies should publish the locations of gbfs.json files on their websites or open data portals and on the openly available dataset catalog connected to GBFS. Requesting open data from shared mobility operators will become even more crucial in the upcoming years as the European Commission enforces the obligation for each Member State to set a National Access Point (NAP) acting as a portal to all open data in regards to mobility services and all consumer-facing information. NAPs are designed to support a thriving European ecosystem built on interoperability between mobility modes and regions, reinforcing the ability of any consumer to travel seamlessly within the European Union. GBFS is a common and accepted format that allows countries to comply with the European regulations on several levels: It complies with the will of creating a common open market, which will prevent monopolistic positions; It enables transparency in regards to data and supports the European efforts to open more data for consumers to participate in the life of institutions; It protects users\u2019 privacy by ensuring only public-information are published, in line with the spirits of the General Data Protection Regulation (GDPR); It supports a greener, more sustainable mobility in which users are given options other than relying on solo-driving; It is fully compatible with European norms and standards. In opening the data, some NAPs such as the one managed by Entur in Norway or France\u2019s data.gouv.fr , have set up a team to support mobility operators to open their data. Their guidance on how to leverage GBFS can be sought after, if needed. GBFS has been developed and tested under a consensus model to ensure that data defined in the specification will not negatively impact user privacy. Extreme care should be taken when requiring data from operators that is outside the scope of the GBFS has been developed and tested under a consensus model to ensure that data defined in the specification will not negatively impact user privacy. Current versions of GBFS are compliant with GDPR, in that they do not contain any personal or personally identifiable data. The key point to remember is that with GBFS there is no trivial way to reconstruct a single user\u2019s journey or habits thanks to the mandatory rotation of vehicle identification numbers. Extreme care should be taken when requiring data from operators that is outside the scope of the specification. Data regarding vehicles that are part of an active rental should never appear in GBFS feeds. The over-collection of data \u2014 collecting data without a defined purpose \u2014 is strongly discouraged. Combining shared mobility data with other publicly available datasets could have serious privacy implications. One will also want to be careful with compliance to the GDPR spirit which states that data collection must be adequate and proportionate to operations needs and cannot contain any identifying information without clear consent from individuals. To support better interoperability within the European common market, the European standardization body CEN has developed Transmodel (the European Norm \u201cPublic Transport Reference Data Model\u201d (EN 12896)) \u2013 a data standard that facilitates interoperability between the information processing systems of transport operators and agencies by using matching definitions, structures, and semantics for the data elements used by their various systems. Based on Transmodel, further standards have been defined: NeTEx (CEN/TS 16614-1/2/3/5) for the exchange of public transport schedule information, and SIRI (EN 15531-1/2/3/4/5) for real-time information. Both are currently being adapted for \u201cnew modes,\u201d including shared mobility solutions. GBFS is the only open data standard, used internationally, to be recognized by CEN as compatible and convertible to NeTEx/SIRI based on a canonical mapping soon to be approved by CEN. This convertibility reduces the burden of data production and consumption for all stakeholders of the shared mobility industry. Useful links \u00b6 GBFS Repo on GitHub GBFS Public Slack Channel NeTEx SIRI MobilityData Shared Mobility team email: sharedmobility@mobilitydata.org Acknowledgements \u00b6 Shared Mobility Team at MobilityData Heidi Guenin - Director, Product, Shared Mobility Mitch Vars - Senior, Shared Mobility Specialist Jos\u00e9e Sabourin - Shared Mobility Specialist Partnerships, Europe at MobilityData Tu-Tho Thai - Director, Partnerships Europe Newton Davis - Partnerships Europe Reviewers Josh Johnson - Public Policy Manager, Spin Oliver O\u2019Brien - Senior Research Associate, University College London Scott Shepard - VP Global Public Sector, Iomob This document is built with the intention of supporting and helping cities in the GBFS adoption and does not serve as legal advice. Policy makers should determine if additional consideration of local laws and statutes is necessary before using the sample policy language contained in this document.","title":"Data Policy Europe"},{"location":"learn/white-papers/data-policy-europe/#gbfs-and-shared-mobility-data-policy-for-european-cities","text":"","title":"GBFS and Shared Mobility Data Policy for European Cities"},{"location":"learn/white-papers/data-policy-europe/#overview","text":"Securing access to mobility data is an important part of a shared mobility program. Public access to mobility data builds trust in mobility programs and increases shared mobility adoption. Writing effective policy can ensure that mobility data is both accurate and accessible. This report is intended primarily for individuals responsible for shared mobility procurement and policies at cities or other local authorities. The report provides a foundational understanding of how GBFS supports seamless, sustainable mobility options and how to leverage open data\u2019s potential when writing policy that can influence shared mobility adoption and practice. This report is applicable primarily to cities in Europe. For American stakeholders , see our report on data policy ofr American cities .","title":"Overview"},{"location":"learn/white-papers/data-policy-europe/#gbfs-makes-it-easy-for-travelers-to-find-and-use-shared-mobility","text":"Since it was first established in 2015, GBFS has become the de facto standard for shared mobility data. The specification is now in use in hundreds of cities in over 40 countries worldwide. Policymakers should require public GBFS APIs when permitting or licensing shared mobility operations. GBFS provides a common language for shared mobility operators to share information about options available to travelers. GBFS includes information about vehicles (bicycles, scooters, moped, and cars), stations, and more: Vehicle, station, and dock locations and availability Vehicle characteristics \u2013 type of power, distance that can be traveled on remaining charge Geofenced areas for rules related to speed, parking, and prohibited zones These data are used by trip planning and Mobility as a Service (MaaS) applications, to provide travelers with the information they need to discover and choose shared mobility. Public GBFS APIs enable the integration of shared mobility services with public transportation, allowing users to make first-mile, last-mile connections and multi-modal journeys, making more potential car-free journeys possible. In addition, GBFS provides local authorities and agencies with a standardized way to ingest, analyze, and compare data generated by shared mobility systems. Advancements in shared mobility platforms have resulted in the generation of vast quantities of mobility data. These data have become an essential part of policy making and regulation of shared mobility operators. Data from shared mobility operators help us to understand how these services impact public safety, and whether or not they advance equity, innovation, sustainability, and other policy goals. Public access to shared mobility data increases transparency and makes operators accountable for the services they operate in the public right-of-way. GBFS has been designed specifically for use as a source for public data. To make GBFS APIs truly public, they must be made freely available on the open internet and require no API key, token, or other means of access or authentication. Feeds containing sensitive data that require authentication are not a substitute for public APIs. GBFS enables the exchange of information in a way that ensures all parties agree on what the information represents. You can think of it like a dictionary, where each term has a definition and a set of rules for how it can be used. GBFS is a real-time data specification that describes the current status of a mobility system. GBFS does not support, and is not intended for, historical data such as trip or maintenance records.","title":"GBFS makes it easy for travelers to find and use shared mobility."},{"location":"learn/white-papers/data-policy-europe/#gbfs-reduces-administrative-burdens-on-cities-reduces-compliance-burdens-on-operators","text":"Unlike bespoke data sharing requirements of the past, the standardization of shared mobility data benefits both cities and operators alike. Standardization of mobility data through GBFS has resulted in a growing marketplace of data management software and services, providing a better quality and a greater variety of available solutions. These products and services are used to assist mobility regulation bodies and public authorities in working with GBFS data to effectively manage and regulate mobility services. Policies requiring standardized open data can prevent the creation of walled gardens, a procurement scenario where cities are locked-in to a specific vendor\u2019s proprietary tools or services. Open, standardized data is portable, allowing cities to change operators if a service fails to meet expectations. For operators, standardization means an end to a patch-work of regulation that requires different data in different formats for each city in which they operate. Standardization provides assurance to operators that data requests can be clearly defined and are fully implementable. GBFS also carries the potential to bring more users to an operator\u2019s platform by integrating with 3rd party apps. As a consensus-based, open source standard, operators have an equal voice along with cities in the ongoing development of the GBFS specification. Comprehensive documentation and resources are available to cities and operators alike to aid in implementation.","title":"GBFS reduces administrative burdens on cities, reduces compliance burdens on operators."},{"location":"learn/white-papers/data-policy-europe/#recommendations","text":"","title":"Recommendations"},{"location":"learn/white-papers/data-policy-europe/#include-gbfs-as-part-of-a-tender","text":"Your tender should require a publicly accessible GBFS API and should set expectations for the data needed to meet your policy goals. Sample language for tenders Data sharing requirements: A publicly accessible API that conforms to the General Bikeshare Feed Specification (GBFS) current version available at https://github.com/NABSA/gbfs/ . The GBFS API must be available to the public on the open internet without requiring authentication.","title":"Include GBFS as part of a tender."},{"location":"learn/white-papers/data-policy-europe/#determine-what-data-to-require-in-a-comprehensive-policy","text":"As the shared mobility industry evolves, GBFS evolves to include new features, capabilities, and services. This is why you will read \u2018or its equivalent\u2019 in the sample policy language and detailed GBFS information that follows. Simply requiring a shared mobility operator to provide a public GBFS feed will not guarantee the data will fulfill regulatory or other needs. When developing data policies, it is a good idea to gather input from subject matter experts who will be involved in the program implementation. These may include staff from your technology, licensing, or regulation departments or third parties involved in data analysis. GBFS is designed to accommodate the needs of a wide variety of mobility platforms and use cases, from traditional docked bikeshare to free floating bikes, scooters, and other vehicles. The specification consists of thirteen files or endpoints that contain different types of mobility data. Some of these files and their associated fields are required in order to be compliant with the specification, while others are optional. Which of these files are required by the specification depends on the specific type of mobility system being represented. Optional files and fields provide additional data for specific purposes and use cases. Municipalities may need to require some of these optional files or fields in their regulations to provide additional information in support of travelers, municipal goals, or other needs.","title":"Determine what data to require in a comprehensive policy."},{"location":"learn/white-papers/data-policy-europe/#overview-of-gbfs-files","text":"File Name Where Required gbfs.json Required \u2013 This file is an index of URLs for all other files published as part of a GBFS API. To make data available to the public, a link to this file should be published on the city or agency website or open data portal. gbfs_versions.json Optional \u2013 This file lists all files published by the operator according to their versions. Maintaining feeds in past versions as new versions of GBFS become available may prevent breaking of downstream applications. system_information.json Required \u2013 This file contains basic information about the shared mobility system, however most of the fields are optional. Best practices are to publish the optional fields phone_number, email and feed_contact_email. Additional optional fields may be useful depending on your use case. vehicle_types.json Conditionally Required \u2013 This file is required of systems that include information about vehicle types in the free_bike_status file or its equivalent. This file should be published by systems offering multiple vehicle types for rental, for example pedal bikes and ebikes. If this file is not published, all vehicles in the feed are assumed to be non-motorized bicycles. station_information.json Conditionally Required \u2013 This file is required of systems utilizing docks. Any station defined in this file must have a corresponding entry in the station_status.json file. It contains a list of all stations, their docking or parking capacities, and locations. It supports the configuration of virtual stations that may be used to designate approved parking areas such as racks or geofenced areas for free floating vehicles. This information may be used to support parking restrictions for dockless vehicles through the use of designated parking areas. station_status.json Conditionally Required \u2013 This file is required of systems utilizing docks and optionally may be used in dockless systems to monitor virtual stations. Any station defined in this file must have a corresponding entry in the station_information.json file.This is a real-time file that shows the current status of a station or virtual station, its vehicles, and its docks. It includes aggregated numbers of available vehicles and docks which may optionally be aggregated by vehicle type. This data may be used to determine equitable distribution of services. The optional field num_bikes_disabled or its equivalent may be useful in determining the total number of deployed vehicles or the percentage of the vehicle fleet that is able to be rented. free_bike_status.json Conditionally Required \u2013 This file (or its equivalent) is required for free floating (dockless) or hybrid (docked/dockless) vehicles. It is optional for station based (docked) vehicles. This is a real-time file that shows the current location, availability status, and other attributes of individual vehicles in a fleet. May optionally be used in station based (docked) systems to publish information on vehicle types, charge or fuel levels, and other vehicle attributes. This data may be used to determine the number of vehicles deployed, their availability for rental, and their distribution within the service area. system_hours.json Optional \u2013 This file is used to indicate hours and days of operation when vehicles are available for rent. It should be required if the service is not available for 24 hours a day, 7 days a week. If this file is not published, it indicates that vehicles are available for rental 24/7. (This file may be deprecated in the future, in which case system hours should be published using the method described in the appropriate version.) system_calendar.json Optional \u2013 This optional file should be required of systems that operate seasonally or that do not offer continuous year-round service. (This file may be deprecated in the future in which case system hours should be published using the method described in the appropriate version.) system_regions.json Optional \u2013 This file is used to define regions within a system. It may be used to support reporting in systems that encompass multiple jurisdictions. system_pricing_plans.json Optional \u2013 This file describes pricing plans for a system. It is useful to third party trip planning applications but may not be comprehensive enough to model all available pricing for the system. system_alerts.json Optional \u2013 This file is intended to alert users about changes to the system that do not fall within normal system operations. For example, system closures due to extreme weather would be listed here. Cities should require this file for use as a means of communicating emergency or other information to users. geofencing_zones.json Optional \u2013 This file describes geofenced zones and their associated rules or attributes. Geofenced zones may be used to communicate information regarding parking, speed limits, no ride zones, or other rules or restrictions. They may be used to define geographies related to equity, vehicle caps, or other use cases. Cities should require this file if their policies rely on geofence information. Care should be taken when developing geospatial policies that rely on location data. Location data from GPS, cellular, and Wi-Fi signals are subject to interference resulting in accuracy levels in the tens of meters or greater.","title":"Overview of GBFS files"},{"location":"learn/white-papers/data-policy-europe/#data-policy-recommendations","text":"Data policies should include clear, enforceable language outlining exactly what data are required and what version of the specification must be published. At minimum, a shared mobility data policy should: Ensure ongoing access to data for both the regulating body and the public without undue restrictions on its use. Clearly define the format and version of the required data. Ensure access to specific data needed to effectively permit, regulate, and manage shared mobility providers. Protect the privacy of individuals using the mobility platform. Sample policy language [COMPANY] shall provide a publicly accessible API that conforms to the General Bikeshare Feed Specification (GBFS) current version available at https://github.com/NABSA/gbfs/ . [COMPANY] must make the API available to the public on the open internet without requiring authentication. [COMPANY] shall inform [PERMITTING AGENCY] of the URL for the gbfs.json endpoint prior to deploying vehicles. [COMPANY] must notify [PERMITTING AGENCY] at least 30 days prior to changing the URL of the gbfs.json endpoint. Data contained in the API shall be offered to the public and [PERMITTING AGENCY] under a non-revocable license that allows the API data to be used, modified, and shared without restriction beyond attribution. Upon release of a new version of GBFS, [COMPANY] must update API to the new version within [XX 1 ] days unless prior arrangement has been made with [PERMITTING AGENCY]. GBFS API must contain the following endpoints and all fields required under the GBFS specification: * gbfs.json * system_information.json * [ list of additional endpoints e.g. station_information.json, station_status.json, free_bike status.json or its equivalent, etc.] In addition to the fields required under the specification the following files must also contain these optional fields: file_name.json: field_name, field name file_name.json: field_name, field name (1.) 90 days recommended For an example of how a regulator may tailor this language to their particular needs, see SFMTA\u2019s scooter permit language (beginning on page 41).","title":"Data policy recommendations"},{"location":"learn/white-papers/data-policy-europe/#additional-considerations","text":"The value of open mobility data can only be fully realized when that data is easily accessible to the public and traveler privacy is protected; GBFS is designed to support both. Cities and agencies should publish the locations of gbfs.json files on their websites or open data portals and on the openly available dataset catalog connected to GBFS. Requesting open data from shared mobility operators will become even more crucial in the upcoming years as the European Commission enforces the obligation for each Member State to set a National Access Point (NAP) acting as a portal to all open data in regards to mobility services and all consumer-facing information. NAPs are designed to support a thriving European ecosystem built on interoperability between mobility modes and regions, reinforcing the ability of any consumer to travel seamlessly within the European Union. GBFS is a common and accepted format that allows countries to comply with the European regulations on several levels: It complies with the will of creating a common open market, which will prevent monopolistic positions; It enables transparency in regards to data and supports the European efforts to open more data for consumers to participate in the life of institutions; It protects users\u2019 privacy by ensuring only public-information are published, in line with the spirits of the General Data Protection Regulation (GDPR); It supports a greener, more sustainable mobility in which users are given options other than relying on solo-driving; It is fully compatible with European norms and standards. In opening the data, some NAPs such as the one managed by Entur in Norway or France\u2019s data.gouv.fr , have set up a team to support mobility operators to open their data. Their guidance on how to leverage GBFS can be sought after, if needed. GBFS has been developed and tested under a consensus model to ensure that data defined in the specification will not negatively impact user privacy. Extreme care should be taken when requiring data from operators that is outside the scope of the GBFS has been developed and tested under a consensus model to ensure that data defined in the specification will not negatively impact user privacy. Current versions of GBFS are compliant with GDPR, in that they do not contain any personal or personally identifiable data. The key point to remember is that with GBFS there is no trivial way to reconstruct a single user\u2019s journey or habits thanks to the mandatory rotation of vehicle identification numbers. Extreme care should be taken when requiring data from operators that is outside the scope of the specification. Data regarding vehicles that are part of an active rental should never appear in GBFS feeds. The over-collection of data \u2014 collecting data without a defined purpose \u2014 is strongly discouraged. Combining shared mobility data with other publicly available datasets could have serious privacy implications. One will also want to be careful with compliance to the GDPR spirit which states that data collection must be adequate and proportionate to operations needs and cannot contain any identifying information without clear consent from individuals. To support better interoperability within the European common market, the European standardization body CEN has developed Transmodel (the European Norm \u201cPublic Transport Reference Data Model\u201d (EN 12896)) \u2013 a data standard that facilitates interoperability between the information processing systems of transport operators and agencies by using matching definitions, structures, and semantics for the data elements used by their various systems. Based on Transmodel, further standards have been defined: NeTEx (CEN/TS 16614-1/2/3/5) for the exchange of public transport schedule information, and SIRI (EN 15531-1/2/3/4/5) for real-time information. Both are currently being adapted for \u201cnew modes,\u201d including shared mobility solutions. GBFS is the only open data standard, used internationally, to be recognized by CEN as compatible and convertible to NeTEx/SIRI based on a canonical mapping soon to be approved by CEN. This convertibility reduces the burden of data production and consumption for all stakeholders of the shared mobility industry.","title":"Additional considerations"},{"location":"learn/white-papers/data-policy-europe/#useful-links","text":"GBFS Repo on GitHub GBFS Public Slack Channel NeTEx SIRI MobilityData Shared Mobility team email: sharedmobility@mobilitydata.org","title":"Useful links"},{"location":"learn/white-papers/data-policy-europe/#acknowledgements","text":"Shared Mobility Team at MobilityData Heidi Guenin - Director, Product, Shared Mobility Mitch Vars - Senior, Shared Mobility Specialist Jos\u00e9e Sabourin - Shared Mobility Specialist Partnerships, Europe at MobilityData Tu-Tho Thai - Director, Partnerships Europe Newton Davis - Partnerships Europe Reviewers Josh Johnson - Public Policy Manager, Spin Oliver O\u2019Brien - Senior Research Associate, University College London Scott Shepard - VP Global Public Sector, Iomob This document is built with the intention of supporting and helping cities in the GBFS adoption and does not serve as legal advice. Policy makers should determine if additional consideration of local laws and statutes is necessary before using the sample policy language contained in this document.","title":"Acknowledgements"},{"location":"learn/white-papers/data-policy/","text":"GBFS and Shared Mobility Data Policy \u00b6 Helping cities support seamless and sustainable mobility options through GBFS. Overview \u00b6 Securing access to mobility data is an important part of a shared mobility program. Public access to mobility data builds trust in mobility programs and increases shared mobility adoption. Writing effective policy can ensure that mobility data is both accurate and accessible. This report is intended primarily for individuals responsible for shared mobility procurement and policies at cities or other municipalities. The report provides a foundational understanding of how GBFS supports seamless, sustainable mobility options and how to leverage open source data\u2019s potential when writing policy that can influence shared mobility adoption and practice. The specific policy language is applicable primarily to cities in the Americas. For the European stakeholders, see our European specific report . GBFS makes it easy for travelers to find and use shared mobility. \u00b6 Since it was first established in 2015, GBFS has become the de facto standard for shared mobility data. The specification is now in use in hundreds of cities in over 40 countries worldwide. Policymakers should require public GBFS APIs when permitting or licensing shared mobility operations. GBFS provides a common language for shared mobility operators to share information about options available to travelers. GBFS includes information about vehicles (bicycles, scooters, moped, and cars), stations, and more: * Vehicle, station, and dock locations and availability * Vehicle characteristics \u2013 type of power, distance that can be traveled on remaining charge * Geofenced areas for rules related to speed, parking, and prohibited zones These data are used by trip planning and Mobility as a Service (MaaS) applications, to provide travelers with the information they need to discover and choose shared mobility. Public GBFS APIs enable the integration of shared mobility services with public transportation, allowing users to make first-mile, last-mile connections. In addition, GBFS provides municipalities and agencies with a standardized way to ingest, analyze, and compare data generated by shared mobility systems. Advancements in shared mobility platforms have resulted in the generation of vast quantities of mobility data. These data have become an essential part of policy making and regulation of shared mobility operators. Data from shared mobility platforms help us to understand how these services impact public safety, and whether or not they advance equity, innovation, sustainability, and other policy goals. Public access to shared mobility data increases transparency and makes operators accountable for the services they operate in the public right-of-way. GBFS has been designed specifically for use as a source for public data. To make GBFS APIs truly public, they must be made freely available on the open internet and require no API key, token, or other means of access or authentication. Feeds containing sensitive data that require authentication are not a substitute for public APIs. GBFS enables the exchange of information in a way that ensures all parties agree on what the information represents. You can think of it like a dictionary, where each term has a definition and a set of rules for how it can be used. GBFS is a real-time data specification that describes the current status of a mobility system. GBFS does not support, and is not intended for, historical data such as trip or maintenance records. GBFS reduces administrative burdens on cities, reduces compliance burdens on operators. \u00b6 Unlike bespoke data sharing requirements of the past, the standardization of shared mobility data benefits both cities and operators alike. Standardization of mobility data through GBFS has resulted in a growing marketplace of data management software and services, providing a better quality and a greater variety of available solutions. These products and services are used to assist cities in working with GBFS data to effectively manage and regulate mobility services. Policies requiring standardized open data can prevent the creation of walled gardens, a procurement scenario where cities are locked-in to a specific vendor\u2019s proprietary tools or services. Open, standardized data is portable, allowing cities to change operators if a service fails to meet expectations. For operators, standardization means an end to a patch-work of regulation that requires different data in different formats for each city in which they operate. Standardization provides assurance to operators that data requests can be clearly defined and are fully implementable. As a consensus-based, open source standard, operators have an equal voice along with cities in the ongoing development of the GBFS specification. Comprehensive documentation and resources are available to cities and operators alike to aid in implementation. Recommendations \u00b6 Include GBFS as part of a tender. \u00b6 Your tender should require a publicly accessible GBFS API and should set expectations for the data needed to meet your policy goals. Sample language for tenders: Data sharing requirements: A publicly accessible API that conforms to the General Bikeshare Feed Specification (GBFS) current version available at https://github.com/NABSA/gbfs/ . The GBFS API must be available to the public on the open internet without requiring authentication. Determine What Data to Require in a Comprehensive Policy. \u00b6 As the shared mobility industry evolves, GBFS evolves to include new features, capabilities, and services. This is why you will read \u2018or its equivalent\u2019 in the sample policy language and detailed GBFS information that follows. Simply requiring a shared mobility operator to provide a public GBFS feed will not guarantee the data will fulfill regulatory or other needs. When developing data policies, it is a good idea to gather input from subject matter experts who will be involved in the program implementation. These may include staff from your IT department, City Attorney\u2019s office, City Clerk or third parties involved in data analysis. GBFS is designed to accommodate the needs of a wide variety of mobility platforms and use cases, from traditional docked bikeshare to free floating bikes, scooters, and other vehicles. The specification consists of thirteen files or endpoints that contain different types of mobility data. Some of these files and their associated fields are required in order to be compliant with the specification, while others are optional. Which of these files are required by the specification depends on the specific type of mobility system being represented. Optional files and fields provide additional data for specific purposes and use cases. Municipalities may need to require some of these optional files or fields in their regulations to provide additional information in support of travelers, municipal goals, or other needs. Overview of GBFS Files \u00b6 File Name Where Required gbfs.json Required \u2013 This file is an index of URLs for all other files published as part of a GBFS API. To make data available to the public, a link to this file should be published on the city or agency website or open data portal. gbfs_versions.json Optional \u2013 This file lists all files published by the operator according to their versions. Maintaining feeds in past versions as new versions of GBFS become available may prevent breaking of downstream applications. system_information.json Required \u2013 This file contains basic information about the shared mobility system, however most of the fields are optional. Best practices are to publish the optional fields phone_number, email and feed_contact_email. Additional optional fields may be useful depending on your use case. vehicle_types.json Conditionally Required \u2013 This file is required of systems that include information about vehicle types in the free_bike_status file or its equivalent. This file should be published by systems offering multiple vehicle types for rental, for example pedal bikes and ebikes. If this file is not published, all vehicles in the feed are assumed to be non-motorized bicycles. station_information.json Conditionally Required \u2013 This file is required of systems utilizing docks. Any station defined in this file must have a corresponding entry in the station_status.json file. It contains a list of all stations, their docking or parking capacities, and locations. It supports the configuration of virtual stations that may be used to designate approved parking areas such as racks or geofenced areas for free floating vehicles. This information may be used to support parking restrictions for dockless vehicles through the use of designated parking areas. station_status.json Conditionally Required \u2013 This file is required of systems utilizing docks and optionally may be used in dockless systems to monitor virtual stations. Any station defined in this file must have a corresponding entry in the station_information.json file.This is a real-time file that shows the current status of a station or virtual station, its vehicles, and its docks. It includes aggregated numbers of available vehicles and docks which may optionally be aggregated by vehicle type. This data may be used to determine equitable distribution of services. The optional field num_bikes_disabled or its equivalent may be useful in determining the total number of deployed vehicles or the percentage of the vehicle fleet that is able to be rented. free_bike_status.json Conditionally Required \u2013 This file (or its equivalent) is required for free floating (dockless) or hybrid (docked/dockless) vehicles. It is optional for station based (docked) vehicles. This is a real-time file that shows the current location, availability status, and other attributes of individual vehicles in a fleet. May optionally be used in station based (docked) systems to publish information on vehicle types, charge or fuel levels, and other vehicle attributes. This data may be used to determine the number of vehicles deployed, their availability for rental, and their distribution within the service area. system_hours.json Optional \u2013 This file is used to indicate hours and days of operation when vehicles are available for rent. It should be required if the service is not available for 24 hours a day, 7 days a week. If this file is not published, it indicates that vehicles are available for rental 24/7. (This file may be deprecated in the future, in which case system hours should be published using the method described in the appropriate version.) system_calendar.json Optional \u2013 This optional file should be required of systems that operate seasonally or that do not offer continuous year-round service. (This file may be deprecated in the future in which case system hours should be published using the method described in the appropriate version.) system_regions.json Optional \u2013 This file is used to define regions within a system. It may be used to support reporting in systems that encompass multiple jurisdictions. system_pricing_plans.json Optional \u2013 This file describes pricing plans for a system. It is useful to third party trip planning applications but may not be comprehensive enough to model all available pricing for the system. system_alerts.json Optional \u2013 This file is intended to alert users about changes to the system that do not fall within normal system operations. For example, system closures due to extreme weather would be listed here. Cities should require this file for use as a means of communicating emergency or other information to users. geofencing_zones.json Optional \u2013 This file describes geofenced zones and their associated rules or attributes. Geofenced zones may be used to communicate information regarding parking, speed limits, no ride zones, or other rules or restrictions. They may be used to define geographies related to equity, vehicle caps, or other use cases. Cities should require this file if their policies rely on geofence information. Care should be taken when developing geospatial policies that rely on location data. Location data from GPS, cellular, and Wi-Fi signals are subject to interference resulting in accuracy levels in the tens of meters or greater. Data policy recommendations \u00b6 Data policies should include clear, enforceable language outlining exactly what data are required and what version of the specification must be published. At minimum, a shared mobility data policy should: Ensure ongoing access to data for both the regulating body and the public without undue restrictions on its use. Clearly define the format and version of the required data. Ensure access to specific data needed to effectively permit, regulate, and manage shared mobility providers. Protect the privacy of individuals using the mobility platform. Sample policy language [COMPANY] shall provide a publicly accessible API that conforms to the General Bikeshare Feed Specification (GBFS) current version available at https://github.com/NABSA/gbfs/ . [COMPANY] must make the API available to the public on the open internet without requiring authentication. [COMPANY] shall inform [PERMITTING AGENCY] of the URL for the gbfs.json endpoint prior to deploying vehicles. [COMPANY] must notify [PERMITTING AGENCY] at least 30 days prior to changing the URL of the gbfs.json endpoint. Data contained in the API shall be offered to the public and [PERMITTING AGENCY] under a non-revocable license that allows the API data to be used, modified, and shared without restriction beyond attribution. Upon release of a new version of GBFS, [COMPANY] must update API to the new version within [XX 1 ] days unless prior arrangement has been made with [PERMITTING AGENCY]. GBFS API must contain the following endpoints and all fields required under the GBFS specification: * gbfs.json * system_information.json * [ list of additional endpoints e.g. station_information.json, station_status.json, free_bike status.json or its equivalent, etc.] In addition to the fields required under the specification the following files must also contain these optional fields: file_name.json: field_name, field name file_name.json: field_name, field name (1.) 90 days recommended For an example of how a regulator may tailor this language to their particular needs, see SFMTA\u2019s scooter permit language (beginning on page 41). Additional Considerations \u00b6 The value of open mobility data can only be fully realized when that data is easily accessible to the public. Cities and agencies should publish the locations of gbfs.json files on their websites or open data portals and on the openly available dataset catalogue connected to GBFS. GBFS has been developed and tested under a consensus model to ensure that data defined in the specification will not negatively impact user privacy. Extreme care should be taken when requiring data from operators that is outside the scope of the specification. (The over-collection of data \u2014 collecting data without a defined purpose \u2014 is strongly discouraged. Combining shared mobility data with other publicly available datasets could have serious privacy implications.) Data regarding vehicles that are part of an active rental should never appear in GBFS feeds. Useful links \u00b6 GBFS Repo on GitHub GBFS Public Slack Channel MobilityData Shared Mobility team email: sharedmobility@mobilitydata.org Acknowledgement \u00b6 Shared Mobility Team at MobilityData Heidi Guenin - Director, Product, Shared Mobility Mitch Vars - Senior, Shared Mobility Specialist Jos\u00e9e Sabourin - Shared Mobility Specialist Reviewers Diego Canales - Global Partnerships Manager, Populus AI Josh Johnson - Public Policy Manager, Spin Andrew Salzberg - Head of Policy, Transit Michael Schwartz - Head of Customers and Policy, Ride Report This document is built with the intention of supporting and helping cities in the GBFS adoption and does not serve as legal advice. Policy makers should determine if additional consideration of local laws and statutes is necessary before using the sample policy language contained in this document.","title":"Data Policy"},{"location":"learn/white-papers/data-policy/#gbfs-and-shared-mobility-data-policy","text":"Helping cities support seamless and sustainable mobility options through GBFS.","title":"GBFS and Shared Mobility Data Policy"},{"location":"learn/white-papers/data-policy/#overview","text":"Securing access to mobility data is an important part of a shared mobility program. Public access to mobility data builds trust in mobility programs and increases shared mobility adoption. Writing effective policy can ensure that mobility data is both accurate and accessible. This report is intended primarily for individuals responsible for shared mobility procurement and policies at cities or other municipalities. The report provides a foundational understanding of how GBFS supports seamless, sustainable mobility options and how to leverage open source data\u2019s potential when writing policy that can influence shared mobility adoption and practice. The specific policy language is applicable primarily to cities in the Americas. For the European stakeholders, see our European specific report .","title":"Overview"},{"location":"learn/white-papers/data-policy/#gbfs-makes-it-easy-for-travelers-to-find-and-use-shared-mobility","text":"Since it was first established in 2015, GBFS has become the de facto standard for shared mobility data. The specification is now in use in hundreds of cities in over 40 countries worldwide. Policymakers should require public GBFS APIs when permitting or licensing shared mobility operations. GBFS provides a common language for shared mobility operators to share information about options available to travelers. GBFS includes information about vehicles (bicycles, scooters, moped, and cars), stations, and more: * Vehicle, station, and dock locations and availability * Vehicle characteristics \u2013 type of power, distance that can be traveled on remaining charge * Geofenced areas for rules related to speed, parking, and prohibited zones These data are used by trip planning and Mobility as a Service (MaaS) applications, to provide travelers with the information they need to discover and choose shared mobility. Public GBFS APIs enable the integration of shared mobility services with public transportation, allowing users to make first-mile, last-mile connections. In addition, GBFS provides municipalities and agencies with a standardized way to ingest, analyze, and compare data generated by shared mobility systems. Advancements in shared mobility platforms have resulted in the generation of vast quantities of mobility data. These data have become an essential part of policy making and regulation of shared mobility operators. Data from shared mobility platforms help us to understand how these services impact public safety, and whether or not they advance equity, innovation, sustainability, and other policy goals. Public access to shared mobility data increases transparency and makes operators accountable for the services they operate in the public right-of-way. GBFS has been designed specifically for use as a source for public data. To make GBFS APIs truly public, they must be made freely available on the open internet and require no API key, token, or other means of access or authentication. Feeds containing sensitive data that require authentication are not a substitute for public APIs. GBFS enables the exchange of information in a way that ensures all parties agree on what the information represents. You can think of it like a dictionary, where each term has a definition and a set of rules for how it can be used. GBFS is a real-time data specification that describes the current status of a mobility system. GBFS does not support, and is not intended for, historical data such as trip or maintenance records.","title":"GBFS makes it easy for travelers to find and use shared mobility."},{"location":"learn/white-papers/data-policy/#gbfs-reduces-administrative-burdens-on-cities-reduces-compliance-burdens-on-operators","text":"Unlike bespoke data sharing requirements of the past, the standardization of shared mobility data benefits both cities and operators alike. Standardization of mobility data through GBFS has resulted in a growing marketplace of data management software and services, providing a better quality and a greater variety of available solutions. These products and services are used to assist cities in working with GBFS data to effectively manage and regulate mobility services. Policies requiring standardized open data can prevent the creation of walled gardens, a procurement scenario where cities are locked-in to a specific vendor\u2019s proprietary tools or services. Open, standardized data is portable, allowing cities to change operators if a service fails to meet expectations. For operators, standardization means an end to a patch-work of regulation that requires different data in different formats for each city in which they operate. Standardization provides assurance to operators that data requests can be clearly defined and are fully implementable. As a consensus-based, open source standard, operators have an equal voice along with cities in the ongoing development of the GBFS specification. Comprehensive documentation and resources are available to cities and operators alike to aid in implementation.","title":"GBFS reduces administrative burdens on cities, reduces compliance burdens on operators."},{"location":"learn/white-papers/data-policy/#recommendations","text":"","title":"Recommendations"},{"location":"learn/white-papers/data-policy/#include-gbfs-as-part-of-a-tender","text":"Your tender should require a publicly accessible GBFS API and should set expectations for the data needed to meet your policy goals. Sample language for tenders: Data sharing requirements: A publicly accessible API that conforms to the General Bikeshare Feed Specification (GBFS) current version available at https://github.com/NABSA/gbfs/ . The GBFS API must be available to the public on the open internet without requiring authentication.","title":"Include GBFS as part of a tender."},{"location":"learn/white-papers/data-policy/#determine-what-data-to-require-in-a-comprehensive-policy","text":"As the shared mobility industry evolves, GBFS evolves to include new features, capabilities, and services. This is why you will read \u2018or its equivalent\u2019 in the sample policy language and detailed GBFS information that follows. Simply requiring a shared mobility operator to provide a public GBFS feed will not guarantee the data will fulfill regulatory or other needs. When developing data policies, it is a good idea to gather input from subject matter experts who will be involved in the program implementation. These may include staff from your IT department, City Attorney\u2019s office, City Clerk or third parties involved in data analysis. GBFS is designed to accommodate the needs of a wide variety of mobility platforms and use cases, from traditional docked bikeshare to free floating bikes, scooters, and other vehicles. The specification consists of thirteen files or endpoints that contain different types of mobility data. Some of these files and their associated fields are required in order to be compliant with the specification, while others are optional. Which of these files are required by the specification depends on the specific type of mobility system being represented. Optional files and fields provide additional data for specific purposes and use cases. Municipalities may need to require some of these optional files or fields in their regulations to provide additional information in support of travelers, municipal goals, or other needs.","title":"Determine What Data to Require in a Comprehensive Policy."},{"location":"learn/white-papers/data-policy/#overview-of-gbfs-files","text":"File Name Where Required gbfs.json Required \u2013 This file is an index of URLs for all other files published as part of a GBFS API. To make data available to the public, a link to this file should be published on the city or agency website or open data portal. gbfs_versions.json Optional \u2013 This file lists all files published by the operator according to their versions. Maintaining feeds in past versions as new versions of GBFS become available may prevent breaking of downstream applications. system_information.json Required \u2013 This file contains basic information about the shared mobility system, however most of the fields are optional. Best practices are to publish the optional fields phone_number, email and feed_contact_email. Additional optional fields may be useful depending on your use case. vehicle_types.json Conditionally Required \u2013 This file is required of systems that include information about vehicle types in the free_bike_status file or its equivalent. This file should be published by systems offering multiple vehicle types for rental, for example pedal bikes and ebikes. If this file is not published, all vehicles in the feed are assumed to be non-motorized bicycles. station_information.json Conditionally Required \u2013 This file is required of systems utilizing docks. Any station defined in this file must have a corresponding entry in the station_status.json file. It contains a list of all stations, their docking or parking capacities, and locations. It supports the configuration of virtual stations that may be used to designate approved parking areas such as racks or geofenced areas for free floating vehicles. This information may be used to support parking restrictions for dockless vehicles through the use of designated parking areas. station_status.json Conditionally Required \u2013 This file is required of systems utilizing docks and optionally may be used in dockless systems to monitor virtual stations. Any station defined in this file must have a corresponding entry in the station_information.json file.This is a real-time file that shows the current status of a station or virtual station, its vehicles, and its docks. It includes aggregated numbers of available vehicles and docks which may optionally be aggregated by vehicle type. This data may be used to determine equitable distribution of services. The optional field num_bikes_disabled or its equivalent may be useful in determining the total number of deployed vehicles or the percentage of the vehicle fleet that is able to be rented. free_bike_status.json Conditionally Required \u2013 This file (or its equivalent) is required for free floating (dockless) or hybrid (docked/dockless) vehicles. It is optional for station based (docked) vehicles. This is a real-time file that shows the current location, availability status, and other attributes of individual vehicles in a fleet. May optionally be used in station based (docked) systems to publish information on vehicle types, charge or fuel levels, and other vehicle attributes. This data may be used to determine the number of vehicles deployed, their availability for rental, and their distribution within the service area. system_hours.json Optional \u2013 This file is used to indicate hours and days of operation when vehicles are available for rent. It should be required if the service is not available for 24 hours a day, 7 days a week. If this file is not published, it indicates that vehicles are available for rental 24/7. (This file may be deprecated in the future, in which case system hours should be published using the method described in the appropriate version.) system_calendar.json Optional \u2013 This optional file should be required of systems that operate seasonally or that do not offer continuous year-round service. (This file may be deprecated in the future in which case system hours should be published using the method described in the appropriate version.) system_regions.json Optional \u2013 This file is used to define regions within a system. It may be used to support reporting in systems that encompass multiple jurisdictions. system_pricing_plans.json Optional \u2013 This file describes pricing plans for a system. It is useful to third party trip planning applications but may not be comprehensive enough to model all available pricing for the system. system_alerts.json Optional \u2013 This file is intended to alert users about changes to the system that do not fall within normal system operations. For example, system closures due to extreme weather would be listed here. Cities should require this file for use as a means of communicating emergency or other information to users. geofencing_zones.json Optional \u2013 This file describes geofenced zones and their associated rules or attributes. Geofenced zones may be used to communicate information regarding parking, speed limits, no ride zones, or other rules or restrictions. They may be used to define geographies related to equity, vehicle caps, or other use cases. Cities should require this file if their policies rely on geofence information. Care should be taken when developing geospatial policies that rely on location data. Location data from GPS, cellular, and Wi-Fi signals are subject to interference resulting in accuracy levels in the tens of meters or greater.","title":"Overview of GBFS Files"},{"location":"learn/white-papers/data-policy/#data-policy-recommendations","text":"Data policies should include clear, enforceable language outlining exactly what data are required and what version of the specification must be published. At minimum, a shared mobility data policy should: Ensure ongoing access to data for both the regulating body and the public without undue restrictions on its use. Clearly define the format and version of the required data. Ensure access to specific data needed to effectively permit, regulate, and manage shared mobility providers. Protect the privacy of individuals using the mobility platform. Sample policy language [COMPANY] shall provide a publicly accessible API that conforms to the General Bikeshare Feed Specification (GBFS) current version available at https://github.com/NABSA/gbfs/ . [COMPANY] must make the API available to the public on the open internet without requiring authentication. [COMPANY] shall inform [PERMITTING AGENCY] of the URL for the gbfs.json endpoint prior to deploying vehicles. [COMPANY] must notify [PERMITTING AGENCY] at least 30 days prior to changing the URL of the gbfs.json endpoint. Data contained in the API shall be offered to the public and [PERMITTING AGENCY] under a non-revocable license that allows the API data to be used, modified, and shared without restriction beyond attribution. Upon release of a new version of GBFS, [COMPANY] must update API to the new version within [XX 1 ] days unless prior arrangement has been made with [PERMITTING AGENCY]. GBFS API must contain the following endpoints and all fields required under the GBFS specification: * gbfs.json * system_information.json * [ list of additional endpoints e.g. station_information.json, station_status.json, free_bike status.json or its equivalent, etc.] In addition to the fields required under the specification the following files must also contain these optional fields: file_name.json: field_name, field name file_name.json: field_name, field name (1.) 90 days recommended For an example of how a regulator may tailor this language to their particular needs, see SFMTA\u2019s scooter permit language (beginning on page 41).","title":"Data policy recommendations"},{"location":"learn/white-papers/data-policy/#additional-considerations","text":"The value of open mobility data can only be fully realized when that data is easily accessible to the public. Cities and agencies should publish the locations of gbfs.json files on their websites or open data portals and on the openly available dataset catalogue connected to GBFS. GBFS has been developed and tested under a consensus model to ensure that data defined in the specification will not negatively impact user privacy. Extreme care should be taken when requiring data from operators that is outside the scope of the specification. (The over-collection of data \u2014 collecting data without a defined purpose \u2014 is strongly discouraged. Combining shared mobility data with other publicly available datasets could have serious privacy implications.) Data regarding vehicles that are part of an active rental should never appear in GBFS feeds.","title":"Additional Considerations"},{"location":"learn/white-papers/data-policy/#useful-links","text":"GBFS Repo on GitHub GBFS Public Slack Channel MobilityData Shared Mobility team email: sharedmobility@mobilitydata.org","title":"Useful links"},{"location":"learn/white-papers/data-policy/#acknowledgement","text":"Shared Mobility Team at MobilityData Heidi Guenin - Director, Product, Shared Mobility Mitch Vars - Senior, Shared Mobility Specialist Jos\u00e9e Sabourin - Shared Mobility Specialist Reviewers Diego Canales - Global Partnerships Manager, Populus AI Josh Johnson - Public Policy Manager, Spin Andrew Salzberg - Head of Policy, Transit Michael Schwartz - Head of Customers and Policy, Ride Report This document is built with the intention of supporting and helping cities in the GBFS adoption and does not serve as legal advice. Policy makers should determine if additional consideration of local laws and statutes is necessary before using the sample policy language contained in this document.","title":"Acknowledgement"},{"location":"specification/","text":"Specification \u00b6 Current Version (v2.3) Reference Change Proposals Governance Process Current Version \u00b6 The current official version of GBFS is v2.3 . As described in the GBFS governance , when changes are made to the specification, the changes are placed into Release Candidate (RC) status. The changes remain in RC status pending implementation. Implementation requirements are that at least 1 producer and 1 consumer implement the changes. The implementors MUST be stakeholders other than The Advocate (who opened the PR). Once implemented successfully, the change is merged into an official current release. See the Current Version of GBFS Change Proposals \u00b6 GBFS is an open source project developed under a consensus-based governance model. Contributors come from across the shared mobility industry, public sector, civic technology and elsewhere. An overview of current work can be found on the Project Roadmap . Comments or questions can be addressed to the community by opening an issue on the GBFS GitHub repo. Proposals for changes or additions to the specification can be made through pull requests . See Change Proposals Governance Process \u00b6 GBFS is an open source project developed under a consensus-based governance model. Contributors come from across the shared mobility industry, public sector, civic technology and elsewhere. Anyone can propose a change to the specification by opening a pull request on the GBFS GitHub repository. See the Governance Process","title":"Specification"},{"location":"specification/#specification","text":"Current Version (v2.3) Reference Change Proposals Governance Process","title":"Specification"},{"location":"specification/#current-version","text":"The current official version of GBFS is v2.3 . As described in the GBFS governance , when changes are made to the specification, the changes are placed into Release Candidate (RC) status. The changes remain in RC status pending implementation. Implementation requirements are that at least 1 producer and 1 consumer implement the changes. The implementors MUST be stakeholders other than The Advocate (who opened the PR). Once implemented successfully, the change is merged into an official current release. See the Current Version of GBFS","title":"Current Version"},{"location":"specification/#change-proposals","text":"GBFS is an open source project developed under a consensus-based governance model. Contributors come from across the shared mobility industry, public sector, civic technology and elsewhere. An overview of current work can be found on the Project Roadmap . Comments or questions can be addressed to the community by opening an issue on the GBFS GitHub repo. Proposals for changes or additions to the specification can be made through pull requests . See Change Proposals","title":"Change Proposals"},{"location":"specification/#governance-process","text":"GBFS is an open source project developed under a consensus-based governance model. Contributors come from across the shared mobility industry, public sector, civic technology and elsewhere. Anyone can propose a change to the specification by opening a pull request on the GBFS GitHub repository. See the Governance Process","title":"Governance Process"},{"location":"specification/change-proposals/","text":"Change Proposals \u00b6 The following changes are currently under consideration. Geofencing refactor MobilityData has been working on a refactor of the geofencing_zones.json file. The geofencing endpoint was added to the specification starting with v2.1 in early 2020. Since that time we've heard that it has been a source of confusion for both data producers and consumers. Before opening a PR, we'd like to solicit feedback on proposed solutions. To learn more or get involved please refer to Issue #404 on the GBFS repo. Internationalization of freeform text fields Since its development in 2014, GBFS has become widely adopted around the world. GBFS feeds are now available in over 40 countries, but few of these data sets use languages other than English. The current specification requires publishers to produce a separate instance of the entire data set for each language they wish to support. When only a small handful of fields in the specification contain freeform text, this makes supporting multiple languages overly burdensome. To learn more or get involved please refer to Issue #262 on the GBFS repo, and the accompanying needs assessment . New Discovery Endpoint: GBFS Georgraphies / GBFS Systems This proposal would define a new endpoint listing all available data sets from a single provider for each market in which they operate. This new endpoint would aid in the discovery and cataloging of GBFS data sets. To learn more or get involved please refer to Issue #306 on the GBFS repo. Changes to data structures Currently there are two fields, vehicle_type_area_capacity and vehicle_type_dock_capacity that use data from other fields as object keys. This is inconsistent with other similar fields in the specification such as vehicle_types_available and has caused some challenges in generating models and validation. This proposal resolves these inconsistencies to make data modeling and validation easier. To learn more or get involved please refer to PR #407 on the GBFS repo.","title":"Change Proposals"},{"location":"specification/change-proposals/#change-proposals","text":"The following changes are currently under consideration. Geofencing refactor MobilityData has been working on a refactor of the geofencing_zones.json file. The geofencing endpoint was added to the specification starting with v2.1 in early 2020. Since that time we've heard that it has been a source of confusion for both data producers and consumers. Before opening a PR, we'd like to solicit feedback on proposed solutions. To learn more or get involved please refer to Issue #404 on the GBFS repo. Internationalization of freeform text fields Since its development in 2014, GBFS has become widely adopted around the world. GBFS feeds are now available in over 40 countries, but few of these data sets use languages other than English. The current specification requires publishers to produce a separate instance of the entire data set for each language they wish to support. When only a small handful of fields in the specification contain freeform text, this makes supporting multiple languages overly burdensome. To learn more or get involved please refer to Issue #262 on the GBFS repo, and the accompanying needs assessment . New Discovery Endpoint: GBFS Georgraphies / GBFS Systems This proposal would define a new endpoint listing all available data sets from a single provider for each market in which they operate. This new endpoint would aid in the discovery and cataloging of GBFS data sets. To learn more or get involved please refer to Issue #306 on the GBFS repo. Changes to data structures Currently there are two fields, vehicle_type_area_capacity and vehicle_type_dock_capacity that use data from other fields as object keys. This is inconsistent with other similar fields in the specification such as vehicle_types_available and has caused some challenges in generating models and validation. This proposal resolves these inconsistencies to make data modeling and validation easier. To learn more or get involved please refer to PR #407 on the GBFS repo.","title":"Change Proposals"},{"location":"specification/process/","text":"Governance Process \u00b6 GBFS is an open specification, developed and maintained by the community of producers and consumers of GBFS data. The specification is not fixed or unchangeable. As the shared mobility industry evolves, it is expected that the specification will be extended by the GBFS community to include new features and capabilities over time. If you are new to engaging with the community on this repository, firstly welcome! Please identify which organization you represent when posting. To manage the change process, the following guidelines have been established. Anyone can propose a change. A change is proposed by opening a Pull Request (PR) at the GBFS GitHub repository. The proposer becomes \u201cThe Advocate\u201d. Comments and feedback from the GBFS community are received to iterate on the proposed change. Discussion lasts for as long as necessary to address questions and revisions, but must be at least 7 calendar days. After 7 calendar days, The Advocate can call for a vote. Should The Advocate not call a vote or respond to comments from the community for a period of 30 full calendar days, anyone in the community can call for a vote. Vote lasts the minimum period sufficient to cover 10 full calendar days. Voting ends at 23:59:59 UTC. The vote announcement must conform to this template: I hereby call a vote on this proposal. Voting will be open for 10 full calendar days until 11:59PM UTC on X. Please vote for or against the proposal, and include the organization for which you are voting in your comment. Please note if you can commit to implementing the proposal. The person calling for the vote should announce the vote in the GBFS Slack channel with a link to the PR. The message should conform to this template: A vote has been called on PR # [title of PR] (link to PR). This vote will be open for 10 full calendar days, until 11:59PM UTC on X. Please vote for or against the proposal on GitHub. MobilityData will both comment on the PR on GitHub and send a reminder in the GBFS Slack channel when there are 2 calendar days remaining on the vote. The reminder should conform to this template: Slack: Voting on PR # [title of PR] (link to PR) closes in 2 calendar days. Please vote for or against the proposal on GitHub. GitHub: V oting on this PR closes in 2 calendar days. Please vote for or against the proposal, and include the organization for which you are voting in your comment. Please note if you can commit to implementing the proposal. Once a vote is called, a \"Vote Open\" label will be added to the PR. After the 2 day reminder, the label will be replaced with \"Vote Closing Soon\", once the vote is closed, the label will become either \u201cVote Passed\u201d or \u201cVoted Failed\u201d depending on the vote outcome. A vote passes if there is unanimous consensus with at least 3 votes in favor. At least one of these votes MUST be from a producer and at least one MUST be from a consumer. The producer and consumer votes MUST come from stakeholders other than The Advocate. MobilityData serves as facilitator but does not vote on proposed changes. Votes against a proposal can stop a proposal from passing if they provide a specific reason for voting against and contain actionable feedback. The Advocate should cancel a vote and restart the process if significant changes are made to the proposal after stakeholders have voted. Should the vote fail, The Advocate can choose to continue work on the proposal with the feedback received and restart the governance process, or abandon the proposal by closing the Pull Request. Another interested member of the community can take over the proposal if they feel the addition is valuable. When a vote passes, the change is placed into Release Candidate (RC) status. The change remains in RC status pending implementation. Implementation requirements are that at least 1 producer and 1 consumer implement the changes. The implementors MUST be stakeholders other than The Advocate. Once implemented successfully, the change is merged into an official current release. Editorial changes as well as items that are not found in gbfs.md do not need to be voted on. Extensions that include new capabilities and features MUST be voted on. Issues and pull requests will be considered stale after 120 days, at which point participants will be notified via comment. Should they wish to keep the discussion open, it is the responsibility of the participants to re-engage in the conversation. If there is no re-engagement, the issue or pull request will be closed 60 days after the stale date.","title":"Governance Process"},{"location":"specification/process/#governance-process","text":"GBFS is an open specification, developed and maintained by the community of producers and consumers of GBFS data. The specification is not fixed or unchangeable. As the shared mobility industry evolves, it is expected that the specification will be extended by the GBFS community to include new features and capabilities over time. If you are new to engaging with the community on this repository, firstly welcome! Please identify which organization you represent when posting. To manage the change process, the following guidelines have been established. Anyone can propose a change. A change is proposed by opening a Pull Request (PR) at the GBFS GitHub repository. The proposer becomes \u201cThe Advocate\u201d. Comments and feedback from the GBFS community are received to iterate on the proposed change. Discussion lasts for as long as necessary to address questions and revisions, but must be at least 7 calendar days. After 7 calendar days, The Advocate can call for a vote. Should The Advocate not call a vote or respond to comments from the community for a period of 30 full calendar days, anyone in the community can call for a vote. Vote lasts the minimum period sufficient to cover 10 full calendar days. Voting ends at 23:59:59 UTC. The vote announcement must conform to this template: I hereby call a vote on this proposal. Voting will be open for 10 full calendar days until 11:59PM UTC on X. Please vote for or against the proposal, and include the organization for which you are voting in your comment. Please note if you can commit to implementing the proposal. The person calling for the vote should announce the vote in the GBFS Slack channel with a link to the PR. The message should conform to this template: A vote has been called on PR # [title of PR] (link to PR). This vote will be open for 10 full calendar days, until 11:59PM UTC on X. Please vote for or against the proposal on GitHub. MobilityData will both comment on the PR on GitHub and send a reminder in the GBFS Slack channel when there are 2 calendar days remaining on the vote. The reminder should conform to this template: Slack: Voting on PR # [title of PR] (link to PR) closes in 2 calendar days. Please vote for or against the proposal on GitHub. GitHub: V oting on this PR closes in 2 calendar days. Please vote for or against the proposal, and include the organization for which you are voting in your comment. Please note if you can commit to implementing the proposal. Once a vote is called, a \"Vote Open\" label will be added to the PR. After the 2 day reminder, the label will be replaced with \"Vote Closing Soon\", once the vote is closed, the label will become either \u201cVote Passed\u201d or \u201cVoted Failed\u201d depending on the vote outcome. A vote passes if there is unanimous consensus with at least 3 votes in favor. At least one of these votes MUST be from a producer and at least one MUST be from a consumer. The producer and consumer votes MUST come from stakeholders other than The Advocate. MobilityData serves as facilitator but does not vote on proposed changes. Votes against a proposal can stop a proposal from passing if they provide a specific reason for voting against and contain actionable feedback. The Advocate should cancel a vote and restart the process if significant changes are made to the proposal after stakeholders have voted. Should the vote fail, The Advocate can choose to continue work on the proposal with the feedback received and restart the governance process, or abandon the proposal by closing the Pull Request. Another interested member of the community can take over the proposal if they feel the addition is valuable. When a vote passes, the change is placed into Release Candidate (RC) status. The change remains in RC status pending implementation. Implementation requirements are that at least 1 producer and 1 consumer implement the changes. The implementors MUST be stakeholders other than The Advocate. Once implemented successfully, the change is merged into an official current release. Editorial changes as well as items that are not found in gbfs.md do not need to be voted on. Extensions that include new capabilities and features MUST be voted on. Issues and pull requests will be considered stale after 120 days, at which point participants will be notified via comment. Should they wish to keep the discussion open, it is the responsibility of the participants to re-engage in the conversation. If there is no re-engagement, the issue or pull request will be closed 60 days after the stale date.","title":"Governance Process"},{"location":"specification/reference/","text":"General Bikeshare Feed Specification (GBFS) \u00b6 This document explains the types of files and data that comprise the General Bikeshare Feed Specification (GBFS) and defines the fields used in those files. Reference version \u00b6 This documentation refers to v2.3 . For past and upcoming versions see the README . Terminology \u00b6 The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\", \"SHALL NOT\", \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"NOT RECOMMENDED\", \"MAY\", and \"OPTIONAL\" in this document are to be interpreted as described in RFC2119 , BCP 14 and RFC8174 when, and only when, they appear in all capitals, as shown here. Table of Contents \u00b6 Introduction Term Definitions Files Accessibility File Requirements Licensing Field Types Files gbfs.json gbfs_versions.json (added in v1.1) system_information.json vehicle_types.json (added in v2.1) station_information.json station_status.json free_bike_status.json system_hours.json system_calendar.json system_regions.json system_pricing_plans.json system_alerts.json geofencing_zones.json (added in v2.1) Deep Links - Analytics and Examples (added in v1.1) Introduction \u00b6 This specification has been designed with the following concepts in mind: Provide the status of the system at this moment Do not provide information whose primary purpose is historical The specification supports real-time travel advice in GBFS-consuming applications. Term Definitions \u00b6 This section defines terms that are used throughout this document. JSON - (JavaScript Object Notation) is a lightweight format for storing and transporting data. This document uses many terms defined by the JSON standard, including field, array, and object. (https://www.w3schools.com/js/js_json_datatypes.asp) Field - In JSON, a name/value pair consists of a field name (in double quotes), followed by a colon, followed by a value. (https://www.w3schools.com/js/js_json_syntax.asp) GeoJSON - GeoJSON is a format for encoding a variety of geographic data structures. (https://geojson.org/) REQUIRED - The field MUST be included in the dataset, and a value MUST be provided in that field for each record. OPTIONAL - The field MAY be omitted from the dataset. If an OPTIONAL column is included, some of the entries in that field MAY be empty strings. An omitted field is equivalent to a field that is empty. Conditionally REQUIRED - The field or file is REQUIRED under certain conditions, which are outlined in the field or file description. Outside of these conditions, this field or file is OPTIONAL. Files \u00b6 File Name REQUIRED Defines gbfs.json Yes (as of v2.0) Auto-discovery file that links to all of the other files published by the system. gbfs_versions.json (added in v1.1) OPTIONAL Lists all feed endpoints published according to versions of the GBFS documentation. system_information.json Yes Details including system operator, system location, year implemented, URL, contact info, time zone. vehicle_types.json (added in v2.1) Conditionally REQUIRED Describes the types of vehicles that system operator has available for rent. REQUIRED of systems that include information about vehicle types in the free_bike_status.json file. If this file is not included, then all vehicles in the feed are assumed to be non-motorized bicycles. station_information.json Conditionally REQUIRED List of all stations, their capacities and locations. REQUIRED of systems utilizing docks. station_status.json Conditionally REQUIRED Number of available vehicles and docks at each station and station availability. REQUIRED of systems utilizing docks. free_bike_status.json Conditionally REQUIRED (as of v2.1) Describes all vehicles that are not currently in active rental. REQUIRED for free floating (dockless) vehicles. OPTIONAL for station based (docked) vehicles. Vehicles that are part of an active rental MUST NOT appear in this feed. system_hours.json OPTIONAL Hours of operation for the system. system_calendar.json OPTIONAL Dates of operation for the system. system_regions.json OPTIONAL Regions the system is broken up into. system_pricing_plans.json OPTIONAL System pricing scheme. system_alerts.json OPTIONAL Current system alerts. geofencing_zones.json (added in v2.1) OPTIONAL Geofencing zones and their associated rules and attributes. Accessibility \u00b6 Datasets SHOULD be published at an easily accessible, public, permanent URL. (for example, https://www.example.com/gbfs/v3/gbfs.json). The URL SHOULD be directly available without requiring login to access the file to facilitate download by consuming software applications. To be compliant with GBFS, all systems MUST have an entry in the systems.csv file. Feed Availability \u00b6 Automated tools for application performance monitoring SHOULD be used to ensure feed availability. Producers SHOULD provide a technical contact who can respond to feed outages in the feed_contact_email field in the system_information.json file. Seasonal Shutdowns, Disruptions of Service \u00b6 Feeds SHOULD continue to be published during seasonal or temporary shutdowns. Feed URLs SHOULD NOT return a 404. An empty bikes array SHOULD be returned by free_bike_status.json . Stations in station_status.json SHOULD be set to is_renting:false , is_returning:false and is_installed:false where applicable. Seasonal shutdown dates SHOULD be reflected in system_calendar.json . Announcements for disruptions of service, including disabled stations or temporary closures of stations or systems, SHOULD be made in system_alerts.json . File Requirements \u00b6 All files SHOULD be valid JSON. All files in the spec MAY be published at a URL path or with an alternate name (for example, station_info instead of station_information.json ) (as of v2.0) . All data SHOULD be UTF-8 encoded. Line breaks SHOULD be represented by unix newline characters only (\\n). Pagination is not supported. File Distribution \u00b6 Files are distributed as individual HTTP endpoints. REQUIRED files MUST NOT 404. They MUST return a properly formatted JSON file as defined in Output Format . OPTIONAL files MAY 404. A 404 of an OPTIONAL file SHOULD NOT be considered an error. Version Endpoints \u00b6 The version of the GBFS specification to which a feed conforms is declared in the version field in all files. See Output Format . All endpoints within a data set SHOULD conform to the same MAJOR or MINOR version. Mixing of versions within data sets is NOT RECOMMENDED. GBFS documentation will include a list of current and past supported MAJOR and MINOR versions. Supported versions SHALL NOT span more than two MAJOR versions. Past versions with Supported status MAY be patched to correct bugs or vulnerabilities, but new features will not be introduced. Past versions with Deprecated status will not be patched, and their use SHOULD be discontinued. Producers SHOULD continue to maintain existing feeds while they have Supported status. GBFS producers SHOULD provide endpoints that conform to the current MAJOR version release within 180 days of a new MAJOR version release. It is not necessary to support more than one MINOR release of the same MAJOR release group, because MINOR releases are backwards-compatible. See Specification Versioning . Auto-Discovery \u00b6 Publishers SHOULD implement auto-discovery of GBFS feeds by linking to the location of the gbfs.json auto-discovery endpoint. The location of the auto-discovery file SHOULD be provided in the HTML area of the shared mobility landing page hosted at the URL specified in the url field of the system_information.json file. This is referenced via a link tag with the following format: <link rel=\"gbfs\" type=\"application/json\" href=\"https://www.example.com/data/gbfs.json\" /> References: https://microformats.org/wiki/existing-rel-values https://microformats.org/wiki/rel-faq#How_is_rel_used A shared mobility landing page MAY contain links to auto-discovery files for multiple systems. Localization \u00b6 Each set of data files SHOULD be distributed in a single language as defined in system_information.json . A system that wants to publish feeds in multiple languages SHOULD do so by publishing multiple distributions, such as: https://www.example.com/data/en/system_information.json https://www.example.com/data/fr/system_information.json Text Fields and Naming \u00b6 Rich text SHOULD NOT be stored in free form text fields. Fields SHOULD NOT contain HTML. All customer-facing text strings (including station names) SHOULD use Mixed Case (not ALL CAPS), following local conventions for capitalization of place names on displays capable of displaying lower case characters. Examples: Central Park South Villiers-sur-Marne Market Street Abbreviations SHOULD NOT be used for names and other text (for example, St. for Street), unless a location is called by its abbreviated name (for example, \u201cJFK Airport\u201d). Abbreviations may be problematic for accessibility by screen reader software and voice user interfaces. Consuming software can be engineered to reliably convert full words to abbreviations for display, but converting from abbreviations to full words is prone to more risk of error. Names used for stations, virtual stations, and geofenced areas SHOULD be human-readable. Naming conventions used for locations SHOULD consider a variety of use cases including both text and maps. Descriptions SHOULD NOT include information so specific that it could be used in tracking of vehicles or trips. Coordinate Precision \u00b6 Feeds SHOULD provide 6 digits (0.000001) of precision for decimal degrees lat/lon coordinates. Decimal places Degrees Distance at the Equator 0 1.0 111 km 1 0.1 11.1 km 2 0.01 1.11 km 3 0.001 111 m 4 0.0001 11.1 m 5 0.00001 1.11 m 6 0.000001 0.11 m 7 0.0000001 1.11 cm Data Latency \u00b6 The data returned by the near-realtime endpoints station_status.json and free_bike_status.json SHOULD be as close to realtime as possible, but in no case should it be more than 5 minutes out-of-date. Appropriate values SHOULD be set using the ttl property for each endpoint based on how often the data in feeds are refreshed or updated. For near-realtime endpoints where the data should always be refreshed, the ttl value SHOULD be 0 . The last_updated timestamp represents the publisher's knowledge of the current state of the system at that point in time. The last_reported timestamp represents the last time a station or vehicle reported its status to the operator's backend. Licensing \u00b6 It is RECOMMENDED that all GBFS data sets be offered under an open data license. Open data licenses allow consumers to freely use, modify, and share GBFS data for any purpose in perpetuity. Licensing of GBFS data provides certainty to GBFS consumers, allowing them to integrate GBFS data into their work. All GBFS data sets SHOULD specify a license using the license_id field with an SPDX identifier or by using the license_url field with a URL pointing to a custom license in system_information.json . See the GBFS repo for a comparison of a subset of standard licenses . Field Types \u00b6 Array - A JSON element consisting of an ordered sequence of zero or more values. Boolean - One of two possible values, true or false . Boolean values MUST be JSON booleans, not strings (meaning true or false , not \"true\" or \"false\" ). (as of v2.0) Country code - Country code following the ISO 3166-1 alpha-2 notation . Date - A date in the ISO 8601 Complete Date Extended Format: YYYY-MM-DD . Example: 2019-09-13 for September 13th, 2019. Datetime (added in v2.3) - Combination of a date and a time following ISO 8601 notation . Attributes : year , month , day , hour , minute , second , and timezone. Email - An email address. Example: example@example.com Enum (Enumerable values) - An option from a set of predefined constants in the \"Defines\" column. Enum values SHOULD be lowercase. Example: The rental_methods field contains values creditcard , paypass , etc... Float (added in v2.1) - A 32-bit floating point number. GeoJSON FeatureCollection - A FeatureCollection as described by the IETF RFC 7946 https://tools.ietf.org/html/rfc7946#section-3.3. GeoJSON MultiPolygon - A Geometry Object as described by the IETF RFC https://tools.ietf.org/html/rfc7946#section-3.1.7. ID - Should be represented as a string that identifies that particular entity. An ID: MUST be unique within like fields (for example, station_id MUST be unique among stations). Does not have to be globally unique, unless otherwise specified. MUST NOT contain spaces. MUST be persistent for a given entity (station, plan, etc). An exception is floating bike bike_id , which MUST NOT be persistent for privacy reasons (see free_bike_status.json ). (as of v2.0) Language - An IETF BCP 47 language code. For an introduction to IETF BCP 47, refer to https://www.rfc-editor.org/rfc/bcp/bcp47.txt and https://www.w3.org/International/articles/language-tags/. Examples: en for English, en-US for American English, or de for German. Latitude - WGS84 latitude in decimal degrees. The value MUST be greater than or equal to -90.0 and less than or equal to 90.0. Example: 41.890169 for the Colosseum in Rome. Longitude - WGS84 longitude in decimal degrees. The value MUST be greater than or equal to -180.0 and less than or equal to 180.0. Example: 12.492269 for the Colosseum in Rome. Non-negative Float - A 32-bit floating point number greater than or equal to 0. Non-negative Integer - An integer greater than or equal to 0. Object - A JSON element consisting of key-value pairs (fields). String - Can only contain text. Strings MUST NOT contain any formatting codes (including HTML) other than newlines. Time - Service time in the HH:MM:SS format for the time zone indicated in system_information.json (00:00:00 - 47:59:59). Time can stretch up to one additional day in the future to accommodate situations where, for example, a system was open from 11:30pm - 11pm the next day (23:30:00-47:00:00). Timestamp - Timestamp fields MUST be represented as integers in POSIX time (representing the number of seconds since January 1st 1970 00:00:00 UTC). Timezone - TZ timezone from the https://www.iana.org/time-zones. Timezone names never contain the space character but MAY contain an underscore. Refer to https://en.wikipedia.org/wiki/List_of_tz_zones for a list of valid values. Example: Asia/Tokyo , America/Los_Angeles or Africa/Cairo . URI (added in v1.1) - A fully qualified URI that includes the scheme (for example, com.example.android:// ). Any special characters in the URI MUST be correctly escaped. See the following https://www.w3.org/Addressing/URL/4_URI_Recommentations.html for a description of how to create fully qualified URI values. Note that URIs MAY be URLs. URL - A fully qualified URL that includes http:// or https:// . Any special characters in the URL MUST be correctly escaped. See the following https://www.w3.org/Addressing/URL/4_URI_Recommentations.html for a description of how to create fully qualified URL values. Extensions Outside of the Specification \u00b6 To accommodate the needs of feed producers and consumers prior to the adoption of a change, additional fields can be added to feeds even if these fields are not part of the official specification. Custom extensions that may provide value to the GBFS community and align with the GBFS Guiding Principles SHOULD be proposed for inclusion in the specification through the change process. Extreme caution is advised to avoid introducing extensions which may be used to track the movements of vehicles or their users. Field names of extensions SHOULD be prefixed with an underscore ( _) character. It is strongly RECOMMENDED that these additional fields be documented on the wiki page of the GBFS repository in this format: Submitted by Field Name File Name Defines Publisher's name _field_name Name of GBFS endpoint where field is used Description of purpose of use JSON Files \u00b6 Output Format \u00b6 Every JSON file presented in this specification contains the same common header information at the top level of the JSON response object: Field Name REQUIRED Type Defines last_updated Yes Timestamp Indicates the last time data in the feed was updated. This timestamp represents the publisher's knowledge of the current state of the system at this point in time. ttl Yes Non-negative integer Number of seconds before the data in the feed will be updated again (0 if the data should always be refreshed). version (added in v1.1) Yes String GBFS version number to which the feed conforms, according to the versioning framework. data Yes Object Response data in the form of name:value pairs. Example: { \"last_updated\" : 1640887163 , \"ttl\" : 3600 , \"version\" : \"2.3-RC2\" , \"data\" : { \"name\" : \"Example Bike Rental\" , \"system_id\" : \"example_cityname\" , \"timezone\" : \"America/Chicago\" , \"language\" : \"en\" } } gbfs.json \u00b6 The gbfs.json discovery file SHOULD represent a single system or geographic area in which vehicles are operated. The location (URL) of the gbfs.json file SHOULD be made available to the public using the specification\u2019s auto-discovery function. The following fields are all attributes within the main data object for this feed. Field Name REQUIRED Type Defines language Yes Language The language that will be used throughout the rest of the files. It MUST match the value in the system_information.json file. - feeds Yes Array An array of all of the feeds that are published by this auto-discovery file. Each element in the array is an object with the keys below. \u2003- name Yes String Key identifying the type of feed this is. The key MUST be the base file name defined in the spec for the corresponding feed type ( system_information for system_information.json file, station_information for station_information.json file). \u2003- url Yes URL URL for the feed. Note that the actual feed endpoints (urls) may not be defined in the file_name.json format. For example, a valid feed endpoint could end with station_info instead of station_information.json . Example: { \"last_updated\" : 1640887163 , \"ttl\" : 0 , \"version\" : \"2.3-RC2\" , \"data\" : { \"en\" : { \"feeds\" : [ { \"name\" : \"system_information\" , \"url\" : \"https://www.example.com/gbfs/1/en/system_information\" }, { \"name\" : \"station_information\" , \"url\" : \"https://www.example.com/gbfs/1/en/station_information\" } ] }, \"fr\" : { \"feeds\" : [ { \"name\" : \"system_information\" , \"url\" : \"https://www.example.com/gbfs/1/fr/system_information\" }, { \"name\" : \"station_information\" , \"url\" : \"https://www.example.com/gbfs/1/fr/station_information\" } ] } } } gbfs_versions.json \u00b6 (added in v1.1) Each expression of a GBFS feed describes all of the versions that are available. The following fields are all attributes within the main data object for this feed. Field Name REQUIRED Type Defines versions Yes Array Contains one object, as defined below, for each of the available versions of a feed. The array MUST be sorted by increasing MAJOR and MINOR version number. - version Yes String The semantic version of the feed in the form X.Y . - url Yes URL URL of the corresponding gbfs.json endpoint. Example: { \"last_updated\" : 1640887163 , \"ttl\" : 0 , \"version\" : \"2.3-RC2\" , \"data\" : { \"versions\" : [ { \"version\" : \"2.0\" , \"url\" : \"https://www.example.com/gbfs/2/gbfs\" }, { \"version\" : \"2.3-RC2\" , \"url\" : \"https://www.example.com/gbfs/3/gbfs\" } ] } } system_information.json \u00b6 The following fields are all attributes within the main data object for this feed. Field Name REQUIRED Type Defines system_id Yes ID This is a globally unique identifier for the vehicle share system. It is up to the publisher of the feed to guarantee uniqueness and MUST be checked against existing system_id fields in systems.csv to ensure this. This value is intended to remain the same over the life of the system. Each distinct system or geographic area in which vehicles are operated SHOULD have its own system_id . System IDs SHOULD be recognizable as belonging to a particular system - for example, bcycle_austin or biketown_pdx - as opposed to random strings. language Yes Language The language that will be used throughout the rest of the files. It MUST match the value in the gbfs.json file. name Yes String Name of the system to be displayed to customers. short_name OPTIONAL String OPTIONAL abbreviation for a system. operator OPTIONAL String Name of the system operator. url OPTIONAL URL The URL of the vehicle share system. purchase_url OPTIONAL URL URL where a customer can purchase a membership. start_date OPTIONAL Date Date that the system began operations. phone_number OPTIONAL Phone Number This OPTIONAL field SHOULD contain a single voice telephone number for the specified system\u2019s customer service department. It can and SHOULD contain punctuation marks to group the digits of the number. Dialable text (for example, Capital Bikeshare\u2019s \"877-430-BIKE\") is permitted, but the field MUST NOT contain any other descriptive text. email OPTIONAL Email This OPTIONAL field SHOULD contain a single contact email address actively monitored by the operator\u2019s customer service department. This email address SHOULD be a direct contact point where riders can reach a customer service representative. feed_contact_email (added in v1.1) OPTIONAL Email This OPTIONAL field SHOULD contain a single contact email for feed consumers to report technical issues with the feed. timezone Yes Timezone The time zone where the system is located. license_url OPTIONAL URL A fully qualified URL of a page that defines the license terms for the GBFS data for this system, as well as any other license terms the system would like to define (including the use of corporate trademarks, etc) brand_assets (added in v2.3) OPTIONAL Object An object where each key defines one of the items listed below. - brand_last_modified (added in v2.3) Conditionally REQUIRED Date REQUIRED if brand_assets object is defined. Date that indicates the last time any included brand assets were updated or modified. - brand_terms_url (added in v2.3) OPTIONAL URL A fully qualified URL pointing to the location of a page that defines the license terms of brand icons, colors, or other trademark information. This field MUST NOT take the place of license_url or license_id . - brand_image_url (added in v2.3) Conditionally REQUIRED URL REQUIRED if brand_assets object is defined. A fully qualified URL pointing to the location of a graphic file representing the brand for the service. File MUST be in SVG V1.1 format and MUST be either square or round. - brand_image_url_dark (added in v2.3) OPTIONAL URL A fully qualified URL pointing to the location of a graphic file representing the brand for the service for use in dark mode applications. File MUST be in SVG V1.1 format and MUST be either square or round. - color (added in v2.3) OPTIONAL String Color used to represent the brand for the service expressed as a 6 digit hexadecimal color code in the form #000000. terms_url (added in v2.3) OPTIONAL URL A fully qualified URL pointing to the terms of service (also often called \"terms of use\" or \"terms and conditions\") for the service. terms_last_updated (added in v2.3) Conditionally REQUIRED Date REQUIRED if terms_url is defined. The date that the terms of service provided at terms_url were last updated. privacy_url (added in v2.3) OPTIONAL URL A fully qualified URL pointing to the privacy policy for the service. privacy_last_updated (added in v2.3) Conditionally REQUIRED Date REQUIRED if privacy_url is defined. The date that the privacy policy provided at privacy_url was last updated. rental_apps (added in v1.1) OPTIONAL Object Contains rental app information in the android and ios JSON objects. - android (added in v1.1) OPTIONAL Object Contains rental app download and app discovery information for the Android platform in the store_uri and discovery_uri fields. See examples of how to use these fields and supported analytics . \u2003- store_uri (added in v1.1) Conditionally REQUIRED URI URI where the rental Android app can be downloaded from. Typically this will be a URI to an app store, such as Google Play. If the URI points to an app store, the URI SHOULD follow Android best practices so the viewing app can directly open the URI to the native app store app instead of a website. REQUIRED if a rental_uris . android field is populated. See the Analytics section for how viewing apps can report the origin of the deep link to rental apps. Example value: https://play.google.com/store/apps/details?id=com.example.android \u2003- discovery_uri (added in v1.1) Conditionally REQUIRED URI URI that can be used to discover if the rental Android app is installed on the device (for example, using PackageManager.queryIntentActivities() ). This intent is used by viewing apps to prioritize rental apps for a particular user based on whether they already have a particular rental app installed. REQUIRED if a rental_uris . android field is populated. Example value: com.example.android:// - ios (added in v1.1) OPTIONAL Object Contains rental information for the iOS platform in the store_uri and discovery_uri fields. See examples of how to use these fields and supported analytics . \u2003- store_uri (added in v1.1) Conditionally REQUIRED URI URI where the rental iOS app can be downloaded from. Typically this will be a URI to an app store, such as the Apple App Store. If the URI points to an app store, the URI SHOULD follow iOS best practices so the viewing app can directly open the URI to the native app store app instead of a website. REQUIRED if a rental_uris . ios field is populated. See the Analytics section for how viewing apps can report the origin of the deep link to rental apps. Example value: https://apps.apple.com/app/apple-store/id123456789 \u2003- discovery_uri (added in v1.1) Conditionally REQUIRED URI URI that can be used to discover if the rental iOS app is installed on the device (for example, using UIApplication canOpenURL: ). This intent is used by viewing apps to prioritize rental apps for a particular user based on whether they already have a particular rental app installed. REQUIRED if a rental_uris . ios field is populated. Example value: com.example.ios:// Example: { \"last_updated\" : 1640887163 , \"ttl\" : 1800 , \"version\" : \"2.3-RC2\" , \"data\" : { \"system_id\" : \"example_cityname\" , \"language\" : \"en\" , \"name\" : \"Example Bike Rental\" , \"short_name\" : \"Example Bike\" , \"operator\" : \"Example Sharing, Inc\" , \"url\" : \"https://www.example.com\" , \"purchase_url\" : \"https://www.example.com\" , \"start_date\" : \"2010-06-10\" , \"phone_number\" : \"1-800-555-1234\" , \"email\" : \"customerservice@example.com\" , \"feed_contact_email\" : \"datafeed@example.com\" , \"timezone\" : \"America/Chicago\" , \"license_url\" : \"https://www.example.com/data-license.html\" , \"terms_url\" : \"https://www.example.com/terms\" , \"terms_last_updated\" : \"2021-06-21\" , \"privacy_url\" : \"https://www.example.com/privacy-policy\" , \"privacy_last_updated\" : \"2019-01-13\" , \"rental_apps\" : { \"android\" : { \"discovery_uri\" : \"com.example.android://\" , \"store_uri\" : \"https://play.google.com/store/apps/details?id=com.example.android\" }, \"ios\" : { \"store_uri\" : \"https://apps.apple.com/app/apple-store/id123456789\" , \"discovery_uri\" : \"com.example.ios://\" } }, \"brand_assets\" : { \"brand_last_modified\" : \"2021-06-15\" , \"brand_image_url\" : \"https://www.example.com/assets/brand_image.svg\" , \"brand_image_url_dark\" : \"https://www.example.com/assets/brand_image_dark.svg\" , \"color\" : \"#C2D32C\" , \"brand_terms_url\" : \"https://www.example.com/assets/brand.pdf\" } } } vehicle_types.json \u00b6 (added in v2.1) REQUIRED of systems that include information about vehicle types in the free_bike_status.json file. If this file is not included, then all vehicles in the feed are assumed to be non-motorized bicycles. This file SHOULD be published by systems offering multiple vehicle types for rental, for example pedal bikes and ebikes. The following fields are all attributes within the main data object for this feed. Field Name REQUIRED Type Defines vehicle_types Yes Array Array that contains one object per vehicle type in the system as defined below. - vehicle_type_id Yes ID Unique identifier of a vehicle type. See Field Types above for ID field requirements. - form_factor Yes Enum The vehicle's general form factor. Current valid values are: bicycle cargo_bicycle ( (added in v2.3) ) car moped scooter (will be deprecated in v3.0) scooter_standing (standing kick scooter, added in v2.3 ) scooted_seated (this is a kick scooter with a seat, not to be confused with moped , added in v2.3 ) other - rider_capacity (added in v2.3) OPTIONAL Non-negative integer The number of riders (driver included) the vehicle can legally accommodate. - cargo_volume_capacity (added in v2.3) OPTIONAL Non-negative integer Cargo volume available in the vehicle, expressed in liters. For cars, it corresponds to the space between the boot floor, including the storage under the hatch, to the rear shelf in the trunk. - cargo_load_capacity (added in v2.3) OPTIONAL Non-negative integer The capacity of the vehicle cargo space (excluding passengers), expressed in kilograms. - propulsion_type Yes Enum The primary propulsion type of the vehicle. Current valid values are: human (Pedal or foot propulsion) electric_assist (Provides electric motor assist only in combination with human propulsion - no throttle mode) electric (Powered by battery-powered electric motor with throttle mode) combustion (Powered by gasoline combustion engine) combustion_diesel (Powered by diesel combustion engine, added in v2.3) hybrid (Powered by combined combustion engine and battery-powered motor, added in v2.3) plug_in_hybrid (Powered by combined combustion engine and battery-powered motor with plug-in charging, added in v2.3) hydrogen_fuel_cell (Powered by hydrogen fuel cell powered electric motor, added in v2.3) This field was inspired by, but differs from the propulsion types field described in the Open Mobility Foundation Mobility Data Specification . - eco_label (added in v2.3) OPTIONAL Array Vehicle air quality certificate. Official anti-pollution certificate, based on the information on the vehicle's registration certificate, attesting to its level of pollutant emissions based on a defined standard. In Europe, for example, it is the European emission standard. The aim of this measure is to encourage the use of the least polluting vehicles by allowing them to drive during pollution peaks or in low emission zones. Each element in the array is an object with the keys below. \u2003- country_code (added in v2.3) Conditionally REQUIRED Country code REQUIRED if eco_label is defined. Country where the eco_sticker applies. \u2003- eco_sticker (added in v2.3) Conditionally REQUIRED String REQUIRED if eco_label is defined. Name of the eco label. The name must be written in lowercase, separated by an underscore. Example of eco_sticker in Europe : CritAirLabel (France) critair critair_1 critair_2 critair_3 critair_4 critair_5 UmweltPlakette (Germany) euro_2 euro_3 euro_4 euro_5 euro_6 euro_6_temp euro_E UmweltPickerl (Austrich) euro_1 euro_2 euro_3 euro_4 euro_5 Reg_certificates (Belgium) reg_certificates Distintivo_ambiental (Spain) 0 eco b c - max_range_meters Conditionally REQUIRED Non-negative float REQUIRED if the vehicle has a motor (as indicated by having a value other than human in the propulsion_type field). This represents the furthest distance in meters that the vehicle can travel without recharging or refueling when it has the maximum amount of energy potential (for example, a full battery or full tank of gas). - name OPTIONAL String The public name of this vehicle type. - vehicle_accessories (added in v2.3) OPTIONAL Array Description of accessories available in the vehicle. These accessories are part of the vehicle and are not supposed to change frequently. Current valid values are: air_conditioning (Vehicle has air conditioning) automatic (Automatic gear switch) manual (Manual gear switch) convertible (Vehicle is convertible) cruise_control (Vehicle has a cruise control system (\"Tempomat\")) doors_2 (Vehicle has 2 doors) doors_3 (Vehicle has 3 doors) doors_4 (Vehicle has 4 doors) doors_5 (Vehicle has 5 doors) navigation (Vehicle has a built-in navigation system) - g_CO2_km (added in v2.3) OPTIONAL Non-negative integer Maximum quantity of CO2, in grams, emitted per kilometer, according to the WLTP . - vehicle_image (added in v2.3) OPTIONAL URL URL to an image that would assist the user in identifying the vehicle (for example, an image of the vehicle or a logo). Allowed formats: JPEG, PNG. - make (added in v2.3) OPTIONAL String - model (added in v2.3) OPTIONAL String - color (added in v2.3) OPTIONAL String - wheel_count (added in v2.3) OPTIONAL Non-negative Integer Number of wheels this vehicle type has. - max_permitted_speed (added in v2.3) OPTIONAL Non-negative Integer The maximum speed in kilometers per hour this vehicle is permitted to reach in accordance with local permit and regulations. - rated_power (added in v2.3) OPTIONAL Non-negative Integer The rated power of the motor for this vehicle type in watts. - default_reserve_time (added in v2.3) OPTIONAL Non-negative Integer Maximum time in minutes that a vehicle can be reserved before a rental begins. When a vehicle is reserved by a user, the vehicle remains locked until the rental begins. During this time the vehicle is unavailable and cannot be reserved or rented by other users. The vehicle status in free_bike_status.json MUST be set to is_reserved = true . If the value of default_reserve_time elapses without a rental beginning, the vehicle status MUST change to is_reserved = false . If default_reserve_time is set to 0 , the vehicle type cannot be reserved. - return_constraint (as of v2.3) OPTIONAL Enum The conditions for returning the vehicle at the end of the rental. Current valid values are: free_floating (The vehicle can be returned anywhere permitted within the service area. Note that this field is subject to rules in geofencing_zones.json if defined.) roundtrip_station (The vehicle has to be returned to the same station from which it was initially rented. Note that a specific station can be assigned to the vehicle in free_bike_status.json using home_station.) any_station (The vehicle has to be returned to any station within the service area .) hybrid (The vehicle can be returned to any station, or anywhere else permitted within the service area. Note that the vehicle is subject to rules in geofencing_zones.json if defined.) - vehicle_assets (added in v2.3) OPTIONAL Object An object where each key defines one of the items listed below. \u2003\u2003- icon_url (added in v2.3) Conditionally REQUIRED URL REQUIRED if vehicle_assets is defined. A fully qualified URL pointing to the location of a graphic icon file that MAY be used to represent this vehicle type on maps and in other applications. File MUST be in SVG V1.1 format and MUST be either square or round. \u2003\u2003- icon_url_dark (added in v2.3) OPTIONAL URL A fully qualified URL pointing to the location of a graphic icon file to be used to represent this vehicle type when in dark mode on maps and in other applications. File MUST be in SVG V1.1 format and MUST be either square or round. \u2003\u2003- icon_last_modified (added in v2.3) Conditionally REQUIRED Date REQUIRED if vehicle_assets is defined. Date that indicates the last time any included vehicle icon images were modified or updated. - default_pricing_plan_id (added in v2.3) OPTIONAL ID A plan_id , as defined in system_pricing_plans.json , that identifies a default pricing plan for this vehicle to be used by trip planning applications for purposes of calculating the cost of a single trip using this vehicle type. This default pricing plan is superseded by pricing_plan_id when pricing_plan_id is defined in free_bike_status.json Publishers SHOULD define default_pricing_plan_id first and then override it using pricing_plan_id in free_bike_status.json when necessary. Note: This field will become Conditionally REQUIRED in the next MAJOR version. - pricing_plan_ids (added in v2.3) OPTIONAL Array Array of all pricing plan IDs, as defined in system_pricing_plans.json , that are applied to this vehicle type. This array SHOULD be published when there are multiple pricing plans defined in system_pricing_plans.json that apply to a single vehicle type. Example: { \"last_updated\" : 1640887163 , \"ttl\" : 0 , \"version\" : \"2.3-RC2\" , \"data\" : { \"vehicle_types\" : [ { \"vehicle_type_id\" : \"abc123\" , \"form_factor\" : \"bicycle\" , \"propulsion_type\" : \"human\" , \"name\" : \"Example Basic Bike\" , \"wheel_count\" : 2 , \"default_reserve_time\" : 30 , \"return_constraint\" : \"any_station\" , \"vehicle_assets\" : { \"icon_url\" : \"https://www.example.com/assets/icon_bicycle.svg\" , \"icon_url_dark\" : \"https://www.example.com/assets/icon_bicycle_dark.svg\" , \"icon_last_modified\" : \"2021-06-15\" }, \"default_pricing_plan_id\" : \"bike_plan_1\" , \"pricing_plan_ids\" : [ \"bike_plan_1\" , \"bike_plan_2\" , \"bike_plan_3\" ] }, { \"vehicle_type_id\" : \"cargo123\" , \"form_factor\" : \"cargo_bicycle\" , \"propulsion_type\" : \"human\" , \"name\" : \"Example Cargo Bike\" , \"wheel_count\" : 3 , \"default_reserve_time\" : 30 , \"return_constraint\" : \"roundtrip_station\" , \"vehicle_assets\" : { \"icon_url\" : \"https://www.example.com/assets/icon_cargobicycle.svg\" , \"icon_url_dark\" : \"https://www.example.com/assets/icon_cargobicycle_dark.svg\" , \"icon_last_modified\" : \"2021-06-15\" }, \"default_pricing_plan\" : \"cargo_plan_1\" , \"pricing_plans\" : [ \"cargo_plan_1\" , \"cargo_plan_2\" , \"cargo_plan_3\" ] }, { \"vehicle_type_id\" : \"def456\" , \"form_factor\" : \"scooter_standing\" , \"propulsion_type\" : \"electric\" , \"name\" : \"Example E-scooter V2\" , \"wheel_count\" : 2 , \"max_permitted_speed\" : 25 , \"rated_power\" : 350 , \"default_reserve_time\" : 30 , \"max_range_meters\" : 12345 , \"return_constraint\" : \"free_floating\" , \"vehicle_assets\" : { \"icon_url\" : \"https://www.example.com/assets/icon_escooter.svg\" , \"icon_url_dark\" : \"https://www.example.com/assets/icon_escooter_dark.svg\" , \"icon_last_modified\" : \"2021-06-15\" }, \"default_pricing_plan_id\" : \"scooter_plan_1\" }, { \"vehicle_type_id\" : \"car1\" , \"form_factor\" : \"car\" , \"rider_capacity\" : 5 , \"min_cargo_volume_capacity\" : 200 , \"propulsion_type\" : \"combustion_diesel\" , \"eco_label\" : [ { \"country_code\" : \"FR\" , \"eco_sticker\" : \"critair_1\" }, { \"country_code\" : \"DE\" , \"eco_sticker\" : \"euro_2\" } ], \"name\" : \"Four-door Sedan\" , \"wheel_count\" : 4 , \"default_reserve_time\" : 0 , \"max_range_meters\" : 523992 , \"return_constraint\" : \"roundtrip_station\" , \"vehicle_accessories\" : [ \"doors_4\" , \"automatic\" , \"cruise_control\" ], \"g_CO2_km\" : 120 , \"vehicle_image\" : \"https://www.example.com/assets/renault-clio.jpg\" , \"make\" : \"Renault\" , \"model\" : \"Clio\" , \"color\" : \"white\" , \"vehicle_assets\" : { \"icon_url\" : \"https://www.example.com/assets/icon_car.svg\" , \"icon_url_dark\" : \"https://www.example.com/assets/icon_car_dark.svg\" , \"icon_last_modified\" : \"2021-06-15\" }, \"default_pricing_plan_id\" : \"car_plan_1\" } ] } } station_information.json \u00b6 All stations included in station_information.json are considered public (meaning they can be shown on a map for public use). If there are private stations (such as Capital Bikeshare\u2019s White House station), these SHOULD NOT be included here. Any station that is represented in station_information.json MUST have a corresponding entry in station_status.json . The following fields are all attributes within the main data object for this feed. Field Name REQUIRED Type Defines stations Yes Array Array that contains one object per station as defined below. - station_id Yes ID Identifier of a station. - name Yes String The public name of the station for display in maps, digital signage, and other text applications. Names SHOULD reflect the station location through the use of a cross street or local landmark. Abbreviations SHOULD NOT be used for names and other text (for example, \"St.\" for \"Street\") unless a location is called by its abbreviated name (for example, \u201cJFK Airport\u201d). See Text Fields and Naming . Examples: Broadway and East 22nd Street Convention Center Central Park South - short_name OPTIONAL String Short name or other type of identifier. - lat Yes Latitude Latitude of the station in decimal degrees. This field SHOULD have a precision of 6 decimal places (0.000001). See Coordinate Precision . - lon Yes Longitude Longitude of the station in decimal degrees. This field SHOULD have a precision of 6 decimal places (0.000001). See Coordinate Precision . - address OPTIONAL String Address (street number and name) where station is located. This MUST be a valid address, not a free-form text description. Example: 1234 Main Street - cross_street OPTIONAL String Cross street or landmark where the station is located. - region_id OPTIONAL ID Identifier of the region where station is located. See system_regions.json . - post_code OPTIONAL String Postal code where station is located. - rental_methods OPTIONAL Array Payment methods accepted at this station. Current valid values are: key (operator issued vehicle key / fob / card) creditcard paypass applepay androidpay transitcard accountnumber phone - is_virtual_station (added in v2.1) OPTIONAL Boolean Is this station a location with or without smart dock technology? true - The station is a location without smart docking infrastructure. the station may be defined by a point (lat/lon) and/or station_area (below). false - The station consists of smart docking infrastructure (docks). This field SHOULD be published by mobility systems that have station locations without standard, internet connected physical docking infrastructure. These may be racks or geofenced areas designated for rental and/or return of vehicles. Locations that fit within this description SHOULD have the is_virtual_station boolean set to true . - station_area (added in v2.1) OPTIONAL GeoJSON MultiPolygon A GeoJSON MultiPolygon that describes the area of a virtual station. If station_area is supplied, then the record describes a virtual station. If lat/lon and station_area are both defined, the lat/lon is the significant coordinate of the station (for example, parking facility or valet drop-off and pick up point). The station_area takes precedence over any ride_allowed rules in overlapping geofencing_zones . - parking_type (added in v2.3) OPTIONAL Enum Type of parking station. Current valid values are: parking_lot (Off-street parking lot) street_parking (Curbside parking) underground_parking (Parking that is below street level, station may be non-communicating) sidewalk_parking (Park vehicle on sidewalk, out of the pedestrian right of way) other - parking_hoop (added in v2.3) OPTIONAL Boolean Are parking hoops present at this station? true - Parking hoops are present at this station. false - Parking hoops are not present at this station. Parking hoops are lockable devices that are used to secure a parking space to prevent parking of unauthorized vehicles. - contact_phone (added in v2.3) OPTIONAL Phone number Contact phone of the station. - capacity OPTIONAL Non-negative integer Number of total docking points installed at this station, both available and unavailable, regardless of what vehicle types are allowed at each dock. If this is a virtual station defined using the is_virtual_station field, this number represents the total number of vehicles of all types that can be parked at the virtual station. If the virtual station is defined by station_area , this is the number that can park within the station area. If lat / lon are defined, this is the number that can park at those coordinates. - vehicle_capacity (added in v2.1) OPTIONAL Object An object used to describe the parking capacity of virtual stations (defined using the is_virtual_station field), where each key is a vehicle_type_id as described in vehicle_types.json , and the value is a number representing the total number of vehicles of this type that can park within the virtual station. If the virtual station is defined by station_area , this is the number that can park within the station area. If lat / lon is defined, this is the number that can park at those coordinates. - vehicle_type_capacity (added in v2.1) OPTIONAL Object An object used to describe the docking capacity of a station where each key is a vehicle_type_id as described in vehicle_types.json , and the value is a number representing the total docking points installed at this station, both available and unavailable for the specified vehicle type. - is_valet_station (added in v2.1) OPTIONAL Boolean Are valet services provided at this station? true - Valet services are provided at this station. false - Valet services are not provided at this station. If this field is empty, it is assumed that valet services are not provided at this station. This field\u2019s boolean SHOULD be set to true during the hours which valet service is provided at the station. Valet service is defined as providing unlimited capacity at a station. - is_charging_station (added in v2.3) OPTIONAL Boolean Does the station support charging of electric vehicles? true - Electric vehicle charging is available at this station. false - Electric vehicle charging is not available at this station. - rental_uris (added in v1.1) OPTIONAL Object Contains rental URIs for Android, iOS, and web in the android , ios , and web fields. See examples of how to use these fields and supported analytics . \u2003- android (added in v1.1) OPTIONAL URI URI that can be passed to an Android app with an android.intent.action.VIEW Android intent to support Android Deep Links (https://developer.android.com/training/app-links/deep-linking). Please use Android App Links (https://developer.android.com/training/app-links) if possible so viewing apps do not need to manually manage the redirect of the user to the app store if the user does not have the application installed. This URI SHOULD be a deep link specific to this station, and SHOULD NOT be a general rental page that includes information for more than one station. The deep link SHOULD take users directly to this station, without any prompts, interstitial pages, or logins. Make sure that users can see this station even if they never previously opened the application. If this field is empty, it means deep linking is not supported in the native Android rental app. Note that the URI does not necessarily include the station_id for this station - other identifiers can be used by the rental app within the URI to uniquely identify this station. See the Analytics section for how viewing apps can report the origin of the deep link to rental apps. Android App Links example value: https://www.example.com/app?sid=1234567890&platform=android Deep Link (without App Links) example value: com.example.android://open.example.app/app?sid=1234567890 \u2003- ios (added in v1.1) OPTIONAL URI URI that can be used on iOS to launch the rental app for this station. More information on this iOS feature can be found here . Please use iOS Universal Links (https://developer.apple.com/ios/universal-links/) if possible so viewing apps do not need to manually manage the redirect of the user to the app store if the user does not have the application installed. This URI SHOULD be a deep link specific to this station, and SHOULD NOT be a general rental page that includes information for more than one station. The deep link SHOULD take users directly to this station, without any prompts, interstitial pages, or logins. Make sure that users can see this station even if they never previously opened the application. If this field is empty, it means deep linking is not supported in the native iOS rental app. Note that the URI does not necessarily include the 'station_id' for this station - other identifiers can be used by the rental app within the URI to uniquely identify this station. See the Analytics section for how viewing apps can report the origin of the deep link to rental apps. iOS Universal Links example value: https://www.example.com/app?sid=1234567890&platform=ios Deep Link (without Universal Links) example value: com.example.ios://open.example.app/app?sid=1234567890 \u2003- web (added in v1.1) OPTIONAL URL URL that can be used by a web browser to show more information about renting a vehicle at this station. This URL SHOULD be a deep link specific to this station, and SHOULD NOT be a general rental page that includes information for more than one station. The deep link SHOULD take users directly to this station, without any prompts, interstitial pages, or logins. Make sure that users can see this station even if they never previously opened the application. If this field is empty, it means deep linking is not supported for web browsers. Example value: https://www.example.com/app?sid=1234567890 Example 1: Physical station { \"last_updated\" : 1640887163 , \"ttl\" : 0 , \"version\" : \"2.3-RC2\" , \"data\" : { \"stations\" : [ { \"station_id\" : \"pga\" , \"name\" : \"Parking garage A\" , \"lat\" : 12.345678 , \"lon\" : 45.678901 , \"parking_type\" : \"underground_parking\" , \"parking_hoop\" : false , \"contact_phone\" : \"+33109874321\" , \"is_charging_station\" : \"true\" , \"vehicle_type_capacity\" : { \"abc123\" : 7 , \"def456\" : 9 } } ] } } Example 2: Virtual station { \"last_updated\" : 1640887163 , \"ttl\" : 0 , \"version\" : \"2.3-RC2\" , \"data\" : { \"stations\" : [ { \"station_id\" : \"station12\" , \"name\" : \"SE Belmont & SE 10 th\" , \"lat\" : 45.516445 , \"lon\" : -122.655775 , \"is_valet_station\" : false , \"is_virtual_station\" : true , \"is_charging_station\" : \"false\" , \"station_area\" : { \"type\" : \"MultiPolygon\" , \"coordinates\" : [ [ [ [ -122.655775 , 45.516445 ], [ -122.655705 , 45.516445 ], [ -122.655705 , 45.516495 ], [ -122.655775 , 45.516495 ], [ -122.655775 , 45.516445 ] ] ] ] }, \"capacity\" : 16 , \"vehicle_capacity\" : { \"abc123\" : 8 , \"def456\" : 8 , \"ghi789\" : 16 } } ] } } station_status.json \u00b6 Describes the capacity and rental availability of a station. Data returned SHOULD be as close to realtime as possible, but in no case should it be more than 5 minutes out-of-date. See Data Latency . Data reflects the operator's most recent knowledge of the station\u2019s status. Any station that is represented in station_status.json MUST have a corresponding entry in station_information.json . The following fields are all attributes within the main data object for this feed. Field Name REQUIRED Type Defines stations Yes Array Array that contains one object per station in the system as defined below. - station_id Yes ID Identifier of a station. See station_information.json . - num_bikes_available Yes Non-negative integer Number of functional vehicles physically at the station that may be offered for rental. To know if the vehicles are available for rental, see is_renting . If is_renting = true , this is the number of vehicles that are currently available for rent. If is_renting = false , this is the number of vehicles that would be available for rent if the station were set to allow rentals. - vehicle_types_available (added in v2.1) Conditionally REQUIRED Array REQUIRED if the vehicle_types.json file has been defined. This field's value is an array of objects. Each of these objects is used to model the total number of each defined vehicle type available at a station. The total number of vehicles from each of these objects SHOULD add up to match the value specified in the num_bikes_available field. \u2003- vehicle_type_id (added in v2.1) Conditionally REQUIRED ID REQUIRED if the vehicle_types_available is defined. The vehicle_type_id of each vehicle type at the station as described in vehicle_types.json . \u2003- count (added in v2.1) Conditionally REQUIRED Non-negative integer The total number of available vehicles of the corresponding vehicle_type_id , as defined in vehicle_types.json , at the station. - num_bikes_disabled OPTIONAL Non-negative integer Number of disabled vehicles of any type at the station. Vendors who do not want to publicize the number of disabled vehicles or docks in their system can opt to omit station capacity (in station_information.json , num_bikes_disabled , and num_docks_disabled (as of v2.0) . If station capacity is published, then broken docks/vehicles can be inferred (though not specifically whether the decreased capacity is a broken vehicle or dock). - num_docks_available Conditionally REQUIRED (as of v2.0) Non-negative integer REQUIRED except for stations that have unlimited docking capacity (for example, valet stations) (as of v2.0) . Number of functional docks physically at the station that are able to accept vehicles for return. To know if the docks are accepting vehicle returns, see is_returning . If is_returning = true , this is the number of docks that are currently available to accept vehicle returns. If is_returning = false , this is the number of docks that would be available if the station were set to allow returns. - vehicle_docks_available (added in v2.1) Conditionally REQUIRED Array REQUIRED in feeds where the vehicle_types.json is defined and where certain docks are only able to accept certain vehicle types. If every dock at the station is able to accept any vehicle type, then this field is not REQUIRED. This field's value is an array of objects. Each of these objects is used to model the number of docks available for certain vehicle types. The total number of docks from each of these objects SHOULD add up to match the value specified in the num_docks_available field. \u2003- vehicle_type_ids (added in v2.1) Conditionally REQUIRED Array REQUIRED if vehicle_docks_available is defined. An array of strings where each string represents a vehicle_type_id that is able to use a particular type of dock at the station \u2003- count (added in v2.1) Conditionally REQUIRED Non-negative integer REQUIRED if vehicle_docks_available is defined. The total number of available docks at the station, that can accept vehicles of the corresponding vehicle_type_id , in the vehicle_type_ids array. - num_docks_disabled OPTIONAL Non-negative integer Number of disabled dock points at the station. - is_installed Yes Boolean Is the station currently on the street? true - Station is installed on the street. false - Station is not installed on the street. Boolean SHOULD be set to true when equipment is present on the street. In seasonal systems where equipment is removed during winter, boolean SHOULD be set to false during the off season. May also be set to false to indicate planned (future) stations which have not yet been installed. - is_renting Yes Boolean Is the station currently renting vehicles? true - Station is renting vehicles. Even if the station is empty, if it would otherwise allow rentals, this value MUST be true . false - Station is not renting vehicles. If the station is temporarily taken out of service and not allowing rentals, this field MUST be set to false . If a station becomes inaccessible to users due to road construction or other factors this field SHOULD be set to false . Field SHOULD be set to false during hours or days when the system is not offering vehicles for rent. - is_returning Yes Boolean Is the station accepting vehicle returns? true - Station is accepting vehicle returns. Even if the station is full, if it would otherwise allow vehicle returns, this value MUST be true . false - Station is not accepting vehicle returns. If the station is temporarily taken out of service and not allowing vehicle returns, this field MUST be set to false . If a station becomes inaccessible to users due to road construction or other factors, this field SHOULD be set to false . - last_reported Yes Timestamp The last time this station reported its status to the operator's backend. Example: { \"last_updated\" : 1640887163 , \"ttl\" : 0 , \"version\" : \"2.3-RC2\" , \"data\" : { \"stations\" : [ { \"station_id\" : \"station1\" , \"is_installed\" : true , \"is_renting\" : true , \"is_returning\" : true , \"last_reported\" : 1609866125 , \"num_docks_available\" : 3 , \"num_docks_disabled\" : 1 , \"vehicle_docks_available\" : [ { \"vehicle_type_ids\" : [ \"abc123\" , \"def456\" ], \"count\" : 2 }, { \"vehicle_type_ids\" : [ \"def456\" ], \"count\" : 1 } ], \"num_bikes_available\" : 1 , \"num_bikes_disabled\" : 2 , \"vehicle_types_available\" : [ { \"vehicle_type_id\" : \"abc123\" , \"count\" : 1 }, { \"vehicle_type_id\" : \"def456\" , \"count\" : 0 } ] }, { \"station_id\" : \"station2\" , \"is_installed\" : true , \"is_renting\" : true , \"is_returning\" : true , \"last_reported\" : 1609866106 , \"num_docks_available\" : 8 , \"num_docks_disabled\" : 1 , \"vehicle_docks_available\" : [ { \"vehicle_type_ids\" : [ \"abc123\" ], \"count\" : 6 }, { \"vehicle_type_ids\" : [ \"def456\" ], \"count\" : 2 } ], \"num_bikes_available\" : 6 , \"num_bikes_disabled\" : 1 , \"vehicle_types_available\" : [ { \"vehicle_type_id\" : \"abc123\" , \"count\" : 2 }, { \"vehicle_type_id\" : \"def456\" , \"count\" : 4 } ] } ] } } free_bike_status.json \u00b6 (as of v2.1) Describes all vehicles that are not currently in active rental. REQUIRED for free floating (dockless) vehicles. OPTIONAL for station based (docked) vehicles. Data returned SHOULD be as close to realtime as possible, but in no case should it be more than 5 minutes out-of-date. See Data Latency . Vehicles that are part of an active rental MUST NOT appear in this feed. Vehicles listed as available for rental MUST be in the field and accessible to users. Vehicles that are not accessible (for example, in a warehouse or in transit) MUST NOT appear as available for rental. The following fields are all attributes within the main data object for this feed. Field Name REQUIRED Type Defines bikes Yes Array Array that contains one object per vehicle that is currently not part of an active rental, as defined below. - bike_id Yes ID Identifier of a vehicle. The bike_id identifier MUST be rotated to a random string after each trip to protect user privacy (as of v2.0) . Use of persistent vehicle IDs poses a threat to user privacy. The bike_id identifier SHOULD only be rotated once per trip. - lat Conditionally REQUIRED (as of v2.1) Latitude Latitude of the vehicle in decimal degrees. (as of v2.1) REQUIRED if station_id is not provided for this vehicle (free floating). This field SHOULD have a precision of 6 decimal places (0.000001). See Coordinate Precision . - lon Conditionally REQUIRED (as of v2.1) Longitude Longitude of the vehicle in decimal degrees. (as of v2.1) REQUIRED if station_id is not provided for this vehicle (free floating). This field SHOULD have a precision of 6 decimal places (0.000001). See Coordinate Precision . - is_reserved Yes Boolean Is the vehicle currently reserved? true - Vehicle is currently reserved. false - Vehicle is not currently reserved. - is_disabled Yes Boolean Is the vehicle currently disabled? true - Vehicle is currently disabled. false - Vehicle is not currently disabled. This field is used to indicate vehicles that are in the field but not available for rental. This may be due to a mechanical issue, low battery, etc. Publishing this data may prevent users from attempting to rent vehicles that are disabled and not available for rental. - rental_uris (added in v1.1) OPTIONAL Object JSON object that contains rental URIs for Android, iOS, and web in the android , ios , and web fields. See examples of how to use these fields and supported analytics . \u2003- android (added in v1.1) OPTIONAL URI URI that can be passed to an Android app with an android.intent.action.VIEW Android intent to support Android Deep Links (https://developer.android.com/training/app-links/deep-linking). Please use Android App Links (https://developer.android.com/training/app-links) if possible, so viewing apps do not need to manually manage the redirect of the user to the app store if the user does not have the application installed. This URI SHOULD be a deep link specific to this vehicle, and SHOULD NOT be a general rental page that includes information for more than one vehicle. The deep link SHOULD take users directly to this vehicle, without any prompts, interstitial pages, or logins. Make sure that users can see this vehicle even if they never previously opened the application. Note that as a best practice providers SHOULD rotate identifiers within deep links after each rental to avoid unintentionally exposing private vehicle trip origins and destinations. If this field is empty, it means deep linking is not supported in the native Android rental app. Note that the URI does not necessarily include the bike_id for this vehicle - other identifiers can be used by the rental app within the URI to uniquely identify this vehicle. See the Analytics section for how viewing apps can report the origin of the deep link to rental apps. Android App Links example value: https://www.example.com/app?sid=1234567890&platform=android Deep Link (without App Links) example value: com.example.android://open.example.app/app?sid=1234567890 \u2003- ios (added in v1.1) OPTIONAL URI URI that can be used on iOS to launch the rental app for this vehicle. More information on this iOS feature can be found here . Please use iOS Universal Links (https://developer.apple.com/ios/universal-links/) if possible, so viewing apps do not need to manually manage the redirect of the user to the app store if the user does not have the application installed. This URI SHOULD be a deep link specific to this vehicle, and SHOULD NOT be a general rental page that includes information for more than one vehicle. The deep link SHOULD take users directly to this vehicle, without any prompts, interstitial pages, or logins. Make sure that users can see this vehicle even if they never previously opened the application. Note that as a best practice providers SHOULD rotate identifiers within deep links after each rental to avoid unintentionally exposing private vehicle trip origins and destinations. If this field is empty, it means deep linking is not supported in the native iOS rental app. Note that the URI does not necessarily include the bike_id - other identifiers can be used by the rental app within the URL to uniquely identify this vehicle. See the Analytics section for how viewing apps can report the origin of the deep link to rental apps. iOS Universal Links example value: https://www.example.com/app?sid=1234567890&platform=ios Deep Link (without Universal Links) example value: com.example.ios://open.example.app/app?sid=1234567890 \u2003- web (added in v1.1) OPTIONAL URL URL that can be used by a web browser to show more information about renting a vehicle at this vehicle. This URL SHOULD be a deep link specific to this vehicle, and SHOULD NOT be a general rental page that includes information for more than one vehicle. The deep link SHOULD take users directly to this vehicle, without any prompts, interstitial pages, or logins. Make sure that users can see this vehicle even if they never previously opened the application. Note that as a best practice providers SHOULD rotate identifiers within deep links after each rental to avoid unintentionally exposing private vehicle trip origins and destinations. If this field is empty, it means deep linking is not supported for web browsers. Example value: https://www.example.com/app?sid=1234567890 - vehicle_type_id (added in v2.1) Conditionally REQUIRED ID REQUIRED if the vehicle_types.json file is defined. The vehicle_type_id of this vehicle, as described in vehicle_types.json . - last_reported (added in v2.1) OPTIONAL Timestamp The last time this vehicle reported its status to the operator's backend. - current_range_meters (added in v2.1) Conditionally REQUIRED Non-negative float REQUIRED if the corresponding vehicle_type definition for this vehicle has a motor. This value represents the furthest distance in meters that the vehicle can travel with the vehicle's current charge or fuel (without recharging or refueling). Note that in the case of carsharing, the given range is indicative and can be different from the one displayed on the vehicle's dashboard. - current_fuel_percent (added in v2.3) OPTIONAL Non-negative float This value represents the current percentage, expressed from 0 to 1, of fuel or battery power remaining in the vehicle. - station_id (added in v2.1) Conditionally REQUIRED ID REQUIRED if the vehicle is currently at a station and the vehicle_types.json file has been defined. Identifier referencing the station_id field in station_information.json . - home_station_id (added in v2.3) OPTIONAL ID The station_id of the station this vehicle must be returned to as defined in station_information.json . - pricing_plan_id (added in v2.2) OPTIONAL ID The plan_id of the pricing plan this vehicle is eligible for as described in system_pricing_plans.json . If this field is defined it supersedes default_pricing_plan_id in vehicle_types.json . This field SHOULD be used to override default_pricing_plan_id in vehicle_types.json to define pricing plans for individual vehicles when necessary. - vehicle_equipment (added in v2.3) OPTIONAL Array List of vehicle equipment provided by the operator in addition to the accessories already provided in the vehicle (field vehicle_accessories of vehicle_types.json ) but subject to more frequent updates. Current valid values are: child_seat_a (Baby seat (\"0-10kg\")) child_seat_b (Seat or seat extension for small children (\"9-18 kg\")) child_seat_c (Seat or seat extension for older children (\"15-36 kg\")) winter_tires (Vehicle has tires for winter weather) snow_chains - available_until (added in v2.3) OPTIONAL Datetime The date and time when any rental of the vehicle must be completed. The vehicle must be returned and made available for the next user by this time. If this field is empty, it indicates that the vehicle is available indefinitely. This field SHOULD be published by carsharing or other mobility systems where vehicles can be booked in advance for future travel. Example 1: Micromobility { \"last_updated\" : 1640887163 , \"ttl\" : 0 , \"version\" : \"2.3-RC2\" , \"data\" :{ \"bikes\" :[ { \"bike_id\" : \"973a5c94-c288-4a2b-afa6-de8aeb6ae2e5\" , \"last_reported\" : 1609866109 , \"lat\" : 12.34 , \"lon\" : 56.78 , \"is_reserved\" : false , \"is_disabled\" : false , \"vehicle_type_id\" : \"abc123\" , \"rental_uris\" : { \"android\" : \"https://www.example.com/app?bike_id=973a5c94-c288-4a2b-afa6-de8aeb6ae2e5&platform=android&\" , \"ios\" : \"https://www.example.com/app?bike_id=973a5c94-c288-4a2b-afa6-de8aeb6ae2e5&platform=ios\" } }, { \"bike_id\" : \"987fd100-b822-4347-86a4-b3eef8ca8b53\" , \"last_reported\" : 1609866204 , \"is_reserved\" : false , \"is_disabled\" : false , \"vehicle_type_id\" : \"def456\" , \"current_range_meters\" : 6543.0 , \"station_id\" : 86 , \"pricing_plan_id\" : \"plan3\" } ] } } Example 2: Carsharing { \"last_updated\" : 1640887163 , \"ttl\" : 0 , \"version\" : \"2.3-RC2\" , \"data\" :{ \"bikes\" :[ { \"bike_id\" : \"45bd3fb7-a2d5-4def-9de1-c645844ba962\" , \"last_reported\" : 1609866109 , \"lat\" : 12.345678 , \"lon\" : 56.789012 , \"is_reserved\" : false , \"is_disabled\" : false , \"vehicle_type_id\" : \"abc123\" , \"current_range_meters\" : 400000.0 , \"available_until\" : \"2021-05-17T15:00:00Z\" , \"home_station\" : \"station1\" , \"vehicle_equipment\" :[ \"child_seat_a\" , \"winter_tires\" ] }, { \"bike_id\" : \"d4521def-7922-4e46-8e1d-8ac397239bd0\" , \"last_reported\" : 1609866204 , \"is_reserved\" : false , \"is_disabled\" : false , \"vehicle_type_id\" : \"def456\" , \"current_fuel_percent\" : 0.7 , \"current_range_meters\" : 6543.0 , \"station_id\" : \"86\" , \"pricing_plan_id\" : \"plan3\" , \"home_station_id\" : \"146\" , \"vehicle_equipment\" :[ \"child_seat_a\" ] } ] } } system_hours.json \u00b6 This OPTIONAL file is used to describe hours and days of operation when vehicles are available for rental. If system_hours.json is not published, it indicates that vehicles are available for rental 24 hours a day, 7 days a week. The following fields are all attributes within the main data object for this feed. Field Name REQUIRED Type Defines rental_hours Yes Array Array of objects as defined below. The array MUST contain a minimum of one object identifying hours for every day of the week or a maximum of two for each day of the week objects (one for each user type). - user_types Yes Array An array of member and/or nonmember value(s). This indicates that this set of rental hours applies to either members or non-members only. - days Yes Array An array of abbreviations (first 3 letters) of English names of the days of the week for which this object applies (for example, [\"mon\", \"tue\", \"wed\", \"thu\", \"fri\", \"sat, \"sun\"] ). Rental hours MUST NOT be defined more than once for each day and user type. - start_time Yes Time Start time for the hours of operation of the system in the time zone indicated in system_information.json . - end_time Yes Time End time for the hours of operation of the system in the time zone indicated in system_information.json . Example: { \"last_updated\" : 1640887163 , \"ttl\" : 86400 , \"version\" : \"2.3-RC2\" , \"data\" : { \"rental_hours\" : [ { \"user_types\" : [ \"member\" ], \"days\" : [ \"sat\" , \"sun\" ], \"start_time\" : \"00:00:00\" , \"end_time\" : \"23:59:59\" }, { \"user_types\" : [ \"nonmember\" ], \"days\" : [ \"sat\" , \"sun\" ], \"start_time\" : \"05:00:00\" , \"end_time\" : \"23:59:59\" }, { \"user_types\" : [ \"member\" , \"nonmember\" ], \"days\" : [ \"mon\" , \"tue\" , \"wed\" , \"thu\" , \"fri\" ], \"start_time\" : \"00:00:00\" , \"end_time\" : \"23:59:59\" } ] } } system_calendar.json \u00b6 Describes the operating calendar for a system. This OPTIONAL file SHOULD be published by systems that operate seasonally or do not offer continuous year-round service. The following fields are all attributes within the main data object for this feed. Field Name REQUIRED Type Defines calendars Yes Array Array of objects describing the system operational calendar. A minimum of one calendar object is REQUIRED. If start and end dates are the same every year, then start_year and end_year SHOULD be omitted. - start_month Yes Non-negative Integer Starting month for the system operations ( 1 - 12 ). - start_day Yes Non-negative Integer Starting date for the system operations ( 1 - 31 ). - start_year OPTIONAL Non-negative Integer Starting year for the system operations. - end_month Yes Non-negative Integer Ending month for the system operations ( 1 - 12 ). - end_day Yes Non-negative Integer Ending date for the system operations ( 1 - 31 ). - end_year OPTIONAL Non-negative Integer Ending year for the system operations. Example: { \"last_updated\" : 1640887163 , \"ttl\" : 86400 , \"version\" : \"2.3-RC2\" , \"data\" : { \"calendars\" : [ { \"start_month\" : 4 , \"start_day\" : 1 , \"start_year\" : 2020 , \"end_month\" : 11 , \"end_day\" : 5 , \"end_year\" : 2020 } ] } } system_regions.json \u00b6 Describes regions for a system. Regions are a subset of a shared mobility system as defined by system_id in system_information.json . Regions may be defined for any purpose, for example political jurisdictions, neighborhoods or economic zones. The following fields are all attributes within the main data object for this feed. Field Name REQUIRED Type Defines regions Yes Array Array of objects as defined below. - region_id Yes ID Identifier for the region. - name Yes String Public name for this region. Example: { \"last_updated\" : 1640887163 , \"ttl\" : 86400 , \"version\" : \"2.3-RC2\" , \"data\" : { \"regions\" : [ { \"name\" : \"North\" , \"region_id\" : \"3\" }, { \"name\" : \"East\" , \"region_id\" : \"4\" }, { \"name\" : \"South\" , \"region_id\" : \"5\" }, { \"name\" : \"West\" , \"region_id\" : \"6\" } ] } } system_pricing_plans.json \u00b6 Describes pricing for the system. The following fields are all attributes within the main data object for this feed. Field Name REQUIRED Type Defines plans Yes Array Array of objects as defined below. - plan_id Yes ID Identifier for a pricing plan in the system. - url OPTIONAL URL URL where the customer can learn more about this pricing plan. - name Yes String Name of this pricing plan. - currency Yes String Currency used to pay the fare. This pricing is in ISO 4217 code: http://en.wikipedia.org/wiki/ISO_4217 (for example, CAD for Canadian dollars, EUR for euros, or JPY for Japanese yen.) - price Yes Non-Negative float OR String Fare price, in the unit specified by currency. If string, MUST be in decimal monetary value. (added in v2.2) Note: v3.0 will only allow non-negative float, therefore new implementations SHOULD be non-negative float. In case of non-rate price, this field is the total price. In case of rate price, this field is the base price that is charged only once per trip (typically the price for unlocking) in addition to per_km_pricing and/or per_min_pricing . - is_taxable Yes Boolean Will additional tax be added to the base price? true - Yes. false - No. false MAY be used to indicate that tax is not charged or that tax is included in the base price. - description Yes String Customer-readable description of the pricing plan. This SHOULD include the duration, price, conditions, etc. that the publisher would like users to see. - per_km_pricing (added in v2.2) OPTIONAL Array Array of segments when the price is a function of distance traveled, displayed in kilometers. Total cost is the addition of price and all segments in per_km_pricing and per_min_pricing . If this array is not provided, there are no variable costs based on distance. \u2003\u2003- start (added in v2.2) Conditionally REQUIRED Non-Negative Integer REQUIRED if per_km_pricing is defined. The kilometer at which this segment rate starts being charged (inclusive) . \u2003\u2003- rate (added in v2.2) Conditionally REQUIRED Float REQUIRED if per_km_pricing is defined. Rate that is charged for each kilometer interval after the start . Can be a negative number, which indicates that the traveler will receive a discount. \u2003\u2003- interval (added in v2.2) Conditionally REQUIRED Non-Negative Integer REQUIRED if per_km_pricing is defined. Interval in kilometers at which the rate of this segment is either reapplied indefinitely, or if defined, up until (but not including) end kilometer. An interval of 0 indicates the rate is only charged once. \u2003\u2003- end (added in v2.2) OPTIONAL Non-Negative Integer The kilometer at which the rate will no longer apply (exclusive) for example, if end is 20 the rate no longer applies at 20.00 km. If this field is empty, the price issued for this segment is charged until the trip ends, in addition to the cost of any subsequent segments. - per_min_pricing (added in v2.2) OPTIONAL Array Array of segments when the price is a function of time traveled, displayed in minutes. Total cost is the addition of price and all segments in per_km_pricing and per_min_pricing . If this array is not provided, there are no variable costs based on time. \u2003\u2003- start (added in v2.2) Conditionally REQUIRED Non-Negative Integer REQUIRED if per_min_pricing is defined. The minute at which this segment rate starts being charged (inclusive) . \u2003\u2003- rate (added in v2.2) Conditionally REQUIRED Float REQUIRED if per_min_pricing is defined. Rate that is charged for each minute interval after the start . Can be a negative number, which indicates that the traveler will receive a discount. \u2003\u2003- interval (added in v2.2) Conditionally REQUIRED Non-Negative Integer REQUIRED if per_min_pricing is defined. Interval in minutes at which the rate of this segment is either reapplied indefinitely, or up until (but not including) the end minute, if end is defined. An interval of 0 indicates the rate is only charged once. \u2003\u2003- end (added in v2.2) OPTIONAL Non-Negative Integer The minute at which the rate will no longer apply (exclusive) for example, if end is 20 the rate no longer applies after 19:59. If this field is empty, the price issued for this segment is charged until the trip ends, in addition to the cost of any subsequent segments. - surge_pricing (added in v2.2) OPTIONAL Boolean Is there currently an increase in price in response to increased demand in this pricing plan? If this field is empty, it means there is no surge pricing in effect. true - Surge pricing is in effect. false - Surge pricing is not in effect. Example 1: The user does not pay more than the base price for the first 10 km. After 10 km the user pays $1 per km. After 25 km the user pays $0.50 per km and an additional $3 every 5 km, the extension price, in addition to $0.50 per km. { \"last_updated\" : 1640887163 , \"ttl\" : 0 , \"version\" : \"2.3-RC2\" , \"data\" : { \"plans\" : [ { \"plan_id\" : \"plan2\" , \"name\" : \"One-Way\" , \"currency\" : \"USD\" , \"price\" : 2.00 , \"is_taxable\" : false , \"description\" : \"Includes 10km, overage fees apply after 10km.\" , \"per_km_pricing\" : [ { \"start\" : 10 , \"rate\" : 1.00 , \"interval\" : 1 , \"end\" : 25 }, { \"start\" : 25 , \"rate\" : 0.50 , \"interval\" : 1 }, { \"start\" : 25 , \"rate\" : 3.00 , \"interval\" : 5 } ] } ] } } Example 2: This example demonstrates a pricing scheme that has a rate both by minute and by km. The user is charged $0.25 per km as well as $0.50 per minute. Both of these rates happen concurrently and are not dependent on one another. { \"last_updated\" : 1640887163 , \"ttl\" : 0 , \"version\" : \"2.3-RC2\" , \"data\" : { \"plans\" : [ { \"plan_id\" : \"plan3\" , \"name\" : \"Simple Rate\" , \"currency\" : \"CAD\" , \"price\" : 3.00 , \"is_taxable\" : true , \"description\" : \"$3 unlock fee, $0.25 per kilometer and 0.50 per minute.\" , \"per_km_pricing\" : [ { \"start\" : 0 , \"rate\" : 0.25 , \"interval\" : 1 } ], \"per_min_pricing\" : [ { \"start\" : 0 , \"rate\" : 0.50 , \"interval\" : 1 } ] } ] } } system_alerts.json \u00b6 This feed is intended to inform customers about changes to the system that do not fall within the normal system operations. For example, system closures due to weather would be listed here, but a system that only operated for part of the year would have that schedule listed in the system_calendar.json feed. Obsolete alerts SHOULD be removed so the client application can safely present to the end user everything present in the feed. The following fields are all attributes within the main data object for this feed. Field Name REQUIRED Type Defines alerts Yes Array Array of objects each indicating a system alert as defined below. - alert_id Yes ID Identifier for this alert. - type Yes Enum Valid values are: system_closure station_closure station_move other - times OPTIONAL Array Array of objects with the fields start and end indicating when the alert is in effect (for example, when the system or station is actually closed, or when a station is scheduled to be moved). \u2003- start Conditionally REQUIRED Timestamp REQUIRED if times array is defined. Start time of the alert. \u2003- end OPTIONAL Timestamp End time of the alert. If there is currently no end time planned for the alert, this can be omitted. - station_ids OPTIONAL Array If this is an alert that affects one or more stations, include their ID(s). Otherwise omit this field. If both station_id and region_id are omitted, this alert affects the entire system. - region_ids OPTIONAL Array If this system has regions, and if this alert only affects certain regions, include their ID(s). Otherwise, omit this field. If both station_id s and region_id s are omitted, this alert affects the entire system. - url OPTIONAL URL URL where the customer can learn more information about this alert. - summary Yes String A short summary of this alert to be displayed to the customer. - description OPTIONAL String Detailed description of the alert. - last_updated OPTIONAL Timestamp Indicates the last time the info for the alert was updated. Example: { \"last_updated\" : 1604519393 , \"ttl\" : 60 , \"version\" : \"2.3-RC2\" , \"data\" : { \"alerts\" : [ { \"alert_id\" : \"21\" , \"type\" : \"station_closure\" , \"station_ids\" : [ \"123\" , \"456\" , \"789\" ], \"times\" : [ { \"start\" : 1604448000 , \"end\" : 1604674800 } ], \"url\" : \"https://example.com/more-info\" , \"summary\" : \"Disruption of Service\" , \"description\" : \"The three stations on Broadway will be out of service from 12:00am Nov 3 to 3:00pm Nov 6th to accommodate road work\" , \"last_updated\" : 1604198100 } ] } } geofencing_zones.json \u00b6 (added in v2.1) Describes geofencing zones and their associated rules and attributes. Geofenced areas are delineated using GeoJSON in accordance with RFC 7946 . By default, no restrictions apply everywhere. Geofencing zones SHOULD be modeled according to restrictions rather than allowance. An operational area (outside of which vehicles cannot be used) SHOULD be defined with a counterclockwise polygon, and a limitation area (in which vehicles can be used under certain restrictions) SHOULD be defined with a clockwise polygon. Geofences and GPS operate in two dimensions. Restrictions placed on an overpass or bridge will also be applied to the roadway or path beneath. Care SHOULD be taken when developing geofence based policies that rely on location data. Location data from GPS, cellular and Wi-Fi signals are subject to interference resulting in accuracy levels in the tens of meters or greater. This may result in vehicles being placed within a geofenced zone when they are actually outside or adjacent to the zone. Transit time between server and client can also impact when a user is notified of a geofence based policy. A vehicle traveling at 15kph can be well inside of a restricted zone before a notification is received. The following fields are all attributes within the main data object for this feed. Field Name REQUIRED Type Defines geofencing_zones Yes GeoJSON FeatureCollection Each geofenced zone and its associated rules and attributes is described as an object within the array of features, as follows. - type Yes String \u201cFeatureCollection\u201d (as per IETF RFC 7946 ). - features Yes Array Array of objects as defined below. \u2003- type Yes String \u201cFeature\u201d (as per IETF RFC 7946 ). \u2003- geometry Yes GeoJSON MultiPolygon A polygon that describes where rides might not be able to start, end, go through, or have other limitations. A clockwise arrangement of points defines the area enclosed by the polygon, while a counterclockwise order defines the area outside the polygon ( right-hand rule ). All geofencing zones contained in this list are public (meaning they can be displayed on a map for public use). \u2003- properties Yes Object Properties: As defined below, describing travel allowances and limitations. \u2003\u2003- name OPTIONAL String Public name of the geofencing zone. \u2003\u2003- start OPTIONAL Timestamp Start time of the geofencing zone. If the geofencing zone is always active, this can be omitted. \u2003\u2003- end OPTIONAL Timestamp End time of the geofencing zone. If the geofencing zone is always active, this can be omitted. \u2003\u2003- rules OPTIONAL Array Array that contains one object per rule as defined below. In the event of colliding rules within the same polygon, the earlier rule (in order of the JSON file) takes precedence. In the case of overlapping polygons, the combined set of rules associated with the overlapping polygons applies to the union of the polygons. In the event of colliding rules in this set, the earlier rule (in order of the JSON file) also takes precedence. \u2003\u2003\u2003- vehicle_type_id OPTIONAL Array Array of IDs of vehicle types for which any restrictions SHOULD be applied (see vehicle type definitions in vehicle_types.json ). If vehicle type IDs are not specified, then restrictions apply to all vehicle types. \u2003\u2003\u2003- ride_allowed Conditionally REQUIRED Boolean REQUIRED if rules array is defined. Is the undocked (\u201cfree floating\u201d) ride allowed to start and end in this zone? true - Undocked (\u201cfree floating\u201d) ride can start and end in this zone. false - Undocked (\u201cfree floating\u201d) ride cannot start or end in this zone. \u2003\u2003\u2003- ride_through_allowed Conditionally REQUIRED Boolean REQUIRED if rules array is defined. Is the ride allowed to travel through this zone? true - Ride can travel through this zone. false - Ride cannot travel through this zone. \u2003\u2003\u2003- maximum_speed_kph OPTIONAL Non-negative Integer What is the maximum speed allowed, in kilometers per hour? If there is no maximum speed to observe, this can be omitted. \u2003\u2003\u2003- station_parking (added in v2.3) OPTIONAL Boolean Can vehicles only be parked at stations defined in station_information.json within this geofence zone? true - Vehicles can only be parked at stations. false - Vehicles may be parked outside of stations. Example: { \"last_updated\": 1640887163, \"ttl\": 60, \"version\": \"2.3-RC2\", \"data\": { \"geofencing_zones\": { \"type\": \"FeatureCollection\", \"features\": [ { \"type\": \"Feature\", \"geometry\": { \"type\": \"MultiPolygon\", \"coordinates\": [ [ [ [ -122.578067, 45.562982 ], [ -122.661838, 45.562741 ], [ -122.661151, 45.504542 ], [ -122.578926, 45.5046625 ], [ -122.578067, 45.562982 ] ] ], [ [ [ -122.650680, 45.548197 ], [ -122.650852, 45.534731 ], [ -122.630939, 45.535212 ], [ -122.630424, 45.548197 ], [ -122.650680, 45.548197 ] ] ] ] }, \"properties\": { \"name\": \"NE 24th/NE Knott\", \"start\": 1593878400, \"end\": 1593907260, \"rules\": [ { \"vehicle_type_id\": [ \"moped1\", \"car1\" ], \"ride_allowed\": false, \"ride_through_allowed\": true, \"maximum_speed_kph\": 10, \"station_parking\": true } ] } } ] } } } Deep Links \u00b6 (added in v1.1) Deep links to iOS, Android, and web apps are supported via URIs in the system_information.json , station_information.json , and free_bike_status.json files. The following sections describe how analytics can be added to these URIs, as well as some examples. For further examples, see \"What's New in GBFS\" . Analytics \u00b6 (added in v1.1) In all of the rental URI fields, a viewing app can report the origin of a deep link request to a rental app by appending the client_id (added in v1.1) parameter to the URI along with the domain name for the viewing app. For example, if Google is the viewing app, it can append: client_id=google.com ...to the URI field to report that Google is the originator of the deep link request. If the Android URI is: com.example.android://open.example.app/stations?id=1234567890 ...then the URI used by Google would be: com.example.android://open.example.app/stations?id=1234567890&client_id=google.com Other supported parameters include: ad_id (added in v1.1) - Advertising ID issued to the viewing app (for example, IFDA on iOS) token (added in v1.1) - A token identifier that was issued by the rental app to the viewing app. Examples \u00b6 Example 1 - App Links on Android and Universal Links on iOS are supported: system_information.json { \"last_updated\" : 1640887163 , \"ttl\" : 60 , \"version\" : \"2.3-RC2\" , \"data\" : { \"name\" : \"Example Bike Rental\" , \"system_id\" : \"example_cityname\" , \"timezone\" : \"America/Chicago\" , \"language\" : \"en\" , \"rental_apps\" : { \"android\" : { \"discovery_uri\" : \"com.example.android://\" }, \"ios\" : { \"discovery_uri\" : \"com.example.ios://\" } } } } station_information.json { \"last_updated\" : 1640887163 , \"ttl\" : 60 , \"version\" : \"2.3-RC2\" , \"data\" : { \"stations\" : [ { \"station_id\" : \"425\" , \"name\" : \"Coppertail\" , \"lat\" : 27.956333 , \"lon\" : -82.430436 , \"rental_uris\" : { \"android\" : \"https://www.example.com/app?sid=1234567890&platform=android\" , \"ios\" : \"https://www.example.com/app?sid=1234567890&platform=ios\" } } ] } } Note that the Android URI and iOS Universal Link URLs do not necessarily use the same identifier as the station_id . Example 2 - App Links are not supported on Android and Universal Links are not supported on iOS, but deep links are still supported on Android and iOS: system_information.json { \"last_updated\" : 1572447999 , \"ttl\" : 60 , \"version\" : \"2.3-RC2\" , \"data\" : { \"name\" : \"Example Bike Rental\" , \"system_id\" : \"example_cityname\" , \"timezone\" : \"America/Chicago\" , \"language\" : \"en\" , \"rental_apps\" : { \"android\" : { \"discovery_uri\" : \"com.example.android://\" , \"store_uri\" : \"https://play.google.com/store/apps/details?id=com.example.android\" }, \"ios\" : { \"store_uri\" : \"https://apps.apple.com/app/apple-store/id123456789\" , \"discovery_uri\" : \"com.example.ios://\" } } } } station_information.json { \"last_updated\" : 1609866247 , \"ttl\" : 60 , \"version\" : \"2.3-RC2\" , \"data\" : { \"stations\" : [ { \"station_id\" : \"425\" , \"name\" : \"Coppertail\" , \"lat\" : 27.956333 , \"lon\" : -82.430436 , \"rental_uris\" :{ \"android\" : \"com.example.android://open.example.app/app?sid=1234567890\" , \"ios\" : \"com.example.ios://open.example.app/app?sid=1234567890\" } } ] } } Example 3 - Deep link web URLs are supported, but not Android or iOS native apps: station_information.json { \"last_updated\" : 1609866247 , \"ttl\" : 60 , \"version\" : \"2.3-RC2\" , \"data\" : { \"stations\" : [ { \"station_id\" : \"425\" , \"name\" : \"Coppertail\" , \"lat\" : 27.956333 , \"lon\" : -82.430436 , \"rental_uris\" : { \"web\" : \"https://www.example.com/app?sid=1234567890\" } } ] } } Disclaimers \u00b6 Apple Pay, PayPass, and other third-party product and service names are trademarks or registered trademarks of their respective owners. License \u00b6 Except as otherwise noted, the content of this page is licensed under the Creative Commons Attribution 3.0 License .","title":"Current Version"},{"location":"specification/reference/#general-bikeshare-feed-specification-gbfs","text":"This document explains the types of files and data that comprise the General Bikeshare Feed Specification (GBFS) and defines the fields used in those files.","title":"General Bikeshare Feed Specification (GBFS)"},{"location":"specification/reference/#reference-version","text":"This documentation refers to v2.3 . For past and upcoming versions see the README .","title":"Reference version"},{"location":"specification/reference/#terminology","text":"The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\", \"SHALL NOT\", \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"NOT RECOMMENDED\", \"MAY\", and \"OPTIONAL\" in this document are to be interpreted as described in RFC2119 , BCP 14 and RFC8174 when, and only when, they appear in all capitals, as shown here.","title":"Terminology"},{"location":"specification/reference/#table-of-contents","text":"Introduction Term Definitions Files Accessibility File Requirements Licensing Field Types Files gbfs.json gbfs_versions.json (added in v1.1) system_information.json vehicle_types.json (added in v2.1) station_information.json station_status.json free_bike_status.json system_hours.json system_calendar.json system_regions.json system_pricing_plans.json system_alerts.json geofencing_zones.json (added in v2.1) Deep Links - Analytics and Examples (added in v1.1)","title":"Table of Contents"},{"location":"specification/reference/#introduction","text":"This specification has been designed with the following concepts in mind: Provide the status of the system at this moment Do not provide information whose primary purpose is historical The specification supports real-time travel advice in GBFS-consuming applications.","title":"Introduction"},{"location":"specification/reference/#term-definitions","text":"This section defines terms that are used throughout this document. JSON - (JavaScript Object Notation) is a lightweight format for storing and transporting data. This document uses many terms defined by the JSON standard, including field, array, and object. (https://www.w3schools.com/js/js_json_datatypes.asp) Field - In JSON, a name/value pair consists of a field name (in double quotes), followed by a colon, followed by a value. (https://www.w3schools.com/js/js_json_syntax.asp) GeoJSON - GeoJSON is a format for encoding a variety of geographic data structures. (https://geojson.org/) REQUIRED - The field MUST be included in the dataset, and a value MUST be provided in that field for each record. OPTIONAL - The field MAY be omitted from the dataset. If an OPTIONAL column is included, some of the entries in that field MAY be empty strings. An omitted field is equivalent to a field that is empty. Conditionally REQUIRED - The field or file is REQUIRED under certain conditions, which are outlined in the field or file description. Outside of these conditions, this field or file is OPTIONAL.","title":"Term Definitions"},{"location":"specification/reference/#files","text":"File Name REQUIRED Defines gbfs.json Yes (as of v2.0) Auto-discovery file that links to all of the other files published by the system. gbfs_versions.json (added in v1.1) OPTIONAL Lists all feed endpoints published according to versions of the GBFS documentation. system_information.json Yes Details including system operator, system location, year implemented, URL, contact info, time zone. vehicle_types.json (added in v2.1) Conditionally REQUIRED Describes the types of vehicles that system operator has available for rent. REQUIRED of systems that include information about vehicle types in the free_bike_status.json file. If this file is not included, then all vehicles in the feed are assumed to be non-motorized bicycles. station_information.json Conditionally REQUIRED List of all stations, their capacities and locations. REQUIRED of systems utilizing docks. station_status.json Conditionally REQUIRED Number of available vehicles and docks at each station and station availability. REQUIRED of systems utilizing docks. free_bike_status.json Conditionally REQUIRED (as of v2.1) Describes all vehicles that are not currently in active rental. REQUIRED for free floating (dockless) vehicles. OPTIONAL for station based (docked) vehicles. Vehicles that are part of an active rental MUST NOT appear in this feed. system_hours.json OPTIONAL Hours of operation for the system. system_calendar.json OPTIONAL Dates of operation for the system. system_regions.json OPTIONAL Regions the system is broken up into. system_pricing_plans.json OPTIONAL System pricing scheme. system_alerts.json OPTIONAL Current system alerts. geofencing_zones.json (added in v2.1) OPTIONAL Geofencing zones and their associated rules and attributes.","title":"Files"},{"location":"specification/reference/#accessibility","text":"Datasets SHOULD be published at an easily accessible, public, permanent URL. (for example, https://www.example.com/gbfs/v3/gbfs.json). The URL SHOULD be directly available without requiring login to access the file to facilitate download by consuming software applications. To be compliant with GBFS, all systems MUST have an entry in the systems.csv file.","title":"Accessibility"},{"location":"specification/reference/#feed-availability","text":"Automated tools for application performance monitoring SHOULD be used to ensure feed availability. Producers SHOULD provide a technical contact who can respond to feed outages in the feed_contact_email field in the system_information.json file.","title":"Feed Availability"},{"location":"specification/reference/#seasonal-shutdowns-disruptions-of-service","text":"Feeds SHOULD continue to be published during seasonal or temporary shutdowns. Feed URLs SHOULD NOT return a 404. An empty bikes array SHOULD be returned by free_bike_status.json . Stations in station_status.json SHOULD be set to is_renting:false , is_returning:false and is_installed:false where applicable. Seasonal shutdown dates SHOULD be reflected in system_calendar.json . Announcements for disruptions of service, including disabled stations or temporary closures of stations or systems, SHOULD be made in system_alerts.json .","title":"Seasonal Shutdowns, Disruptions of Service"},{"location":"specification/reference/#file-requirements","text":"All files SHOULD be valid JSON. All files in the spec MAY be published at a URL path or with an alternate name (for example, station_info instead of station_information.json ) (as of v2.0) . All data SHOULD be UTF-8 encoded. Line breaks SHOULD be represented by unix newline characters only (\\n). Pagination is not supported.","title":"File Requirements"},{"location":"specification/reference/#file-distribution","text":"Files are distributed as individual HTTP endpoints. REQUIRED files MUST NOT 404. They MUST return a properly formatted JSON file as defined in Output Format . OPTIONAL files MAY 404. A 404 of an OPTIONAL file SHOULD NOT be considered an error.","title":"File Distribution"},{"location":"specification/reference/#version-endpoints","text":"The version of the GBFS specification to which a feed conforms is declared in the version field in all files. See Output Format . All endpoints within a data set SHOULD conform to the same MAJOR or MINOR version. Mixing of versions within data sets is NOT RECOMMENDED. GBFS documentation will include a list of current and past supported MAJOR and MINOR versions. Supported versions SHALL NOT span more than two MAJOR versions. Past versions with Supported status MAY be patched to correct bugs or vulnerabilities, but new features will not be introduced. Past versions with Deprecated status will not be patched, and their use SHOULD be discontinued. Producers SHOULD continue to maintain existing feeds while they have Supported status. GBFS producers SHOULD provide endpoints that conform to the current MAJOR version release within 180 days of a new MAJOR version release. It is not necessary to support more than one MINOR release of the same MAJOR release group, because MINOR releases are backwards-compatible. See Specification Versioning .","title":"Version Endpoints"},{"location":"specification/reference/#auto-discovery","text":"Publishers SHOULD implement auto-discovery of GBFS feeds by linking to the location of the gbfs.json auto-discovery endpoint. The location of the auto-discovery file SHOULD be provided in the HTML area of the shared mobility landing page hosted at the URL specified in the url field of the system_information.json file. This is referenced via a link tag with the following format: <link rel=\"gbfs\" type=\"application/json\" href=\"https://www.example.com/data/gbfs.json\" /> References: https://microformats.org/wiki/existing-rel-values https://microformats.org/wiki/rel-faq#How_is_rel_used A shared mobility landing page MAY contain links to auto-discovery files for multiple systems.","title":"Auto-Discovery"},{"location":"specification/reference/#localization","text":"Each set of data files SHOULD be distributed in a single language as defined in system_information.json . A system that wants to publish feeds in multiple languages SHOULD do so by publishing multiple distributions, such as: https://www.example.com/data/en/system_information.json https://www.example.com/data/fr/system_information.json","title":"Localization"},{"location":"specification/reference/#text-fields-and-naming","text":"Rich text SHOULD NOT be stored in free form text fields. Fields SHOULD NOT contain HTML. All customer-facing text strings (including station names) SHOULD use Mixed Case (not ALL CAPS), following local conventions for capitalization of place names on displays capable of displaying lower case characters. Examples: Central Park South Villiers-sur-Marne Market Street Abbreviations SHOULD NOT be used for names and other text (for example, St. for Street), unless a location is called by its abbreviated name (for example, \u201cJFK Airport\u201d). Abbreviations may be problematic for accessibility by screen reader software and voice user interfaces. Consuming software can be engineered to reliably convert full words to abbreviations for display, but converting from abbreviations to full words is prone to more risk of error. Names used for stations, virtual stations, and geofenced areas SHOULD be human-readable. Naming conventions used for locations SHOULD consider a variety of use cases including both text and maps. Descriptions SHOULD NOT include information so specific that it could be used in tracking of vehicles or trips.","title":"Text Fields and Naming"},{"location":"specification/reference/#coordinate-precision","text":"Feeds SHOULD provide 6 digits (0.000001) of precision for decimal degrees lat/lon coordinates. Decimal places Degrees Distance at the Equator 0 1.0 111 km 1 0.1 11.1 km 2 0.01 1.11 km 3 0.001 111 m 4 0.0001 11.1 m 5 0.00001 1.11 m 6 0.000001 0.11 m 7 0.0000001 1.11 cm","title":"Coordinate Precision"},{"location":"specification/reference/#data-latency","text":"The data returned by the near-realtime endpoints station_status.json and free_bike_status.json SHOULD be as close to realtime as possible, but in no case should it be more than 5 minutes out-of-date. Appropriate values SHOULD be set using the ttl property for each endpoint based on how often the data in feeds are refreshed or updated. For near-realtime endpoints where the data should always be refreshed, the ttl value SHOULD be 0 . The last_updated timestamp represents the publisher's knowledge of the current state of the system at that point in time. The last_reported timestamp represents the last time a station or vehicle reported its status to the operator's backend.","title":"Data Latency"},{"location":"specification/reference/#licensing","text":"It is RECOMMENDED that all GBFS data sets be offered under an open data license. Open data licenses allow consumers to freely use, modify, and share GBFS data for any purpose in perpetuity. Licensing of GBFS data provides certainty to GBFS consumers, allowing them to integrate GBFS data into their work. All GBFS data sets SHOULD specify a license using the license_id field with an SPDX identifier or by using the license_url field with a URL pointing to a custom license in system_information.json . See the GBFS repo for a comparison of a subset of standard licenses .","title":"Licensing"},{"location":"specification/reference/#field-types","text":"Array - A JSON element consisting of an ordered sequence of zero or more values. Boolean - One of two possible values, true or false . Boolean values MUST be JSON booleans, not strings (meaning true or false , not \"true\" or \"false\" ). (as of v2.0) Country code - Country code following the ISO 3166-1 alpha-2 notation . Date - A date in the ISO 8601 Complete Date Extended Format: YYYY-MM-DD . Example: 2019-09-13 for September 13th, 2019. Datetime (added in v2.3) - Combination of a date and a time following ISO 8601 notation . Attributes : year , month , day , hour , minute , second , and timezone. Email - An email address. Example: example@example.com Enum (Enumerable values) - An option from a set of predefined constants in the \"Defines\" column. Enum values SHOULD be lowercase. Example: The rental_methods field contains values creditcard , paypass , etc... Float (added in v2.1) - A 32-bit floating point number. GeoJSON FeatureCollection - A FeatureCollection as described by the IETF RFC 7946 https://tools.ietf.org/html/rfc7946#section-3.3. GeoJSON MultiPolygon - A Geometry Object as described by the IETF RFC https://tools.ietf.org/html/rfc7946#section-3.1.7. ID - Should be represented as a string that identifies that particular entity. An ID: MUST be unique within like fields (for example, station_id MUST be unique among stations). Does not have to be globally unique, unless otherwise specified. MUST NOT contain spaces. MUST be persistent for a given entity (station, plan, etc). An exception is floating bike bike_id , which MUST NOT be persistent for privacy reasons (see free_bike_status.json ). (as of v2.0) Language - An IETF BCP 47 language code. For an introduction to IETF BCP 47, refer to https://www.rfc-editor.org/rfc/bcp/bcp47.txt and https://www.w3.org/International/articles/language-tags/. Examples: en for English, en-US for American English, or de for German. Latitude - WGS84 latitude in decimal degrees. The value MUST be greater than or equal to -90.0 and less than or equal to 90.0. Example: 41.890169 for the Colosseum in Rome. Longitude - WGS84 longitude in decimal degrees. The value MUST be greater than or equal to -180.0 and less than or equal to 180.0. Example: 12.492269 for the Colosseum in Rome. Non-negative Float - A 32-bit floating point number greater than or equal to 0. Non-negative Integer - An integer greater than or equal to 0. Object - A JSON element consisting of key-value pairs (fields). String - Can only contain text. Strings MUST NOT contain any formatting codes (including HTML) other than newlines. Time - Service time in the HH:MM:SS format for the time zone indicated in system_information.json (00:00:00 - 47:59:59). Time can stretch up to one additional day in the future to accommodate situations where, for example, a system was open from 11:30pm - 11pm the next day (23:30:00-47:00:00). Timestamp - Timestamp fields MUST be represented as integers in POSIX time (representing the number of seconds since January 1st 1970 00:00:00 UTC). Timezone - TZ timezone from the https://www.iana.org/time-zones. Timezone names never contain the space character but MAY contain an underscore. Refer to https://en.wikipedia.org/wiki/List_of_tz_zones for a list of valid values. Example: Asia/Tokyo , America/Los_Angeles or Africa/Cairo . URI (added in v1.1) - A fully qualified URI that includes the scheme (for example, com.example.android:// ). Any special characters in the URI MUST be correctly escaped. See the following https://www.w3.org/Addressing/URL/4_URI_Recommentations.html for a description of how to create fully qualified URI values. Note that URIs MAY be URLs. URL - A fully qualified URL that includes http:// or https:// . Any special characters in the URL MUST be correctly escaped. See the following https://www.w3.org/Addressing/URL/4_URI_Recommentations.html for a description of how to create fully qualified URL values.","title":"Field Types"},{"location":"specification/reference/#extensions-outside-of-the-specification","text":"To accommodate the needs of feed producers and consumers prior to the adoption of a change, additional fields can be added to feeds even if these fields are not part of the official specification. Custom extensions that may provide value to the GBFS community and align with the GBFS Guiding Principles SHOULD be proposed for inclusion in the specification through the change process. Extreme caution is advised to avoid introducing extensions which may be used to track the movements of vehicles or their users. Field names of extensions SHOULD be prefixed with an underscore ( _) character. It is strongly RECOMMENDED that these additional fields be documented on the wiki page of the GBFS repository in this format: Submitted by Field Name File Name Defines Publisher's name _field_name Name of GBFS endpoint where field is used Description of purpose of use","title":"Extensions Outside of the Specification"},{"location":"specification/reference/#json-files","text":"","title":"JSON Files"},{"location":"specification/reference/#output-format","text":"Every JSON file presented in this specification contains the same common header information at the top level of the JSON response object: Field Name REQUIRED Type Defines last_updated Yes Timestamp Indicates the last time data in the feed was updated. This timestamp represents the publisher's knowledge of the current state of the system at this point in time. ttl Yes Non-negative integer Number of seconds before the data in the feed will be updated again (0 if the data should always be refreshed). version (added in v1.1) Yes String GBFS version number to which the feed conforms, according to the versioning framework. data Yes Object Response data in the form of name:value pairs. Example: { \"last_updated\" : 1640887163 , \"ttl\" : 3600 , \"version\" : \"2.3-RC2\" , \"data\" : { \"name\" : \"Example Bike Rental\" , \"system_id\" : \"example_cityname\" , \"timezone\" : \"America/Chicago\" , \"language\" : \"en\" } }","title":"Output Format"},{"location":"specification/reference/#gbfsjson","text":"The gbfs.json discovery file SHOULD represent a single system or geographic area in which vehicles are operated. The location (URL) of the gbfs.json file SHOULD be made available to the public using the specification\u2019s auto-discovery function. The following fields are all attributes within the main data object for this feed. Field Name REQUIRED Type Defines language Yes Language The language that will be used throughout the rest of the files. It MUST match the value in the system_information.json file. - feeds Yes Array An array of all of the feeds that are published by this auto-discovery file. Each element in the array is an object with the keys below. \u2003- name Yes String Key identifying the type of feed this is. The key MUST be the base file name defined in the spec for the corresponding feed type ( system_information for system_information.json file, station_information for station_information.json file). \u2003- url Yes URL URL for the feed. Note that the actual feed endpoints (urls) may not be defined in the file_name.json format. For example, a valid feed endpoint could end with station_info instead of station_information.json . Example: { \"last_updated\" : 1640887163 , \"ttl\" : 0 , \"version\" : \"2.3-RC2\" , \"data\" : { \"en\" : { \"feeds\" : [ { \"name\" : \"system_information\" , \"url\" : \"https://www.example.com/gbfs/1/en/system_information\" }, { \"name\" : \"station_information\" , \"url\" : \"https://www.example.com/gbfs/1/en/station_information\" } ] }, \"fr\" : { \"feeds\" : [ { \"name\" : \"system_information\" , \"url\" : \"https://www.example.com/gbfs/1/fr/system_information\" }, { \"name\" : \"station_information\" , \"url\" : \"https://www.example.com/gbfs/1/fr/station_information\" } ] } } }","title":"gbfs.json"},{"location":"specification/reference/#gbfs_versionsjson","text":"(added in v1.1) Each expression of a GBFS feed describes all of the versions that are available. The following fields are all attributes within the main data object for this feed. Field Name REQUIRED Type Defines versions Yes Array Contains one object, as defined below, for each of the available versions of a feed. The array MUST be sorted by increasing MAJOR and MINOR version number. - version Yes String The semantic version of the feed in the form X.Y . - url Yes URL URL of the corresponding gbfs.json endpoint. Example: { \"last_updated\" : 1640887163 , \"ttl\" : 0 , \"version\" : \"2.3-RC2\" , \"data\" : { \"versions\" : [ { \"version\" : \"2.0\" , \"url\" : \"https://www.example.com/gbfs/2/gbfs\" }, { \"version\" : \"2.3-RC2\" , \"url\" : \"https://www.example.com/gbfs/3/gbfs\" } ] } }","title":"gbfs_versions.json"},{"location":"specification/reference/#system_informationjson","text":"The following fields are all attributes within the main data object for this feed. Field Name REQUIRED Type Defines system_id Yes ID This is a globally unique identifier for the vehicle share system. It is up to the publisher of the feed to guarantee uniqueness and MUST be checked against existing system_id fields in systems.csv to ensure this. This value is intended to remain the same over the life of the system. Each distinct system or geographic area in which vehicles are operated SHOULD have its own system_id . System IDs SHOULD be recognizable as belonging to a particular system - for example, bcycle_austin or biketown_pdx - as opposed to random strings. language Yes Language The language that will be used throughout the rest of the files. It MUST match the value in the gbfs.json file. name Yes String Name of the system to be displayed to customers. short_name OPTIONAL String OPTIONAL abbreviation for a system. operator OPTIONAL String Name of the system operator. url OPTIONAL URL The URL of the vehicle share system. purchase_url OPTIONAL URL URL where a customer can purchase a membership. start_date OPTIONAL Date Date that the system began operations. phone_number OPTIONAL Phone Number This OPTIONAL field SHOULD contain a single voice telephone number for the specified system\u2019s customer service department. It can and SHOULD contain punctuation marks to group the digits of the number. Dialable text (for example, Capital Bikeshare\u2019s \"877-430-BIKE\") is permitted, but the field MUST NOT contain any other descriptive text. email OPTIONAL Email This OPTIONAL field SHOULD contain a single contact email address actively monitored by the operator\u2019s customer service department. This email address SHOULD be a direct contact point where riders can reach a customer service representative. feed_contact_email (added in v1.1) OPTIONAL Email This OPTIONAL field SHOULD contain a single contact email for feed consumers to report technical issues with the feed. timezone Yes Timezone The time zone where the system is located. license_url OPTIONAL URL A fully qualified URL of a page that defines the license terms for the GBFS data for this system, as well as any other license terms the system would like to define (including the use of corporate trademarks, etc) brand_assets (added in v2.3) OPTIONAL Object An object where each key defines one of the items listed below. - brand_last_modified (added in v2.3) Conditionally REQUIRED Date REQUIRED if brand_assets object is defined. Date that indicates the last time any included brand assets were updated or modified. - brand_terms_url (added in v2.3) OPTIONAL URL A fully qualified URL pointing to the location of a page that defines the license terms of brand icons, colors, or other trademark information. This field MUST NOT take the place of license_url or license_id . - brand_image_url (added in v2.3) Conditionally REQUIRED URL REQUIRED if brand_assets object is defined. A fully qualified URL pointing to the location of a graphic file representing the brand for the service. File MUST be in SVG V1.1 format and MUST be either square or round. - brand_image_url_dark (added in v2.3) OPTIONAL URL A fully qualified URL pointing to the location of a graphic file representing the brand for the service for use in dark mode applications. File MUST be in SVG V1.1 format and MUST be either square or round. - color (added in v2.3) OPTIONAL String Color used to represent the brand for the service expressed as a 6 digit hexadecimal color code in the form #000000. terms_url (added in v2.3) OPTIONAL URL A fully qualified URL pointing to the terms of service (also often called \"terms of use\" or \"terms and conditions\") for the service. terms_last_updated (added in v2.3) Conditionally REQUIRED Date REQUIRED if terms_url is defined. The date that the terms of service provided at terms_url were last updated. privacy_url (added in v2.3) OPTIONAL URL A fully qualified URL pointing to the privacy policy for the service. privacy_last_updated (added in v2.3) Conditionally REQUIRED Date REQUIRED if privacy_url is defined. The date that the privacy policy provided at privacy_url was last updated. rental_apps (added in v1.1) OPTIONAL Object Contains rental app information in the android and ios JSON objects. - android (added in v1.1) OPTIONAL Object Contains rental app download and app discovery information for the Android platform in the store_uri and discovery_uri fields. See examples of how to use these fields and supported analytics . \u2003- store_uri (added in v1.1) Conditionally REQUIRED URI URI where the rental Android app can be downloaded from. Typically this will be a URI to an app store, such as Google Play. If the URI points to an app store, the URI SHOULD follow Android best practices so the viewing app can directly open the URI to the native app store app instead of a website. REQUIRED if a rental_uris . android field is populated. See the Analytics section for how viewing apps can report the origin of the deep link to rental apps. Example value: https://play.google.com/store/apps/details?id=com.example.android \u2003- discovery_uri (added in v1.1) Conditionally REQUIRED URI URI that can be used to discover if the rental Android app is installed on the device (for example, using PackageManager.queryIntentActivities() ). This intent is used by viewing apps to prioritize rental apps for a particular user based on whether they already have a particular rental app installed. REQUIRED if a rental_uris . android field is populated. Example value: com.example.android:// - ios (added in v1.1) OPTIONAL Object Contains rental information for the iOS platform in the store_uri and discovery_uri fields. See examples of how to use these fields and supported analytics . \u2003- store_uri (added in v1.1) Conditionally REQUIRED URI URI where the rental iOS app can be downloaded from. Typically this will be a URI to an app store, such as the Apple App Store. If the URI points to an app store, the URI SHOULD follow iOS best practices so the viewing app can directly open the URI to the native app store app instead of a website. REQUIRED if a rental_uris . ios field is populated. See the Analytics section for how viewing apps can report the origin of the deep link to rental apps. Example value: https://apps.apple.com/app/apple-store/id123456789 \u2003- discovery_uri (added in v1.1) Conditionally REQUIRED URI URI that can be used to discover if the rental iOS app is installed on the device (for example, using UIApplication canOpenURL: ). This intent is used by viewing apps to prioritize rental apps for a particular user based on whether they already have a particular rental app installed. REQUIRED if a rental_uris . ios field is populated. Example value: com.example.ios:// Example: { \"last_updated\" : 1640887163 , \"ttl\" : 1800 , \"version\" : \"2.3-RC2\" , \"data\" : { \"system_id\" : \"example_cityname\" , \"language\" : \"en\" , \"name\" : \"Example Bike Rental\" , \"short_name\" : \"Example Bike\" , \"operator\" : \"Example Sharing, Inc\" , \"url\" : \"https://www.example.com\" , \"purchase_url\" : \"https://www.example.com\" , \"start_date\" : \"2010-06-10\" , \"phone_number\" : \"1-800-555-1234\" , \"email\" : \"customerservice@example.com\" , \"feed_contact_email\" : \"datafeed@example.com\" , \"timezone\" : \"America/Chicago\" , \"license_url\" : \"https://www.example.com/data-license.html\" , \"terms_url\" : \"https://www.example.com/terms\" , \"terms_last_updated\" : \"2021-06-21\" , \"privacy_url\" : \"https://www.example.com/privacy-policy\" , \"privacy_last_updated\" : \"2019-01-13\" , \"rental_apps\" : { \"android\" : { \"discovery_uri\" : \"com.example.android://\" , \"store_uri\" : \"https://play.google.com/store/apps/details?id=com.example.android\" }, \"ios\" : { \"store_uri\" : \"https://apps.apple.com/app/apple-store/id123456789\" , \"discovery_uri\" : \"com.example.ios://\" } }, \"brand_assets\" : { \"brand_last_modified\" : \"2021-06-15\" , \"brand_image_url\" : \"https://www.example.com/assets/brand_image.svg\" , \"brand_image_url_dark\" : \"https://www.example.com/assets/brand_image_dark.svg\" , \"color\" : \"#C2D32C\" , \"brand_terms_url\" : \"https://www.example.com/assets/brand.pdf\" } } }","title":"system_information.json"},{"location":"specification/reference/#vehicle_typesjson","text":"(added in v2.1) REQUIRED of systems that include information about vehicle types in the free_bike_status.json file. If this file is not included, then all vehicles in the feed are assumed to be non-motorized bicycles. This file SHOULD be published by systems offering multiple vehicle types for rental, for example pedal bikes and ebikes. The following fields are all attributes within the main data object for this feed. Field Name REQUIRED Type Defines vehicle_types Yes Array Array that contains one object per vehicle type in the system as defined below. - vehicle_type_id Yes ID Unique identifier of a vehicle type. See Field Types above for ID field requirements. - form_factor Yes Enum The vehicle's general form factor. Current valid values are: bicycle cargo_bicycle ( (added in v2.3) ) car moped scooter (will be deprecated in v3.0) scooter_standing (standing kick scooter, added in v2.3 ) scooted_seated (this is a kick scooter with a seat, not to be confused with moped , added in v2.3 ) other - rider_capacity (added in v2.3) OPTIONAL Non-negative integer The number of riders (driver included) the vehicle can legally accommodate. - cargo_volume_capacity (added in v2.3) OPTIONAL Non-negative integer Cargo volume available in the vehicle, expressed in liters. For cars, it corresponds to the space between the boot floor, including the storage under the hatch, to the rear shelf in the trunk. - cargo_load_capacity (added in v2.3) OPTIONAL Non-negative integer The capacity of the vehicle cargo space (excluding passengers), expressed in kilograms. - propulsion_type Yes Enum The primary propulsion type of the vehicle. Current valid values are: human (Pedal or foot propulsion) electric_assist (Provides electric motor assist only in combination with human propulsion - no throttle mode) electric (Powered by battery-powered electric motor with throttle mode) combustion (Powered by gasoline combustion engine) combustion_diesel (Powered by diesel combustion engine, added in v2.3) hybrid (Powered by combined combustion engine and battery-powered motor, added in v2.3) plug_in_hybrid (Powered by combined combustion engine and battery-powered motor with plug-in charging, added in v2.3) hydrogen_fuel_cell (Powered by hydrogen fuel cell powered electric motor, added in v2.3) This field was inspired by, but differs from the propulsion types field described in the Open Mobility Foundation Mobility Data Specification . - eco_label (added in v2.3) OPTIONAL Array Vehicle air quality certificate. Official anti-pollution certificate, based on the information on the vehicle's registration certificate, attesting to its level of pollutant emissions based on a defined standard. In Europe, for example, it is the European emission standard. The aim of this measure is to encourage the use of the least polluting vehicles by allowing them to drive during pollution peaks or in low emission zones. Each element in the array is an object with the keys below. \u2003- country_code (added in v2.3) Conditionally REQUIRED Country code REQUIRED if eco_label is defined. Country where the eco_sticker applies. \u2003- eco_sticker (added in v2.3) Conditionally REQUIRED String REQUIRED if eco_label is defined. Name of the eco label. The name must be written in lowercase, separated by an underscore. Example of eco_sticker in Europe : CritAirLabel (France) critair critair_1 critair_2 critair_3 critair_4 critair_5 UmweltPlakette (Germany) euro_2 euro_3 euro_4 euro_5 euro_6 euro_6_temp euro_E UmweltPickerl (Austrich) euro_1 euro_2 euro_3 euro_4 euro_5 Reg_certificates (Belgium) reg_certificates Distintivo_ambiental (Spain) 0 eco b c - max_range_meters Conditionally REQUIRED Non-negative float REQUIRED if the vehicle has a motor (as indicated by having a value other than human in the propulsion_type field). This represents the furthest distance in meters that the vehicle can travel without recharging or refueling when it has the maximum amount of energy potential (for example, a full battery or full tank of gas). - name OPTIONAL String The public name of this vehicle type. - vehicle_accessories (added in v2.3) OPTIONAL Array Description of accessories available in the vehicle. These accessories are part of the vehicle and are not supposed to change frequently. Current valid values are: air_conditioning (Vehicle has air conditioning) automatic (Automatic gear switch) manual (Manual gear switch) convertible (Vehicle is convertible) cruise_control (Vehicle has a cruise control system (\"Tempomat\")) doors_2 (Vehicle has 2 doors) doors_3 (Vehicle has 3 doors) doors_4 (Vehicle has 4 doors) doors_5 (Vehicle has 5 doors) navigation (Vehicle has a built-in navigation system) - g_CO2_km (added in v2.3) OPTIONAL Non-negative integer Maximum quantity of CO2, in grams, emitted per kilometer, according to the WLTP . - vehicle_image (added in v2.3) OPTIONAL URL URL to an image that would assist the user in identifying the vehicle (for example, an image of the vehicle or a logo). Allowed formats: JPEG, PNG. - make (added in v2.3) OPTIONAL String - model (added in v2.3) OPTIONAL String - color (added in v2.3) OPTIONAL String - wheel_count (added in v2.3) OPTIONAL Non-negative Integer Number of wheels this vehicle type has. - max_permitted_speed (added in v2.3) OPTIONAL Non-negative Integer The maximum speed in kilometers per hour this vehicle is permitted to reach in accordance with local permit and regulations. - rated_power (added in v2.3) OPTIONAL Non-negative Integer The rated power of the motor for this vehicle type in watts. - default_reserve_time (added in v2.3) OPTIONAL Non-negative Integer Maximum time in minutes that a vehicle can be reserved before a rental begins. When a vehicle is reserved by a user, the vehicle remains locked until the rental begins. During this time the vehicle is unavailable and cannot be reserved or rented by other users. The vehicle status in free_bike_status.json MUST be set to is_reserved = true . If the value of default_reserve_time elapses without a rental beginning, the vehicle status MUST change to is_reserved = false . If default_reserve_time is set to 0 , the vehicle type cannot be reserved. - return_constraint (as of v2.3) OPTIONAL Enum The conditions for returning the vehicle at the end of the rental. Current valid values are: free_floating (The vehicle can be returned anywhere permitted within the service area. Note that this field is subject to rules in geofencing_zones.json if defined.) roundtrip_station (The vehicle has to be returned to the same station from which it was initially rented. Note that a specific station can be assigned to the vehicle in free_bike_status.json using home_station.) any_station (The vehicle has to be returned to any station within the service area .) hybrid (The vehicle can be returned to any station, or anywhere else permitted within the service area. Note that the vehicle is subject to rules in geofencing_zones.json if defined.) - vehicle_assets (added in v2.3) OPTIONAL Object An object where each key defines one of the items listed below. \u2003\u2003- icon_url (added in v2.3) Conditionally REQUIRED URL REQUIRED if vehicle_assets is defined. A fully qualified URL pointing to the location of a graphic icon file that MAY be used to represent this vehicle type on maps and in other applications. File MUST be in SVG V1.1 format and MUST be either square or round. \u2003\u2003- icon_url_dark (added in v2.3) OPTIONAL URL A fully qualified URL pointing to the location of a graphic icon file to be used to represent this vehicle type when in dark mode on maps and in other applications. File MUST be in SVG V1.1 format and MUST be either square or round. \u2003\u2003- icon_last_modified (added in v2.3) Conditionally REQUIRED Date REQUIRED if vehicle_assets is defined. Date that indicates the last time any included vehicle icon images were modified or updated. - default_pricing_plan_id (added in v2.3) OPTIONAL ID A plan_id , as defined in system_pricing_plans.json , that identifies a default pricing plan for this vehicle to be used by trip planning applications for purposes of calculating the cost of a single trip using this vehicle type. This default pricing plan is superseded by pricing_plan_id when pricing_plan_id is defined in free_bike_status.json Publishers SHOULD define default_pricing_plan_id first and then override it using pricing_plan_id in free_bike_status.json when necessary. Note: This field will become Conditionally REQUIRED in the next MAJOR version. - pricing_plan_ids (added in v2.3) OPTIONAL Array Array of all pricing plan IDs, as defined in system_pricing_plans.json , that are applied to this vehicle type. This array SHOULD be published when there are multiple pricing plans defined in system_pricing_plans.json that apply to a single vehicle type. Example: { \"last_updated\" : 1640887163 , \"ttl\" : 0 , \"version\" : \"2.3-RC2\" , \"data\" : { \"vehicle_types\" : [ { \"vehicle_type_id\" : \"abc123\" , \"form_factor\" : \"bicycle\" , \"propulsion_type\" : \"human\" , \"name\" : \"Example Basic Bike\" , \"wheel_count\" : 2 , \"default_reserve_time\" : 30 , \"return_constraint\" : \"any_station\" , \"vehicle_assets\" : { \"icon_url\" : \"https://www.example.com/assets/icon_bicycle.svg\" , \"icon_url_dark\" : \"https://www.example.com/assets/icon_bicycle_dark.svg\" , \"icon_last_modified\" : \"2021-06-15\" }, \"default_pricing_plan_id\" : \"bike_plan_1\" , \"pricing_plan_ids\" : [ \"bike_plan_1\" , \"bike_plan_2\" , \"bike_plan_3\" ] }, { \"vehicle_type_id\" : \"cargo123\" , \"form_factor\" : \"cargo_bicycle\" , \"propulsion_type\" : \"human\" , \"name\" : \"Example Cargo Bike\" , \"wheel_count\" : 3 , \"default_reserve_time\" : 30 , \"return_constraint\" : \"roundtrip_station\" , \"vehicle_assets\" : { \"icon_url\" : \"https://www.example.com/assets/icon_cargobicycle.svg\" , \"icon_url_dark\" : \"https://www.example.com/assets/icon_cargobicycle_dark.svg\" , \"icon_last_modified\" : \"2021-06-15\" }, \"default_pricing_plan\" : \"cargo_plan_1\" , \"pricing_plans\" : [ \"cargo_plan_1\" , \"cargo_plan_2\" , \"cargo_plan_3\" ] }, { \"vehicle_type_id\" : \"def456\" , \"form_factor\" : \"scooter_standing\" , \"propulsion_type\" : \"electric\" , \"name\" : \"Example E-scooter V2\" , \"wheel_count\" : 2 , \"max_permitted_speed\" : 25 , \"rated_power\" : 350 , \"default_reserve_time\" : 30 , \"max_range_meters\" : 12345 , \"return_constraint\" : \"free_floating\" , \"vehicle_assets\" : { \"icon_url\" : \"https://www.example.com/assets/icon_escooter.svg\" , \"icon_url_dark\" : \"https://www.example.com/assets/icon_escooter_dark.svg\" , \"icon_last_modified\" : \"2021-06-15\" }, \"default_pricing_plan_id\" : \"scooter_plan_1\" }, { \"vehicle_type_id\" : \"car1\" , \"form_factor\" : \"car\" , \"rider_capacity\" : 5 , \"min_cargo_volume_capacity\" : 200 , \"propulsion_type\" : \"combustion_diesel\" , \"eco_label\" : [ { \"country_code\" : \"FR\" , \"eco_sticker\" : \"critair_1\" }, { \"country_code\" : \"DE\" , \"eco_sticker\" : \"euro_2\" } ], \"name\" : \"Four-door Sedan\" , \"wheel_count\" : 4 , \"default_reserve_time\" : 0 , \"max_range_meters\" : 523992 , \"return_constraint\" : \"roundtrip_station\" , \"vehicle_accessories\" : [ \"doors_4\" , \"automatic\" , \"cruise_control\" ], \"g_CO2_km\" : 120 , \"vehicle_image\" : \"https://www.example.com/assets/renault-clio.jpg\" , \"make\" : \"Renault\" , \"model\" : \"Clio\" , \"color\" : \"white\" , \"vehicle_assets\" : { \"icon_url\" : \"https://www.example.com/assets/icon_car.svg\" , \"icon_url_dark\" : \"https://www.example.com/assets/icon_car_dark.svg\" , \"icon_last_modified\" : \"2021-06-15\" }, \"default_pricing_plan_id\" : \"car_plan_1\" } ] } }","title":"vehicle_types.json"},{"location":"specification/reference/#station_informationjson","text":"All stations included in station_information.json are considered public (meaning they can be shown on a map for public use). If there are private stations (such as Capital Bikeshare\u2019s White House station), these SHOULD NOT be included here. Any station that is represented in station_information.json MUST have a corresponding entry in station_status.json . The following fields are all attributes within the main data object for this feed. Field Name REQUIRED Type Defines stations Yes Array Array that contains one object per station as defined below. - station_id Yes ID Identifier of a station. - name Yes String The public name of the station for display in maps, digital signage, and other text applications. Names SHOULD reflect the station location through the use of a cross street or local landmark. Abbreviations SHOULD NOT be used for names and other text (for example, \"St.\" for \"Street\") unless a location is called by its abbreviated name (for example, \u201cJFK Airport\u201d). See Text Fields and Naming . Examples: Broadway and East 22nd Street Convention Center Central Park South - short_name OPTIONAL String Short name or other type of identifier. - lat Yes Latitude Latitude of the station in decimal degrees. This field SHOULD have a precision of 6 decimal places (0.000001). See Coordinate Precision . - lon Yes Longitude Longitude of the station in decimal degrees. This field SHOULD have a precision of 6 decimal places (0.000001). See Coordinate Precision . - address OPTIONAL String Address (street number and name) where station is located. This MUST be a valid address, not a free-form text description. Example: 1234 Main Street - cross_street OPTIONAL String Cross street or landmark where the station is located. - region_id OPTIONAL ID Identifier of the region where station is located. See system_regions.json . - post_code OPTIONAL String Postal code where station is located. - rental_methods OPTIONAL Array Payment methods accepted at this station. Current valid values are: key (operator issued vehicle key / fob / card) creditcard paypass applepay androidpay transitcard accountnumber phone - is_virtual_station (added in v2.1) OPTIONAL Boolean Is this station a location with or without smart dock technology? true - The station is a location without smart docking infrastructure. the station may be defined by a point (lat/lon) and/or station_area (below). false - The station consists of smart docking infrastructure (docks). This field SHOULD be published by mobility systems that have station locations without standard, internet connected physical docking infrastructure. These may be racks or geofenced areas designated for rental and/or return of vehicles. Locations that fit within this description SHOULD have the is_virtual_station boolean set to true . - station_area (added in v2.1) OPTIONAL GeoJSON MultiPolygon A GeoJSON MultiPolygon that describes the area of a virtual station. If station_area is supplied, then the record describes a virtual station. If lat/lon and station_area are both defined, the lat/lon is the significant coordinate of the station (for example, parking facility or valet drop-off and pick up point). The station_area takes precedence over any ride_allowed rules in overlapping geofencing_zones . - parking_type (added in v2.3) OPTIONAL Enum Type of parking station. Current valid values are: parking_lot (Off-street parking lot) street_parking (Curbside parking) underground_parking (Parking that is below street level, station may be non-communicating) sidewalk_parking (Park vehicle on sidewalk, out of the pedestrian right of way) other - parking_hoop (added in v2.3) OPTIONAL Boolean Are parking hoops present at this station? true - Parking hoops are present at this station. false - Parking hoops are not present at this station. Parking hoops are lockable devices that are used to secure a parking space to prevent parking of unauthorized vehicles. - contact_phone (added in v2.3) OPTIONAL Phone number Contact phone of the station. - capacity OPTIONAL Non-negative integer Number of total docking points installed at this station, both available and unavailable, regardless of what vehicle types are allowed at each dock. If this is a virtual station defined using the is_virtual_station field, this number represents the total number of vehicles of all types that can be parked at the virtual station. If the virtual station is defined by station_area , this is the number that can park within the station area. If lat / lon are defined, this is the number that can park at those coordinates. - vehicle_capacity (added in v2.1) OPTIONAL Object An object used to describe the parking capacity of virtual stations (defined using the is_virtual_station field), where each key is a vehicle_type_id as described in vehicle_types.json , and the value is a number representing the total number of vehicles of this type that can park within the virtual station. If the virtual station is defined by station_area , this is the number that can park within the station area. If lat / lon is defined, this is the number that can park at those coordinates. - vehicle_type_capacity (added in v2.1) OPTIONAL Object An object used to describe the docking capacity of a station where each key is a vehicle_type_id as described in vehicle_types.json , and the value is a number representing the total docking points installed at this station, both available and unavailable for the specified vehicle type. - is_valet_station (added in v2.1) OPTIONAL Boolean Are valet services provided at this station? true - Valet services are provided at this station. false - Valet services are not provided at this station. If this field is empty, it is assumed that valet services are not provided at this station. This field\u2019s boolean SHOULD be set to true during the hours which valet service is provided at the station. Valet service is defined as providing unlimited capacity at a station. - is_charging_station (added in v2.3) OPTIONAL Boolean Does the station support charging of electric vehicles? true - Electric vehicle charging is available at this station. false - Electric vehicle charging is not available at this station. - rental_uris (added in v1.1) OPTIONAL Object Contains rental URIs for Android, iOS, and web in the android , ios , and web fields. See examples of how to use these fields and supported analytics . \u2003- android (added in v1.1) OPTIONAL URI URI that can be passed to an Android app with an android.intent.action.VIEW Android intent to support Android Deep Links (https://developer.android.com/training/app-links/deep-linking). Please use Android App Links (https://developer.android.com/training/app-links) if possible so viewing apps do not need to manually manage the redirect of the user to the app store if the user does not have the application installed. This URI SHOULD be a deep link specific to this station, and SHOULD NOT be a general rental page that includes information for more than one station. The deep link SHOULD take users directly to this station, without any prompts, interstitial pages, or logins. Make sure that users can see this station even if they never previously opened the application. If this field is empty, it means deep linking is not supported in the native Android rental app. Note that the URI does not necessarily include the station_id for this station - other identifiers can be used by the rental app within the URI to uniquely identify this station. See the Analytics section for how viewing apps can report the origin of the deep link to rental apps. Android App Links example value: https://www.example.com/app?sid=1234567890&platform=android Deep Link (without App Links) example value: com.example.android://open.example.app/app?sid=1234567890 \u2003- ios (added in v1.1) OPTIONAL URI URI that can be used on iOS to launch the rental app for this station. More information on this iOS feature can be found here . Please use iOS Universal Links (https://developer.apple.com/ios/universal-links/) if possible so viewing apps do not need to manually manage the redirect of the user to the app store if the user does not have the application installed. This URI SHOULD be a deep link specific to this station, and SHOULD NOT be a general rental page that includes information for more than one station. The deep link SHOULD take users directly to this station, without any prompts, interstitial pages, or logins. Make sure that users can see this station even if they never previously opened the application. If this field is empty, it means deep linking is not supported in the native iOS rental app. Note that the URI does not necessarily include the 'station_id' for this station - other identifiers can be used by the rental app within the URI to uniquely identify this station. See the Analytics section for how viewing apps can report the origin of the deep link to rental apps. iOS Universal Links example value: https://www.example.com/app?sid=1234567890&platform=ios Deep Link (without Universal Links) example value: com.example.ios://open.example.app/app?sid=1234567890 \u2003- web (added in v1.1) OPTIONAL URL URL that can be used by a web browser to show more information about renting a vehicle at this station. This URL SHOULD be a deep link specific to this station, and SHOULD NOT be a general rental page that includes information for more than one station. The deep link SHOULD take users directly to this station, without any prompts, interstitial pages, or logins. Make sure that users can see this station even if they never previously opened the application. If this field is empty, it means deep linking is not supported for web browsers. Example value: https://www.example.com/app?sid=1234567890 Example 1: Physical station { \"last_updated\" : 1640887163 , \"ttl\" : 0 , \"version\" : \"2.3-RC2\" , \"data\" : { \"stations\" : [ { \"station_id\" : \"pga\" , \"name\" : \"Parking garage A\" , \"lat\" : 12.345678 , \"lon\" : 45.678901 , \"parking_type\" : \"underground_parking\" , \"parking_hoop\" : false , \"contact_phone\" : \"+33109874321\" , \"is_charging_station\" : \"true\" , \"vehicle_type_capacity\" : { \"abc123\" : 7 , \"def456\" : 9 } } ] } } Example 2: Virtual station { \"last_updated\" : 1640887163 , \"ttl\" : 0 , \"version\" : \"2.3-RC2\" , \"data\" : { \"stations\" : [ { \"station_id\" : \"station12\" , \"name\" : \"SE Belmont & SE 10 th\" , \"lat\" : 45.516445 , \"lon\" : -122.655775 , \"is_valet_station\" : false , \"is_virtual_station\" : true , \"is_charging_station\" : \"false\" , \"station_area\" : { \"type\" : \"MultiPolygon\" , \"coordinates\" : [ [ [ [ -122.655775 , 45.516445 ], [ -122.655705 , 45.516445 ], [ -122.655705 , 45.516495 ], [ -122.655775 , 45.516495 ], [ -122.655775 , 45.516445 ] ] ] ] }, \"capacity\" : 16 , \"vehicle_capacity\" : { \"abc123\" : 8 , \"def456\" : 8 , \"ghi789\" : 16 } } ] } }","title":"station_information.json"},{"location":"specification/reference/#station_statusjson","text":"Describes the capacity and rental availability of a station. Data returned SHOULD be as close to realtime as possible, but in no case should it be more than 5 minutes out-of-date. See Data Latency . Data reflects the operator's most recent knowledge of the station\u2019s status. Any station that is represented in station_status.json MUST have a corresponding entry in station_information.json . The following fields are all attributes within the main data object for this feed. Field Name REQUIRED Type Defines stations Yes Array Array that contains one object per station in the system as defined below. - station_id Yes ID Identifier of a station. See station_information.json . - num_bikes_available Yes Non-negative integer Number of functional vehicles physically at the station that may be offered for rental. To know if the vehicles are available for rental, see is_renting . If is_renting = true , this is the number of vehicles that are currently available for rent. If is_renting = false , this is the number of vehicles that would be available for rent if the station were set to allow rentals. - vehicle_types_available (added in v2.1) Conditionally REQUIRED Array REQUIRED if the vehicle_types.json file has been defined. This field's value is an array of objects. Each of these objects is used to model the total number of each defined vehicle type available at a station. The total number of vehicles from each of these objects SHOULD add up to match the value specified in the num_bikes_available field. \u2003- vehicle_type_id (added in v2.1) Conditionally REQUIRED ID REQUIRED if the vehicle_types_available is defined. The vehicle_type_id of each vehicle type at the station as described in vehicle_types.json . \u2003- count (added in v2.1) Conditionally REQUIRED Non-negative integer The total number of available vehicles of the corresponding vehicle_type_id , as defined in vehicle_types.json , at the station. - num_bikes_disabled OPTIONAL Non-negative integer Number of disabled vehicles of any type at the station. Vendors who do not want to publicize the number of disabled vehicles or docks in their system can opt to omit station capacity (in station_information.json , num_bikes_disabled , and num_docks_disabled (as of v2.0) . If station capacity is published, then broken docks/vehicles can be inferred (though not specifically whether the decreased capacity is a broken vehicle or dock). - num_docks_available Conditionally REQUIRED (as of v2.0) Non-negative integer REQUIRED except for stations that have unlimited docking capacity (for example, valet stations) (as of v2.0) . Number of functional docks physically at the station that are able to accept vehicles for return. To know if the docks are accepting vehicle returns, see is_returning . If is_returning = true , this is the number of docks that are currently available to accept vehicle returns. If is_returning = false , this is the number of docks that would be available if the station were set to allow returns. - vehicle_docks_available (added in v2.1) Conditionally REQUIRED Array REQUIRED in feeds where the vehicle_types.json is defined and where certain docks are only able to accept certain vehicle types. If every dock at the station is able to accept any vehicle type, then this field is not REQUIRED. This field's value is an array of objects. Each of these objects is used to model the number of docks available for certain vehicle types. The total number of docks from each of these objects SHOULD add up to match the value specified in the num_docks_available field. \u2003- vehicle_type_ids (added in v2.1) Conditionally REQUIRED Array REQUIRED if vehicle_docks_available is defined. An array of strings where each string represents a vehicle_type_id that is able to use a particular type of dock at the station \u2003- count (added in v2.1) Conditionally REQUIRED Non-negative integer REQUIRED if vehicle_docks_available is defined. The total number of available docks at the station, that can accept vehicles of the corresponding vehicle_type_id , in the vehicle_type_ids array. - num_docks_disabled OPTIONAL Non-negative integer Number of disabled dock points at the station. - is_installed Yes Boolean Is the station currently on the street? true - Station is installed on the street. false - Station is not installed on the street. Boolean SHOULD be set to true when equipment is present on the street. In seasonal systems where equipment is removed during winter, boolean SHOULD be set to false during the off season. May also be set to false to indicate planned (future) stations which have not yet been installed. - is_renting Yes Boolean Is the station currently renting vehicles? true - Station is renting vehicles. Even if the station is empty, if it would otherwise allow rentals, this value MUST be true . false - Station is not renting vehicles. If the station is temporarily taken out of service and not allowing rentals, this field MUST be set to false . If a station becomes inaccessible to users due to road construction or other factors this field SHOULD be set to false . Field SHOULD be set to false during hours or days when the system is not offering vehicles for rent. - is_returning Yes Boolean Is the station accepting vehicle returns? true - Station is accepting vehicle returns. Even if the station is full, if it would otherwise allow vehicle returns, this value MUST be true . false - Station is not accepting vehicle returns. If the station is temporarily taken out of service and not allowing vehicle returns, this field MUST be set to false . If a station becomes inaccessible to users due to road construction or other factors, this field SHOULD be set to false . - last_reported Yes Timestamp The last time this station reported its status to the operator's backend. Example: { \"last_updated\" : 1640887163 , \"ttl\" : 0 , \"version\" : \"2.3-RC2\" , \"data\" : { \"stations\" : [ { \"station_id\" : \"station1\" , \"is_installed\" : true , \"is_renting\" : true , \"is_returning\" : true , \"last_reported\" : 1609866125 , \"num_docks_available\" : 3 , \"num_docks_disabled\" : 1 , \"vehicle_docks_available\" : [ { \"vehicle_type_ids\" : [ \"abc123\" , \"def456\" ], \"count\" : 2 }, { \"vehicle_type_ids\" : [ \"def456\" ], \"count\" : 1 } ], \"num_bikes_available\" : 1 , \"num_bikes_disabled\" : 2 , \"vehicle_types_available\" : [ { \"vehicle_type_id\" : \"abc123\" , \"count\" : 1 }, { \"vehicle_type_id\" : \"def456\" , \"count\" : 0 } ] }, { \"station_id\" : \"station2\" , \"is_installed\" : true , \"is_renting\" : true , \"is_returning\" : true , \"last_reported\" : 1609866106 , \"num_docks_available\" : 8 , \"num_docks_disabled\" : 1 , \"vehicle_docks_available\" : [ { \"vehicle_type_ids\" : [ \"abc123\" ], \"count\" : 6 }, { \"vehicle_type_ids\" : [ \"def456\" ], \"count\" : 2 } ], \"num_bikes_available\" : 6 , \"num_bikes_disabled\" : 1 , \"vehicle_types_available\" : [ { \"vehicle_type_id\" : \"abc123\" , \"count\" : 2 }, { \"vehicle_type_id\" : \"def456\" , \"count\" : 4 } ] } ] } }","title":"station_status.json"},{"location":"specification/reference/#free_bike_statusjson","text":"(as of v2.1) Describes all vehicles that are not currently in active rental. REQUIRED for free floating (dockless) vehicles. OPTIONAL for station based (docked) vehicles. Data returned SHOULD be as close to realtime as possible, but in no case should it be more than 5 minutes out-of-date. See Data Latency . Vehicles that are part of an active rental MUST NOT appear in this feed. Vehicles listed as available for rental MUST be in the field and accessible to users. Vehicles that are not accessible (for example, in a warehouse or in transit) MUST NOT appear as available for rental. The following fields are all attributes within the main data object for this feed. Field Name REQUIRED Type Defines bikes Yes Array Array that contains one object per vehicle that is currently not part of an active rental, as defined below. - bike_id Yes ID Identifier of a vehicle. The bike_id identifier MUST be rotated to a random string after each trip to protect user privacy (as of v2.0) . Use of persistent vehicle IDs poses a threat to user privacy. The bike_id identifier SHOULD only be rotated once per trip. - lat Conditionally REQUIRED (as of v2.1) Latitude Latitude of the vehicle in decimal degrees. (as of v2.1) REQUIRED if station_id is not provided for this vehicle (free floating). This field SHOULD have a precision of 6 decimal places (0.000001). See Coordinate Precision . - lon Conditionally REQUIRED (as of v2.1) Longitude Longitude of the vehicle in decimal degrees. (as of v2.1) REQUIRED if station_id is not provided for this vehicle (free floating). This field SHOULD have a precision of 6 decimal places (0.000001). See Coordinate Precision . - is_reserved Yes Boolean Is the vehicle currently reserved? true - Vehicle is currently reserved. false - Vehicle is not currently reserved. - is_disabled Yes Boolean Is the vehicle currently disabled? true - Vehicle is currently disabled. false - Vehicle is not currently disabled. This field is used to indicate vehicles that are in the field but not available for rental. This may be due to a mechanical issue, low battery, etc. Publishing this data may prevent users from attempting to rent vehicles that are disabled and not available for rental. - rental_uris (added in v1.1) OPTIONAL Object JSON object that contains rental URIs for Android, iOS, and web in the android , ios , and web fields. See examples of how to use these fields and supported analytics . \u2003- android (added in v1.1) OPTIONAL URI URI that can be passed to an Android app with an android.intent.action.VIEW Android intent to support Android Deep Links (https://developer.android.com/training/app-links/deep-linking). Please use Android App Links (https://developer.android.com/training/app-links) if possible, so viewing apps do not need to manually manage the redirect of the user to the app store if the user does not have the application installed. This URI SHOULD be a deep link specific to this vehicle, and SHOULD NOT be a general rental page that includes information for more than one vehicle. The deep link SHOULD take users directly to this vehicle, without any prompts, interstitial pages, or logins. Make sure that users can see this vehicle even if they never previously opened the application. Note that as a best practice providers SHOULD rotate identifiers within deep links after each rental to avoid unintentionally exposing private vehicle trip origins and destinations. If this field is empty, it means deep linking is not supported in the native Android rental app. Note that the URI does not necessarily include the bike_id for this vehicle - other identifiers can be used by the rental app within the URI to uniquely identify this vehicle. See the Analytics section for how viewing apps can report the origin of the deep link to rental apps. Android App Links example value: https://www.example.com/app?sid=1234567890&platform=android Deep Link (without App Links) example value: com.example.android://open.example.app/app?sid=1234567890 \u2003- ios (added in v1.1) OPTIONAL URI URI that can be used on iOS to launch the rental app for this vehicle. More information on this iOS feature can be found here . Please use iOS Universal Links (https://developer.apple.com/ios/universal-links/) if possible, so viewing apps do not need to manually manage the redirect of the user to the app store if the user does not have the application installed. This URI SHOULD be a deep link specific to this vehicle, and SHOULD NOT be a general rental page that includes information for more than one vehicle. The deep link SHOULD take users directly to this vehicle, without any prompts, interstitial pages, or logins. Make sure that users can see this vehicle even if they never previously opened the application. Note that as a best practice providers SHOULD rotate identifiers within deep links after each rental to avoid unintentionally exposing private vehicle trip origins and destinations. If this field is empty, it means deep linking is not supported in the native iOS rental app. Note that the URI does not necessarily include the bike_id - other identifiers can be used by the rental app within the URL to uniquely identify this vehicle. See the Analytics section for how viewing apps can report the origin of the deep link to rental apps. iOS Universal Links example value: https://www.example.com/app?sid=1234567890&platform=ios Deep Link (without Universal Links) example value: com.example.ios://open.example.app/app?sid=1234567890 \u2003- web (added in v1.1) OPTIONAL URL URL that can be used by a web browser to show more information about renting a vehicle at this vehicle. This URL SHOULD be a deep link specific to this vehicle, and SHOULD NOT be a general rental page that includes information for more than one vehicle. The deep link SHOULD take users directly to this vehicle, without any prompts, interstitial pages, or logins. Make sure that users can see this vehicle even if they never previously opened the application. Note that as a best practice providers SHOULD rotate identifiers within deep links after each rental to avoid unintentionally exposing private vehicle trip origins and destinations. If this field is empty, it means deep linking is not supported for web browsers. Example value: https://www.example.com/app?sid=1234567890 - vehicle_type_id (added in v2.1) Conditionally REQUIRED ID REQUIRED if the vehicle_types.json file is defined. The vehicle_type_id of this vehicle, as described in vehicle_types.json . - last_reported (added in v2.1) OPTIONAL Timestamp The last time this vehicle reported its status to the operator's backend. - current_range_meters (added in v2.1) Conditionally REQUIRED Non-negative float REQUIRED if the corresponding vehicle_type definition for this vehicle has a motor. This value represents the furthest distance in meters that the vehicle can travel with the vehicle's current charge or fuel (without recharging or refueling). Note that in the case of carsharing, the given range is indicative and can be different from the one displayed on the vehicle's dashboard. - current_fuel_percent (added in v2.3) OPTIONAL Non-negative float This value represents the current percentage, expressed from 0 to 1, of fuel or battery power remaining in the vehicle. - station_id (added in v2.1) Conditionally REQUIRED ID REQUIRED if the vehicle is currently at a station and the vehicle_types.json file has been defined. Identifier referencing the station_id field in station_information.json . - home_station_id (added in v2.3) OPTIONAL ID The station_id of the station this vehicle must be returned to as defined in station_information.json . - pricing_plan_id (added in v2.2) OPTIONAL ID The plan_id of the pricing plan this vehicle is eligible for as described in system_pricing_plans.json . If this field is defined it supersedes default_pricing_plan_id in vehicle_types.json . This field SHOULD be used to override default_pricing_plan_id in vehicle_types.json to define pricing plans for individual vehicles when necessary. - vehicle_equipment (added in v2.3) OPTIONAL Array List of vehicle equipment provided by the operator in addition to the accessories already provided in the vehicle (field vehicle_accessories of vehicle_types.json ) but subject to more frequent updates. Current valid values are: child_seat_a (Baby seat (\"0-10kg\")) child_seat_b (Seat or seat extension for small children (\"9-18 kg\")) child_seat_c (Seat or seat extension for older children (\"15-36 kg\")) winter_tires (Vehicle has tires for winter weather) snow_chains - available_until (added in v2.3) OPTIONAL Datetime The date and time when any rental of the vehicle must be completed. The vehicle must be returned and made available for the next user by this time. If this field is empty, it indicates that the vehicle is available indefinitely. This field SHOULD be published by carsharing or other mobility systems where vehicles can be booked in advance for future travel. Example 1: Micromobility { \"last_updated\" : 1640887163 , \"ttl\" : 0 , \"version\" : \"2.3-RC2\" , \"data\" :{ \"bikes\" :[ { \"bike_id\" : \"973a5c94-c288-4a2b-afa6-de8aeb6ae2e5\" , \"last_reported\" : 1609866109 , \"lat\" : 12.34 , \"lon\" : 56.78 , \"is_reserved\" : false , \"is_disabled\" : false , \"vehicle_type_id\" : \"abc123\" , \"rental_uris\" : { \"android\" : \"https://www.example.com/app?bike_id=973a5c94-c288-4a2b-afa6-de8aeb6ae2e5&platform=android&\" , \"ios\" : \"https://www.example.com/app?bike_id=973a5c94-c288-4a2b-afa6-de8aeb6ae2e5&platform=ios\" } }, { \"bike_id\" : \"987fd100-b822-4347-86a4-b3eef8ca8b53\" , \"last_reported\" : 1609866204 , \"is_reserved\" : false , \"is_disabled\" : false , \"vehicle_type_id\" : \"def456\" , \"current_range_meters\" : 6543.0 , \"station_id\" : 86 , \"pricing_plan_id\" : \"plan3\" } ] } } Example 2: Carsharing { \"last_updated\" : 1640887163 , \"ttl\" : 0 , \"version\" : \"2.3-RC2\" , \"data\" :{ \"bikes\" :[ { \"bike_id\" : \"45bd3fb7-a2d5-4def-9de1-c645844ba962\" , \"last_reported\" : 1609866109 , \"lat\" : 12.345678 , \"lon\" : 56.789012 , \"is_reserved\" : false , \"is_disabled\" : false , \"vehicle_type_id\" : \"abc123\" , \"current_range_meters\" : 400000.0 , \"available_until\" : \"2021-05-17T15:00:00Z\" , \"home_station\" : \"station1\" , \"vehicle_equipment\" :[ \"child_seat_a\" , \"winter_tires\" ] }, { \"bike_id\" : \"d4521def-7922-4e46-8e1d-8ac397239bd0\" , \"last_reported\" : 1609866204 , \"is_reserved\" : false , \"is_disabled\" : false , \"vehicle_type_id\" : \"def456\" , \"current_fuel_percent\" : 0.7 , \"current_range_meters\" : 6543.0 , \"station_id\" : \"86\" , \"pricing_plan_id\" : \"plan3\" , \"home_station_id\" : \"146\" , \"vehicle_equipment\" :[ \"child_seat_a\" ] } ] } }","title":"free_bike_status.json"},{"location":"specification/reference/#system_hoursjson","text":"This OPTIONAL file is used to describe hours and days of operation when vehicles are available for rental. If system_hours.json is not published, it indicates that vehicles are available for rental 24 hours a day, 7 days a week. The following fields are all attributes within the main data object for this feed. Field Name REQUIRED Type Defines rental_hours Yes Array Array of objects as defined below. The array MUST contain a minimum of one object identifying hours for every day of the week or a maximum of two for each day of the week objects (one for each user type). - user_types Yes Array An array of member and/or nonmember value(s). This indicates that this set of rental hours applies to either members or non-members only. - days Yes Array An array of abbreviations (first 3 letters) of English names of the days of the week for which this object applies (for example, [\"mon\", \"tue\", \"wed\", \"thu\", \"fri\", \"sat, \"sun\"] ). Rental hours MUST NOT be defined more than once for each day and user type. - start_time Yes Time Start time for the hours of operation of the system in the time zone indicated in system_information.json . - end_time Yes Time End time for the hours of operation of the system in the time zone indicated in system_information.json . Example: { \"last_updated\" : 1640887163 , \"ttl\" : 86400 , \"version\" : \"2.3-RC2\" , \"data\" : { \"rental_hours\" : [ { \"user_types\" : [ \"member\" ], \"days\" : [ \"sat\" , \"sun\" ], \"start_time\" : \"00:00:00\" , \"end_time\" : \"23:59:59\" }, { \"user_types\" : [ \"nonmember\" ], \"days\" : [ \"sat\" , \"sun\" ], \"start_time\" : \"05:00:00\" , \"end_time\" : \"23:59:59\" }, { \"user_types\" : [ \"member\" , \"nonmember\" ], \"days\" : [ \"mon\" , \"tue\" , \"wed\" , \"thu\" , \"fri\" ], \"start_time\" : \"00:00:00\" , \"end_time\" : \"23:59:59\" } ] } }","title":"system_hours.json"},{"location":"specification/reference/#system_calendarjson","text":"Describes the operating calendar for a system. This OPTIONAL file SHOULD be published by systems that operate seasonally or do not offer continuous year-round service. The following fields are all attributes within the main data object for this feed. Field Name REQUIRED Type Defines calendars Yes Array Array of objects describing the system operational calendar. A minimum of one calendar object is REQUIRED. If start and end dates are the same every year, then start_year and end_year SHOULD be omitted. - start_month Yes Non-negative Integer Starting month for the system operations ( 1 - 12 ). - start_day Yes Non-negative Integer Starting date for the system operations ( 1 - 31 ). - start_year OPTIONAL Non-negative Integer Starting year for the system operations. - end_month Yes Non-negative Integer Ending month for the system operations ( 1 - 12 ). - end_day Yes Non-negative Integer Ending date for the system operations ( 1 - 31 ). - end_year OPTIONAL Non-negative Integer Ending year for the system operations. Example: { \"last_updated\" : 1640887163 , \"ttl\" : 86400 , \"version\" : \"2.3-RC2\" , \"data\" : { \"calendars\" : [ { \"start_month\" : 4 , \"start_day\" : 1 , \"start_year\" : 2020 , \"end_month\" : 11 , \"end_day\" : 5 , \"end_year\" : 2020 } ] } }","title":"system_calendar.json"},{"location":"specification/reference/#system_regionsjson","text":"Describes regions for a system. Regions are a subset of a shared mobility system as defined by system_id in system_information.json . Regions may be defined for any purpose, for example political jurisdictions, neighborhoods or economic zones. The following fields are all attributes within the main data object for this feed. Field Name REQUIRED Type Defines regions Yes Array Array of objects as defined below. - region_id Yes ID Identifier for the region. - name Yes String Public name for this region. Example: { \"last_updated\" : 1640887163 , \"ttl\" : 86400 , \"version\" : \"2.3-RC2\" , \"data\" : { \"regions\" : [ { \"name\" : \"North\" , \"region_id\" : \"3\" }, { \"name\" : \"East\" , \"region_id\" : \"4\" }, { \"name\" : \"South\" , \"region_id\" : \"5\" }, { \"name\" : \"West\" , \"region_id\" : \"6\" } ] } }","title":"system_regions.json"},{"location":"specification/reference/#system_pricing_plansjson","text":"Describes pricing for the system. The following fields are all attributes within the main data object for this feed. Field Name REQUIRED Type Defines plans Yes Array Array of objects as defined below. - plan_id Yes ID Identifier for a pricing plan in the system. - url OPTIONAL URL URL where the customer can learn more about this pricing plan. - name Yes String Name of this pricing plan. - currency Yes String Currency used to pay the fare. This pricing is in ISO 4217 code: http://en.wikipedia.org/wiki/ISO_4217 (for example, CAD for Canadian dollars, EUR for euros, or JPY for Japanese yen.) - price Yes Non-Negative float OR String Fare price, in the unit specified by currency. If string, MUST be in decimal monetary value. (added in v2.2) Note: v3.0 will only allow non-negative float, therefore new implementations SHOULD be non-negative float. In case of non-rate price, this field is the total price. In case of rate price, this field is the base price that is charged only once per trip (typically the price for unlocking) in addition to per_km_pricing and/or per_min_pricing . - is_taxable Yes Boolean Will additional tax be added to the base price? true - Yes. false - No. false MAY be used to indicate that tax is not charged or that tax is included in the base price. - description Yes String Customer-readable description of the pricing plan. This SHOULD include the duration, price, conditions, etc. that the publisher would like users to see. - per_km_pricing (added in v2.2) OPTIONAL Array Array of segments when the price is a function of distance traveled, displayed in kilometers. Total cost is the addition of price and all segments in per_km_pricing and per_min_pricing . If this array is not provided, there are no variable costs based on distance. \u2003\u2003- start (added in v2.2) Conditionally REQUIRED Non-Negative Integer REQUIRED if per_km_pricing is defined. The kilometer at which this segment rate starts being charged (inclusive) . \u2003\u2003- rate (added in v2.2) Conditionally REQUIRED Float REQUIRED if per_km_pricing is defined. Rate that is charged for each kilometer interval after the start . Can be a negative number, which indicates that the traveler will receive a discount. \u2003\u2003- interval (added in v2.2) Conditionally REQUIRED Non-Negative Integer REQUIRED if per_km_pricing is defined. Interval in kilometers at which the rate of this segment is either reapplied indefinitely, or if defined, up until (but not including) end kilometer. An interval of 0 indicates the rate is only charged once. \u2003\u2003- end (added in v2.2) OPTIONAL Non-Negative Integer The kilometer at which the rate will no longer apply (exclusive) for example, if end is 20 the rate no longer applies at 20.00 km. If this field is empty, the price issued for this segment is charged until the trip ends, in addition to the cost of any subsequent segments. - per_min_pricing (added in v2.2) OPTIONAL Array Array of segments when the price is a function of time traveled, displayed in minutes. Total cost is the addition of price and all segments in per_km_pricing and per_min_pricing . If this array is not provided, there are no variable costs based on time. \u2003\u2003- start (added in v2.2) Conditionally REQUIRED Non-Negative Integer REQUIRED if per_min_pricing is defined. The minute at which this segment rate starts being charged (inclusive) . \u2003\u2003- rate (added in v2.2) Conditionally REQUIRED Float REQUIRED if per_min_pricing is defined. Rate that is charged for each minute interval after the start . Can be a negative number, which indicates that the traveler will receive a discount. \u2003\u2003- interval (added in v2.2) Conditionally REQUIRED Non-Negative Integer REQUIRED if per_min_pricing is defined. Interval in minutes at which the rate of this segment is either reapplied indefinitely, or up until (but not including) the end minute, if end is defined. An interval of 0 indicates the rate is only charged once. \u2003\u2003- end (added in v2.2) OPTIONAL Non-Negative Integer The minute at which the rate will no longer apply (exclusive) for example, if end is 20 the rate no longer applies after 19:59. If this field is empty, the price issued for this segment is charged until the trip ends, in addition to the cost of any subsequent segments. - surge_pricing (added in v2.2) OPTIONAL Boolean Is there currently an increase in price in response to increased demand in this pricing plan? If this field is empty, it means there is no surge pricing in effect. true - Surge pricing is in effect. false - Surge pricing is not in effect. Example 1: The user does not pay more than the base price for the first 10 km. After 10 km the user pays $1 per km. After 25 km the user pays $0.50 per km and an additional $3 every 5 km, the extension price, in addition to $0.50 per km. { \"last_updated\" : 1640887163 , \"ttl\" : 0 , \"version\" : \"2.3-RC2\" , \"data\" : { \"plans\" : [ { \"plan_id\" : \"plan2\" , \"name\" : \"One-Way\" , \"currency\" : \"USD\" , \"price\" : 2.00 , \"is_taxable\" : false , \"description\" : \"Includes 10km, overage fees apply after 10km.\" , \"per_km_pricing\" : [ { \"start\" : 10 , \"rate\" : 1.00 , \"interval\" : 1 , \"end\" : 25 }, { \"start\" : 25 , \"rate\" : 0.50 , \"interval\" : 1 }, { \"start\" : 25 , \"rate\" : 3.00 , \"interval\" : 5 } ] } ] } } Example 2: This example demonstrates a pricing scheme that has a rate both by minute and by km. The user is charged $0.25 per km as well as $0.50 per minute. Both of these rates happen concurrently and are not dependent on one another. { \"last_updated\" : 1640887163 , \"ttl\" : 0 , \"version\" : \"2.3-RC2\" , \"data\" : { \"plans\" : [ { \"plan_id\" : \"plan3\" , \"name\" : \"Simple Rate\" , \"currency\" : \"CAD\" , \"price\" : 3.00 , \"is_taxable\" : true , \"description\" : \"$3 unlock fee, $0.25 per kilometer and 0.50 per minute.\" , \"per_km_pricing\" : [ { \"start\" : 0 , \"rate\" : 0.25 , \"interval\" : 1 } ], \"per_min_pricing\" : [ { \"start\" : 0 , \"rate\" : 0.50 , \"interval\" : 1 } ] } ] } }","title":"system_pricing_plans.json"},{"location":"specification/reference/#system_alertsjson","text":"This feed is intended to inform customers about changes to the system that do not fall within the normal system operations. For example, system closures due to weather would be listed here, but a system that only operated for part of the year would have that schedule listed in the system_calendar.json feed. Obsolete alerts SHOULD be removed so the client application can safely present to the end user everything present in the feed. The following fields are all attributes within the main data object for this feed. Field Name REQUIRED Type Defines alerts Yes Array Array of objects each indicating a system alert as defined below. - alert_id Yes ID Identifier for this alert. - type Yes Enum Valid values are: system_closure station_closure station_move other - times OPTIONAL Array Array of objects with the fields start and end indicating when the alert is in effect (for example, when the system or station is actually closed, or when a station is scheduled to be moved). \u2003- start Conditionally REQUIRED Timestamp REQUIRED if times array is defined. Start time of the alert. \u2003- end OPTIONAL Timestamp End time of the alert. If there is currently no end time planned for the alert, this can be omitted. - station_ids OPTIONAL Array If this is an alert that affects one or more stations, include their ID(s). Otherwise omit this field. If both station_id and region_id are omitted, this alert affects the entire system. - region_ids OPTIONAL Array If this system has regions, and if this alert only affects certain regions, include their ID(s). Otherwise, omit this field. If both station_id s and region_id s are omitted, this alert affects the entire system. - url OPTIONAL URL URL where the customer can learn more information about this alert. - summary Yes String A short summary of this alert to be displayed to the customer. - description OPTIONAL String Detailed description of the alert. - last_updated OPTIONAL Timestamp Indicates the last time the info for the alert was updated. Example: { \"last_updated\" : 1604519393 , \"ttl\" : 60 , \"version\" : \"2.3-RC2\" , \"data\" : { \"alerts\" : [ { \"alert_id\" : \"21\" , \"type\" : \"station_closure\" , \"station_ids\" : [ \"123\" , \"456\" , \"789\" ], \"times\" : [ { \"start\" : 1604448000 , \"end\" : 1604674800 } ], \"url\" : \"https://example.com/more-info\" , \"summary\" : \"Disruption of Service\" , \"description\" : \"The three stations on Broadway will be out of service from 12:00am Nov 3 to 3:00pm Nov 6th to accommodate road work\" , \"last_updated\" : 1604198100 } ] } }","title":"system_alerts.json"},{"location":"specification/reference/#geofencing_zonesjson","text":"(added in v2.1) Describes geofencing zones and their associated rules and attributes. Geofenced areas are delineated using GeoJSON in accordance with RFC 7946 . By default, no restrictions apply everywhere. Geofencing zones SHOULD be modeled according to restrictions rather than allowance. An operational area (outside of which vehicles cannot be used) SHOULD be defined with a counterclockwise polygon, and a limitation area (in which vehicles can be used under certain restrictions) SHOULD be defined with a clockwise polygon. Geofences and GPS operate in two dimensions. Restrictions placed on an overpass or bridge will also be applied to the roadway or path beneath. Care SHOULD be taken when developing geofence based policies that rely on location data. Location data from GPS, cellular and Wi-Fi signals are subject to interference resulting in accuracy levels in the tens of meters or greater. This may result in vehicles being placed within a geofenced zone when they are actually outside or adjacent to the zone. Transit time between server and client can also impact when a user is notified of a geofence based policy. A vehicle traveling at 15kph can be well inside of a restricted zone before a notification is received. The following fields are all attributes within the main data object for this feed. Field Name REQUIRED Type Defines geofencing_zones Yes GeoJSON FeatureCollection Each geofenced zone and its associated rules and attributes is described as an object within the array of features, as follows. - type Yes String \u201cFeatureCollection\u201d (as per IETF RFC 7946 ). - features Yes Array Array of objects as defined below. \u2003- type Yes String \u201cFeature\u201d (as per IETF RFC 7946 ). \u2003- geometry Yes GeoJSON MultiPolygon A polygon that describes where rides might not be able to start, end, go through, or have other limitations. A clockwise arrangement of points defines the area enclosed by the polygon, while a counterclockwise order defines the area outside the polygon ( right-hand rule ). All geofencing zones contained in this list are public (meaning they can be displayed on a map for public use). \u2003- properties Yes Object Properties: As defined below, describing travel allowances and limitations. \u2003\u2003- name OPTIONAL String Public name of the geofencing zone. \u2003\u2003- start OPTIONAL Timestamp Start time of the geofencing zone. If the geofencing zone is always active, this can be omitted. \u2003\u2003- end OPTIONAL Timestamp End time of the geofencing zone. If the geofencing zone is always active, this can be omitted. \u2003\u2003- rules OPTIONAL Array Array that contains one object per rule as defined below. In the event of colliding rules within the same polygon, the earlier rule (in order of the JSON file) takes precedence. In the case of overlapping polygons, the combined set of rules associated with the overlapping polygons applies to the union of the polygons. In the event of colliding rules in this set, the earlier rule (in order of the JSON file) also takes precedence. \u2003\u2003\u2003- vehicle_type_id OPTIONAL Array Array of IDs of vehicle types for which any restrictions SHOULD be applied (see vehicle type definitions in vehicle_types.json ). If vehicle type IDs are not specified, then restrictions apply to all vehicle types. \u2003\u2003\u2003- ride_allowed Conditionally REQUIRED Boolean REQUIRED if rules array is defined. Is the undocked (\u201cfree floating\u201d) ride allowed to start and end in this zone? true - Undocked (\u201cfree floating\u201d) ride can start and end in this zone. false - Undocked (\u201cfree floating\u201d) ride cannot start or end in this zone. \u2003\u2003\u2003- ride_through_allowed Conditionally REQUIRED Boolean REQUIRED if rules array is defined. Is the ride allowed to travel through this zone? true - Ride can travel through this zone. false - Ride cannot travel through this zone. \u2003\u2003\u2003- maximum_speed_kph OPTIONAL Non-negative Integer What is the maximum speed allowed, in kilometers per hour? If there is no maximum speed to observe, this can be omitted. \u2003\u2003\u2003- station_parking (added in v2.3) OPTIONAL Boolean Can vehicles only be parked at stations defined in station_information.json within this geofence zone? true - Vehicles can only be parked at stations. false - Vehicles may be parked outside of stations. Example: { \"last_updated\": 1640887163, \"ttl\": 60, \"version\": \"2.3-RC2\", \"data\": { \"geofencing_zones\": { \"type\": \"FeatureCollection\", \"features\": [ { \"type\": \"Feature\", \"geometry\": { \"type\": \"MultiPolygon\", \"coordinates\": [ [ [ [ -122.578067, 45.562982 ], [ -122.661838, 45.562741 ], [ -122.661151, 45.504542 ], [ -122.578926, 45.5046625 ], [ -122.578067, 45.562982 ] ] ], [ [ [ -122.650680, 45.548197 ], [ -122.650852, 45.534731 ], [ -122.630939, 45.535212 ], [ -122.630424, 45.548197 ], [ -122.650680, 45.548197 ] ] ] ] }, \"properties\": { \"name\": \"NE 24th/NE Knott\", \"start\": 1593878400, \"end\": 1593907260, \"rules\": [ { \"vehicle_type_id\": [ \"moped1\", \"car1\" ], \"ride_allowed\": false, \"ride_through_allowed\": true, \"maximum_speed_kph\": 10, \"station_parking\": true } ] } } ] } } }","title":"geofencing_zones.json"},{"location":"specification/reference/#deep-links","text":"(added in v1.1) Deep links to iOS, Android, and web apps are supported via URIs in the system_information.json , station_information.json , and free_bike_status.json files. The following sections describe how analytics can be added to these URIs, as well as some examples. For further examples, see \"What's New in GBFS\" .","title":"Deep Links"},{"location":"specification/reference/#analytics","text":"(added in v1.1) In all of the rental URI fields, a viewing app can report the origin of a deep link request to a rental app by appending the client_id (added in v1.1) parameter to the URI along with the domain name for the viewing app. For example, if Google is the viewing app, it can append: client_id=google.com ...to the URI field to report that Google is the originator of the deep link request. If the Android URI is: com.example.android://open.example.app/stations?id=1234567890 ...then the URI used by Google would be: com.example.android://open.example.app/stations?id=1234567890&client_id=google.com Other supported parameters include: ad_id (added in v1.1) - Advertising ID issued to the viewing app (for example, IFDA on iOS) token (added in v1.1) - A token identifier that was issued by the rental app to the viewing app.","title":"Analytics"},{"location":"specification/reference/#examples","text":"Example 1 - App Links on Android and Universal Links on iOS are supported: system_information.json { \"last_updated\" : 1640887163 , \"ttl\" : 60 , \"version\" : \"2.3-RC2\" , \"data\" : { \"name\" : \"Example Bike Rental\" , \"system_id\" : \"example_cityname\" , \"timezone\" : \"America/Chicago\" , \"language\" : \"en\" , \"rental_apps\" : { \"android\" : { \"discovery_uri\" : \"com.example.android://\" }, \"ios\" : { \"discovery_uri\" : \"com.example.ios://\" } } } } station_information.json { \"last_updated\" : 1640887163 , \"ttl\" : 60 , \"version\" : \"2.3-RC2\" , \"data\" : { \"stations\" : [ { \"station_id\" : \"425\" , \"name\" : \"Coppertail\" , \"lat\" : 27.956333 , \"lon\" : -82.430436 , \"rental_uris\" : { \"android\" : \"https://www.example.com/app?sid=1234567890&platform=android\" , \"ios\" : \"https://www.example.com/app?sid=1234567890&platform=ios\" } } ] } } Note that the Android URI and iOS Universal Link URLs do not necessarily use the same identifier as the station_id . Example 2 - App Links are not supported on Android and Universal Links are not supported on iOS, but deep links are still supported on Android and iOS: system_information.json { \"last_updated\" : 1572447999 , \"ttl\" : 60 , \"version\" : \"2.3-RC2\" , \"data\" : { \"name\" : \"Example Bike Rental\" , \"system_id\" : \"example_cityname\" , \"timezone\" : \"America/Chicago\" , \"language\" : \"en\" , \"rental_apps\" : { \"android\" : { \"discovery_uri\" : \"com.example.android://\" , \"store_uri\" : \"https://play.google.com/store/apps/details?id=com.example.android\" }, \"ios\" : { \"store_uri\" : \"https://apps.apple.com/app/apple-store/id123456789\" , \"discovery_uri\" : \"com.example.ios://\" } } } } station_information.json { \"last_updated\" : 1609866247 , \"ttl\" : 60 , \"version\" : \"2.3-RC2\" , \"data\" : { \"stations\" : [ { \"station_id\" : \"425\" , \"name\" : \"Coppertail\" , \"lat\" : 27.956333 , \"lon\" : -82.430436 , \"rental_uris\" :{ \"android\" : \"com.example.android://open.example.app/app?sid=1234567890\" , \"ios\" : \"com.example.ios://open.example.app/app?sid=1234567890\" } } ] } } Example 3 - Deep link web URLs are supported, but not Android or iOS native apps: station_information.json { \"last_updated\" : 1609866247 , \"ttl\" : 60 , \"version\" : \"2.3-RC2\" , \"data\" : { \"stations\" : [ { \"station_id\" : \"425\" , \"name\" : \"Coppertail\" , \"lat\" : 27.956333 , \"lon\" : -82.430436 , \"rental_uris\" : { \"web\" : \"https://www.example.com/app?sid=1234567890\" } } ] } }","title":"Examples"},{"location":"specification/reference/#disclaimers","text":"Apple Pay, PayPass, and other third-party product and service names are trademarks or registered trademarks of their respective owners.","title":"Disclaimers"},{"location":"specification/reference/#license","text":"Except as otherwise noted, the content of this page is licensed under the Creative Commons Attribution 3.0 License .","title":"License"},{"location":"toolbox/","text":"Toolbox \u00b6 Community Tools and Resources Glossary Quick Links GBFS Validator - The Canonical GBFS Validator is a tool to check the conformity of a GBFS feed against the official specification including past releases and release candidates. JSON Schemas - A set of JSON schemas is available for each version of the specification as well as the current release candidate. The Canonical GBFS Validator is based on these schemas. Dataset Catalog - There are now over 600 shared mobility systems publishing GBFS worldwide. A catalog of these GBFS feeds is maintained by the GBFS community on the GBFS repo. This is an incomplete list. If you have or are aware of a feed that does not appear on the list please add it.","title":"Toolbox"},{"location":"toolbox/#toolbox","text":"Community Tools and Resources Glossary Quick Links GBFS Validator - The Canonical GBFS Validator is a tool to check the conformity of a GBFS feed against the official specification including past releases and release candidates. JSON Schemas - A set of JSON schemas is available for each version of the specification as well as the current release candidate. The Canonical GBFS Validator is based on these schemas. Dataset Catalog - There are now over 600 shared mobility systems publishing GBFS worldwide. A catalog of these GBFS feeds is maintained by the GBFS community on the GBFS repo. This is an incomplete list. If you have or are aware of a feed that does not appear on the list please add it.","title":"Toolbox"},{"location":"toolbox/glossary/","text":"Glossary \u00b6 API - An API (Application Program Interface) is a connection between computers or computer programs. APS are used to transmit data in order to offer services to other computers or pieces of software. A document describes how to build and use an API is called and API specification. GBFS is an API specification. Consumer - A consumer is someone who is consuming and using GBFS data. Examples of GBFS consumers are trip planning or MaaS applications, researchers and regulators. Deep link - In the context of mobile apps, deep links enable linking to specific locations within an app rather than simply launching the app. GBFS deep links can be used to check if the user has a mobility service provider\u2019s app installed on their phone. If the app is installed, the user can be sent directly to the point of purchase for the vehicle they wish to rent within the app - significantly improving the user experience. If the app is not installed , they can be directed to the appropriate app store for download before continuing with the rental process. Endpoint - An endpoint is the specific digital location where a resource lives. GBFS endpoints are URLs that point to each of the files in a GBFS data set. The gbfs.json file contains a list of all the available endpoints in a gbfs data set. Feed - A feed, in the context of GBFS, is another name for an API endpoint or collection of endpoints. The term feed may be used in reference to a single file or the collection of files that make up a GBFS implementation. Geofencing - A geofence is a virtual boundary that defines a geographic area. When a shared mobility vehicle enters or exits a geofenced area, events can be triggered, for example a push notification can be sent to a user\u2019s phone. Geofencing may be used to delineate pick up and drop off zones, no-ride zones, speed limit zones, equity zones, etc. Producer - A producer is any entity that is publishing GBFS, most often producers are shared mobility system operators. Producer is sometimes used interchangeably with provider. Station - A station is a location where shared mobility vehicles are made available for rent. Stations may include physical infrastructure like rental kiosks, docks or racks, or they may be virtual, delineated by pavement markings, geofencing or other means. System - A system in the context of GBFS is a shared mobility service from a single provider represented by e GBFS data set. Systems are typically limited to the local geography in which they operate. A single mobility service provider may operate in many geographic locations, each of which would be considered a separate system. Systems may span municipal or political boundaries in cases where vehicles are permitted to operate across multiple jurisdictions. If a user could reasonably expect to be able to rent a vehicle in one jurisdiction and return it in another, those jurisdictions would be considered a single system. Vehicle - A system\u2019s fleet is made up of individual vehicles. Some systems may have multiple vehicle types, whereas others may only have one. Examples of shared mobility vehicles are bikes, ebikes, scooters, mopeds and automobiles.","title":"Glossary"},{"location":"toolbox/glossary/#glossary","text":"API - An API (Application Program Interface) is a connection between computers or computer programs. APS are used to transmit data in order to offer services to other computers or pieces of software. A document describes how to build and use an API is called and API specification. GBFS is an API specification. Consumer - A consumer is someone who is consuming and using GBFS data. Examples of GBFS consumers are trip planning or MaaS applications, researchers and regulators. Deep link - In the context of mobile apps, deep links enable linking to specific locations within an app rather than simply launching the app. GBFS deep links can be used to check if the user has a mobility service provider\u2019s app installed on their phone. If the app is installed, the user can be sent directly to the point of purchase for the vehicle they wish to rent within the app - significantly improving the user experience. If the app is not installed , they can be directed to the appropriate app store for download before continuing with the rental process. Endpoint - An endpoint is the specific digital location where a resource lives. GBFS endpoints are URLs that point to each of the files in a GBFS data set. The gbfs.json file contains a list of all the available endpoints in a gbfs data set. Feed - A feed, in the context of GBFS, is another name for an API endpoint or collection of endpoints. The term feed may be used in reference to a single file or the collection of files that make up a GBFS implementation. Geofencing - A geofence is a virtual boundary that defines a geographic area. When a shared mobility vehicle enters or exits a geofenced area, events can be triggered, for example a push notification can be sent to a user\u2019s phone. Geofencing may be used to delineate pick up and drop off zones, no-ride zones, speed limit zones, equity zones, etc. Producer - A producer is any entity that is publishing GBFS, most often producers are shared mobility system operators. Producer is sometimes used interchangeably with provider. Station - A station is a location where shared mobility vehicles are made available for rent. Stations may include physical infrastructure like rental kiosks, docks or racks, or they may be virtual, delineated by pavement markings, geofencing or other means. System - A system in the context of GBFS is a shared mobility service from a single provider represented by e GBFS data set. Systems are typically limited to the local geography in which they operate. A single mobility service provider may operate in many geographic locations, each of which would be considered a separate system. Systems may span municipal or political boundaries in cases where vehicles are permitted to operate across multiple jurisdictions. If a user could reasonably expect to be able to rent a vehicle in one jurisdiction and return it in another, those jurisdictions would be considered a single system. Vehicle - A system\u2019s fleet is made up of individual vehicles. Some systems may have multiple vehicle types, whereas others may only have one. Examples of shared mobility vehicles are bikes, ebikes, scooters, mopeds and automobiles.","title":"Glossary"},{"location":"toolbox/resources/","text":"Community Tools and Resources \u00b6 There are a multitude of tools and services available to help with the creation, implementation, and consumption of GBFS. Below is an extensive, although by no means exhaustive, list of tools and services. Data \u00b6 Third Party GBFS URL Directories \u00b6 Bike Share Research : BSR aims to facilitate the curation of bikeshare service data through collaborative and open data platforms while making it API accessible. Proprietary (non-standard) Vendor APIs \u00b6 CityBikes : REST API for aggregated bikeshare data from around the world. Powered by pyBikes . fluctuo Data Flow : Realtime vehicles location API. Exhaustive and reliable standardized data on free-floating mobility services available in real-time. Software for Creating APIs \u00b6 mapintelligenceagency/gbfsQL : Wraps any number of GBFS feeds into an easily consumable GraphQL API. Merges relevant feeds and supports real-time updates for clients via Websockets/GraphQL Subscriptions. OneBusAway : A Java app that consumes GTFS and GTFS-Realtime (along with other formats ) and turns them into an easy to use REST API . OpenTripPlanner : An open source platform for multi-modal and multi-agency journey planning, as well as returning information about a multi-modal graph (using data sources such as GTFS and OpenStreetMap ). pyBikes : Software powering CityBikes for worldwide bikeshare system info. Apps \u00b6 Web Apps \u00b6 Bikeshare Map : Global real-time maps of bikeshare systems around the world. Meddin Bike-sharing World Map : A map of the world's bike share services. CityMapper Webapp : Webapp with trip planner and route status for over 30 cities. OpenTripPlanner Client GWT : A Google Web Toolkit-based web interface for OpenTripPlanner. OpenTripPlanner.json : A Javascript-based client for OpenTripPlanner. 1-Click : A virtual \u201ctrip aggregator\u201d that assembles information on a wide variety of available modes: public transit, private, rail, rideshare, carpool, volunteer, paratransit, and walking and baking. Open-source on GitHub . Native Apps (open source) \u00b6 findmybikes : an Android app for trip planning and automatic recording ( source code ). MonTransit : an Android app for trip planning and automatic recording ( source code ). OneBusAway Android ( source code ) Fire Phone ( source code ) Google Glass GDK ( source code ) iOS ( source code ) Windows Phone ( source code ) Windows 8 ( source code ) OpenTripPlanner Android iOS Native Apps (closed source) \u00b6 CityMapper Moovit Tiramisu Transit Transit VeloDispo Visualizations \u00b6 GBFS/Open Data Viewer : Visualize micromobility and other open data. GBFS-Viewer : View micromobility data in your browser. GBFS Validation and Visualization : The French NAP has developed a web interface to visualise GBFS feeds. Libraries \u00b6 BikeshareClient : dotnet client for GBFS written in C#. Enables dotnet developers to create apps and services using data from GBFS Bikeshare systems. Analysis Tools \u00b6 gbfs R package : Functions to interface with GBFS feeds in R, allowing users to save and accumulate tidy .rds datasets for specified cities/bikeshare programs. Validators \u00b6 GBFS Validator : Go implementation of client, server and validator for GBFS Other Multimodal Data Formats \u00b6 Alliance for Parking Data Standards (APDS) : Formed by the International Parking Institute , the British Parking Association , and the European Parking Association , APDS is a not-for-profit organization with the mission to develop, promote, manage, and maintain a uniform global standard that will allow organizations to share parking data across platforms worldwide. City Data Standard - Mobility : An open data standard for data exchange between cities and shared mobility operators. Data Standards and Guidance for Transportation Planning and Traffic Operations : Standards and/or guidance to be used and adopted by the transportation community collecting, managing, an sharing status and real-time data for transportation planning and operations. Dyno-Demand : A GTFS-based travel demand data format focusing on individual passenger demand suitable for dynamic network modelling developed by San Francisco County Transportation Authority , LMZ LLC, and Urban Labs LLC . Dyno-Path : ( Under development ) Data from individual passenger trajectories. General Transit Feed Specification : A GTFS feed is a group of text files that contains infrequently changing transit data, like stops, routes, trips, and other schedule data. Transit agencies typically update their GTFS feed every few months. General Travel Network Specification : A planned data specification for sharing travel demand model networks. Managed and Tolled Lanes Feed Specification (MTLFS) : Proposal for a schema that comprises of MTLFS and defined the field used in all of those files developed by Santa Clara Valley Transportation Authority . Mobility as a Service API : A set of open documents and test suite that defines a MaaS-compatible API. Mobility Data Specification : A project of the Open Mobility Foundation (OMF), MDS is a set of Application Programming Interfaces (APIs) focused on shared mobility services such as dockless scooters, bicycles, mopeds, and carshare. Inspired by projects like GTFS and GBFS, MDS is a digital tool that helps cities better manage transportation in the public right of way. NeTex : A general purpose XML format designed for the exchange of complex static transport data among distributed systems managed by the CEN standards process . SAE Shared Mobility : Standardized terms and taxonomy for shared mobility services. TOMP- API : Transport Operator Mobility-as-a-service Provider (TOMP) API development Github. Transactional Data Specifications for Transportation Planning and Traffic Operations : Technical specifications for transactional data for entities involved in the provision of demand-responsive transportation. Transit ITS Data Exchange Specification (TIDES) Project : A proposed effort to create standard data structures, APIs, and data management tools for historical transit ITS data including AVL, APC, and AFC Data.","title":"Community Tools and Resources"},{"location":"toolbox/resources/#community-tools-and-resources","text":"There are a multitude of tools and services available to help with the creation, implementation, and consumption of GBFS. Below is an extensive, although by no means exhaustive, list of tools and services.","title":"Community Tools and Resources"},{"location":"toolbox/resources/#data","text":"","title":"Data"},{"location":"toolbox/resources/#third-party-gbfs-url-directories","text":"Bike Share Research : BSR aims to facilitate the curation of bikeshare service data through collaborative and open data platforms while making it API accessible.","title":"Third Party GBFS URL Directories"},{"location":"toolbox/resources/#proprietary-non-standard-vendor-apis","text":"CityBikes : REST API for aggregated bikeshare data from around the world. Powered by pyBikes . fluctuo Data Flow : Realtime vehicles location API. Exhaustive and reliable standardized data on free-floating mobility services available in real-time.","title":"Proprietary (non-standard) Vendor APIs"},{"location":"toolbox/resources/#software-for-creating-apis","text":"mapintelligenceagency/gbfsQL : Wraps any number of GBFS feeds into an easily consumable GraphQL API. Merges relevant feeds and supports real-time updates for clients via Websockets/GraphQL Subscriptions. OneBusAway : A Java app that consumes GTFS and GTFS-Realtime (along with other formats ) and turns them into an easy to use REST API . OpenTripPlanner : An open source platform for multi-modal and multi-agency journey planning, as well as returning information about a multi-modal graph (using data sources such as GTFS and OpenStreetMap ). pyBikes : Software powering CityBikes for worldwide bikeshare system info.","title":"Software for Creating APIs"},{"location":"toolbox/resources/#apps","text":"","title":"Apps"},{"location":"toolbox/resources/#web-apps","text":"Bikeshare Map : Global real-time maps of bikeshare systems around the world. Meddin Bike-sharing World Map : A map of the world's bike share services. CityMapper Webapp : Webapp with trip planner and route status for over 30 cities. OpenTripPlanner Client GWT : A Google Web Toolkit-based web interface for OpenTripPlanner. OpenTripPlanner.json : A Javascript-based client for OpenTripPlanner. 1-Click : A virtual \u201ctrip aggregator\u201d that assembles information on a wide variety of available modes: public transit, private, rail, rideshare, carpool, volunteer, paratransit, and walking and baking. Open-source on GitHub .","title":"Web Apps"},{"location":"toolbox/resources/#native-apps-open-source","text":"findmybikes : an Android app for trip planning and automatic recording ( source code ). MonTransit : an Android app for trip planning and automatic recording ( source code ). OneBusAway Android ( source code ) Fire Phone ( source code ) Google Glass GDK ( source code ) iOS ( source code ) Windows Phone ( source code ) Windows 8 ( source code ) OpenTripPlanner Android iOS","title":"Native Apps (open source)"},{"location":"toolbox/resources/#native-apps-closed-source","text":"CityMapper Moovit Tiramisu Transit Transit VeloDispo","title":"Native Apps (closed source)"},{"location":"toolbox/resources/#visualizations","text":"GBFS/Open Data Viewer : Visualize micromobility and other open data. GBFS-Viewer : View micromobility data in your browser. GBFS Validation and Visualization : The French NAP has developed a web interface to visualise GBFS feeds.","title":"Visualizations"},{"location":"toolbox/resources/#libraries","text":"BikeshareClient : dotnet client for GBFS written in C#. Enables dotnet developers to create apps and services using data from GBFS Bikeshare systems.","title":"Libraries"},{"location":"toolbox/resources/#analysis-tools","text":"gbfs R package : Functions to interface with GBFS feeds in R, allowing users to save and accumulate tidy .rds datasets for specified cities/bikeshare programs.","title":"Analysis Tools"},{"location":"toolbox/resources/#validators","text":"GBFS Validator : Go implementation of client, server and validator for GBFS","title":"Validators"},{"location":"toolbox/resources/#other-multimodal-data-formats","text":"Alliance for Parking Data Standards (APDS) : Formed by the International Parking Institute , the British Parking Association , and the European Parking Association , APDS is a not-for-profit organization with the mission to develop, promote, manage, and maintain a uniform global standard that will allow organizations to share parking data across platforms worldwide. City Data Standard - Mobility : An open data standard for data exchange between cities and shared mobility operators. Data Standards and Guidance for Transportation Planning and Traffic Operations : Standards and/or guidance to be used and adopted by the transportation community collecting, managing, an sharing status and real-time data for transportation planning and operations. Dyno-Demand : A GTFS-based travel demand data format focusing on individual passenger demand suitable for dynamic network modelling developed by San Francisco County Transportation Authority , LMZ LLC, and Urban Labs LLC . Dyno-Path : ( Under development ) Data from individual passenger trajectories. General Transit Feed Specification : A GTFS feed is a group of text files that contains infrequently changing transit data, like stops, routes, trips, and other schedule data. Transit agencies typically update their GTFS feed every few months. General Travel Network Specification : A planned data specification for sharing travel demand model networks. Managed and Tolled Lanes Feed Specification (MTLFS) : Proposal for a schema that comprises of MTLFS and defined the field used in all of those files developed by Santa Clara Valley Transportation Authority . Mobility as a Service API : A set of open documents and test suite that defines a MaaS-compatible API. Mobility Data Specification : A project of the Open Mobility Foundation (OMF), MDS is a set of Application Programming Interfaces (APIs) focused on shared mobility services such as dockless scooters, bicycles, mopeds, and carshare. Inspired by projects like GTFS and GBFS, MDS is a digital tool that helps cities better manage transportation in the public right of way. NeTex : A general purpose XML format designed for the exchange of complex static transport data among distributed systems managed by the CEN standards process . SAE Shared Mobility : Standardized terms and taxonomy for shared mobility services. TOMP- API : Transport Operator Mobility-as-a-service Provider (TOMP) API development Github. Transactional Data Specifications for Transportation Planning and Traffic Operations : Technical specifications for transactional data for entities involved in the provision of demand-responsive transportation. Transit ITS Data Exchange Specification (TIDES) Project : A proposed effort to create standard data structures, APIs, and data management tools for historical transit ITS data including AVL, APC, and AFC Data.","title":"Other Multimodal Data Formats"}]}